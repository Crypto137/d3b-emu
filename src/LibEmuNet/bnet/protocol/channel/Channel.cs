// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.channel {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public static partial class Channel {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_AddMemberRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.AddMemberRequest, global::bnet.protocol.channel.AddMemberRequest.Builder> internal__static_bnet_protocol_channel_AddMemberRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_RemoveMemberRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.RemoveMemberRequest, global::bnet.protocol.channel.RemoveMemberRequest.Builder> internal__static_bnet_protocol_channel_RemoveMemberRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_SendMessageRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.SendMessageRequest, global::bnet.protocol.channel.SendMessageRequest.Builder> internal__static_bnet_protocol_channel_SendMessageRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_UpdateChannelStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.UpdateChannelStateRequest, global::bnet.protocol.channel.UpdateChannelStateRequest.Builder> internal__static_bnet_protocol_channel_UpdateChannelStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_UpdateMemberStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.UpdateMemberStateRequest, global::bnet.protocol.channel.UpdateMemberStateRequest.Builder> internal__static_bnet_protocol_channel_UpdateMemberStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_DissolveRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.DissolveRequest, global::bnet.protocol.channel.DissolveRequest.Builder> internal__static_bnet_protocol_channel_DissolveRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_SetRolesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.SetRolesRequest, global::bnet.protocol.channel.SetRolesRequest.Builder> internal__static_bnet_protocol_channel_SetRolesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_AddNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.AddNotification, global::bnet.protocol.channel.AddNotification.Builder> internal__static_bnet_protocol_channel_AddNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_JoinNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.JoinNotification, global::bnet.protocol.channel.JoinNotification.Builder> internal__static_bnet_protocol_channel_JoinNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_RemoveNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.RemoveNotification, global::bnet.protocol.channel.RemoveNotification.Builder> internal__static_bnet_protocol_channel_RemoveNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_LeaveNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.LeaveNotification, global::bnet.protocol.channel.LeaveNotification.Builder> internal__static_bnet_protocol_channel_LeaveNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_SendMessageNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.SendMessageNotification, global::bnet.protocol.channel.SendMessageNotification.Builder> internal__static_bnet_protocol_channel_SendMessageNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_UpdateChannelStateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.UpdateChannelStateNotification, global::bnet.protocol.channel.UpdateChannelStateNotification.Builder> internal__static_bnet_protocol_channel_UpdateChannelStateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_UpdateMemberStateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.UpdateMemberStateNotification, global::bnet.protocol.channel.UpdateMemberStateNotification.Builder> internal__static_bnet_protocol_channel_UpdateMemberStateNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static Channel() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CihzZXJ2aWNlL2NoYW5uZWwvZGVmaW5pdGlvbi9jaGFubmVsLnByb3RvEhVi" + 
            "bmV0LnByb3RvY29sLmNoYW5uZWwaHGxpYi9wcm90b2NvbC9hdHRyaWJ1dGUu" + 
            "cHJvdG8aGWxpYi9wcm90b2NvbC9lbnRpdHkucHJvdG8aEWxpYi9ycGMvcnBj" + 
            "LnByb3RvGiNzZXJ2aWNlL2NoYW5uZWwvY2hhbm5lbF90eXBlcy5wcm90byK1" + 
            "AQoQQWRkTWVtYmVyUmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQu" + 
            "cHJvdG9jb2wuRW50aXR5SWQSMAoPbWVtYmVyX2lkZW50aXR5GAIgAigLMhcu" + 
            "Ym5ldC5wcm90b2NvbC5JZGVudGl0eRIxCgVzdGF0ZRgDIAIoCzIiLmJuZXQu" + 
            "cHJvdG9jb2wuY2hhbm5lbC5NZW1iZXJTdGF0ZRIRCglvYmplY3RfaWQYBCAC" + 
            "KAQifAoTUmVtb3ZlTWVtYmVyUmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIX" + 
            "LmJuZXQucHJvdG9jb2wuRW50aXR5SWQSKgoJbWVtYmVyX2lkGAIgAigLMhcu" + 
            "Ym5ldC5wcm90b2NvbC5FbnRpdHlJZBIOCgZyZWFzb24YAyABKA0ikAEKElNl" + 
            "bmRNZXNzYWdlUmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJv" + 
            "dG9jb2wuRW50aXR5SWQSLwoHbWVzc2FnZRgCIAIoCzIeLmJuZXQucHJvdG9j" + 
            "b2wuY2hhbm5lbC5NZXNzYWdlEh4KE3JlcXVpcmVkX3ByaXZpbGVnZXMYAyAB" + 
            "KAQ6ATAigQEKGVVwZGF0ZUNoYW5uZWxTdGF0ZVJlcXVlc3QSKQoIYWdlbnRf" + 
            "aWQYASABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEjkKDHN0YXRlX2No" + 
            "YW5nZRgCIAIoCzIjLmJuZXQucHJvdG9jb2wuY2hhbm5lbC5DaGFubmVsU3Rh" + 
            "dGUiegoYVXBkYXRlTWVtYmVyU3RhdGVSZXF1ZXN0EikKCGFnZW50X2lkGAEg" + 
            "ASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBIzCgxzdGF0ZV9jaGFuZ2UY" + 
            "AiADKAsyHS5ibmV0LnByb3RvY29sLmNoYW5uZWwuTWVtYmVyIkwKD0Rpc3Nv" + 
            "bHZlUmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wu" + 
            "RW50aXR5SWQSDgoGcmVhc29uGAIgASgNInYKD1NldFJvbGVzUmVxdWVzdBIp" + 
            "CghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSDAoE" + 
            "cm9sZRgCIAMoDRIqCgltZW1iZXJfaWQYAyADKAsyFy5ibmV0LnByb3RvY29s" + 
            "LkVudGl0eUlkIqkBCg9BZGROb3RpZmljYXRpb24SKwoEc2VsZhgBIAEoCzId" + 
            "LmJuZXQucHJvdG9jb2wuY2hhbm5lbC5NZW1iZXISLQoGbWVtYmVyGAIgAygL" + 
            "Mh0uYm5ldC5wcm90b2NvbC5jaGFubmVsLk1lbWJlchI6Cg1jaGFubmVsX3N0" + 
            "YXRlGAMgAigLMiMuYm5ldC5wcm90b2NvbC5jaGFubmVsLkNoYW5uZWxTdGF0" + 
            "ZSJBChBKb2luTm90aWZpY2F0aW9uEi0KBm1lbWJlchgBIAIoCzIdLmJuZXQu" + 
            "cHJvdG9jb2wuY2hhbm5lbC5NZW1iZXIiewoSUmVtb3ZlTm90aWZpY2F0aW9u" + 
            "EikKCGFnZW50X2lkGAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBIq" + 
            "CgltZW1iZXJfaWQYAiACKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEg4K" + 
            "BnJlYXNvbhgDIAEoDSJqChFMZWF2ZU5vdGlmaWNhdGlvbhIpCghhZ2VudF9p" + 
            "ZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSKgoJbWVtYmVyX2lk" + 
            "GAIgAigLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZCKVAQoXU2VuZE1lc3Nh" + 
            "Z2VOb3RpZmljYXRpb24SKQoIYWdlbnRfaWQYASABKAsyFy5ibmV0LnByb3Rv" + 
            "Y29sLkVudGl0eUlkEi8KB21lc3NhZ2UYAiACKAsyHi5ibmV0LnByb3RvY29s" + 
            "LmNoYW5uZWwuTWVzc2FnZRIeChNyZXF1aXJlZF9wcml2aWxlZ2VzGAMgASgE" + 
            "OgEwIoYBCh5VcGRhdGVDaGFubmVsU3RhdGVOb3RpZmljYXRpb24SKQoIYWdl" + 
            "bnRfaWQYASABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEjkKDHN0YXRl" + 
            "X2NoYW5nZRgCIAIoCzIjLmJuZXQucHJvdG9jb2wuY2hhbm5lbC5DaGFubmVs" + 
            "U3RhdGUifwodVXBkYXRlTWVtYmVyU3RhdGVOb3RpZmljYXRpb24SKQoIYWdl" + 
            "bnRfaWQYASABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEjMKDHN0YXRl" + 
            "X2NoYW5nZRgCIAMoCzIdLmJuZXQucHJvdG9jb2wuY2hhbm5lbC5NZW1iZXIy" + 
            "9gQKB0NoYW5uZWwSUQoJQWRkTWVtYmVyEicuYm5ldC5wcm90b2NvbC5jaGFu" + 
            "bmVsLkFkZE1lbWJlclJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIE" + 
            "gLUYARJXCgxSZW1vdmVNZW1iZXISKi5ibmV0LnByb3RvY29sLmNoYW5uZWwu" + 
            "UmVtb3ZlTWVtYmVyUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSA" + 
            "tRgCElUKC1NlbmRNZXNzYWdlEikuYm5ldC5wcm90b2NvbC5jaGFubmVsLlNl" + 
            "bmRNZXNzYWdlUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSAtRgD" + 
            "EmMKElVwZGF0ZUNoYW5uZWxTdGF0ZRIwLmJuZXQucHJvdG9jb2wuY2hhbm5l" + 
            "bC5VcGRhdGVDaGFubmVsU3RhdGVSZXF1ZXN0GhUuYm5ldC5wcm90b2NvbC5O" + 
            "b0RhdGEiBIC1GAQSYQoRVXBkYXRlTWVtYmVyU3RhdGUSLy5ibmV0LnByb3Rv" + 
            "Y29sLmNoYW5uZWwuVXBkYXRlTWVtYmVyU3RhdGVSZXF1ZXN0GhUuYm5ldC5w" + 
            "cm90b2NvbC5Ob0RhdGEiBIC1GAUSTwoIRGlzc29sdmUSJi5ibmV0LnByb3Rv" + 
            "Y29sLmNoYW5uZWwuRGlzc29sdmVSZXF1ZXN0GhUuYm5ldC5wcm90b2NvbC5O" + 
            "b0RhdGEiBIC1GAYSTwoIU2V0Um9sZXMSJi5ibmV0LnByb3RvY29sLmNoYW5u" + 
            "ZWwuU2V0Um9sZXNSZXF1ZXN0GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1" + 
            "GAcyvAQKDENoYW5uZWxPd25lchJtCgxHZXRDaGFubmVsSWQSKi5ibmV0LnBy" + 
            "b3RvY29sLmNoYW5uZWwuR2V0Q2hhbm5lbElkUmVxdWVzdBorLmJuZXQucHJv" + 
            "dG9jb2wuY2hhbm5lbC5HZXRDaGFubmVsSWRSZXNwb25zZSIEgLUYARJwCg1D" + 
            "cmVhdGVDaGFubmVsEisuYm5ldC5wcm90b2NvbC5jaGFubmVsLkNyZWF0ZUNo" + 
            "YW5uZWxSZXF1ZXN0GiwuYm5ldC5wcm90b2NvbC5jaGFubmVsLkNyZWF0ZUNo" + 
            "YW5uZWxSZXNwb25zZSIEgLUYAhJqCgtKb2luQ2hhbm5lbBIpLmJuZXQucHJv" + 
            "dG9jb2wuY2hhbm5lbC5Kb2luQ2hhbm5lbFJlcXVlc3QaKi5ibmV0LnByb3Rv" + 
            "Y29sLmNoYW5uZWwuSm9pbkNoYW5uZWxSZXNwb25zZSIEgLUYAxJqCgtGaW5k" + 
            "Q2hhbm5lbBIpLmJuZXQucHJvdG9jb2wuY2hhbm5lbC5GaW5kQ2hhbm5lbFJl" + 
            "cXVlc3QaKi5ibmV0LnByb3RvY29sLmNoYW5uZWwuRmluZENoYW5uZWxSZXNw" + 
            "b25zZSIEgLUYBBJzCg5HZXRDaGFubmVsSW5mbxIsLmJuZXQucHJvdG9jb2wu" + 
            "Y2hhbm5lbC5HZXRDaGFubmVsSW5mb1JlcXVlc3QaLS5ibmV0LnByb3RvY29s" + 
            "LmNoYW5uZWwuR2V0Q2hhbm5lbEluZm9SZXNwb25zZSIEgLUYBTLKBQoRQ2hh" + 
            "bm5lbFN1YnNjcmliZXISVQoJTm90aWZ5QWRkEiYuYm5ldC5wcm90b2NvbC5j" + 
            "aGFubmVsLkFkZE5vdGlmaWNhdGlvbhoaLmJuZXQucHJvdG9jb2wuTk9fUkVT" + 
            "UE9OU0UiBIC1GAESVwoKTm90aWZ5Sm9pbhInLmJuZXQucHJvdG9jb2wuY2hh" + 
            "bm5lbC5Kb2luTm90aWZpY2F0aW9uGhouYm5ldC5wcm90b2NvbC5OT19SRVNQ" + 
            "T05TRSIEgLUYAhJbCgxOb3RpZnlSZW1vdmUSKS5ibmV0LnByb3RvY29sLmNo" + 
            "YW5uZWwuUmVtb3ZlTm90aWZpY2F0aW9uGhouYm5ldC5wcm90b2NvbC5OT19S" + 
            "RVNQT05TRSIEgLUYAxJZCgtOb3RpZnlMZWF2ZRIoLmJuZXQucHJvdG9jb2wu" + 
            "Y2hhbm5lbC5MZWF2ZU5vdGlmaWNhdGlvbhoaLmJuZXQucHJvdG9jb2wuTk9f" + 
            "UkVTUE9OU0UiBIC1GAQSZQoRTm90aWZ5U2VuZE1lc3NhZ2USLi5ibmV0LnBy" + 
            "b3RvY29sLmNoYW5uZWwuU2VuZE1lc3NhZ2VOb3RpZmljYXRpb24aGi5ibmV0" + 
            "LnByb3RvY29sLk5PX1JFU1BPTlNFIgSAtRgFEnMKGE5vdGlmeVVwZGF0ZUNo" + 
            "YW5uZWxTdGF0ZRI1LmJuZXQucHJvdG9jb2wuY2hhbm5lbC5VcGRhdGVDaGFu" + 
            "bmVsU3RhdGVOb3RpZmljYXRpb24aGi5ibmV0LnByb3RvY29sLk5PX1JFU1BP" + 
            "TlNFIgSAtRgGEnEKF05vdGlmeVVwZGF0ZU1lbWJlclN0YXRlEjQuYm5ldC5w" + 
            "cm90b2NvbC5jaGFubmVsLlVwZGF0ZU1lbWJlclN0YXRlTm90aWZpY2F0aW9u" + 
            "GhouYm5ldC5wcm90b2NvbC5OT19SRVNQT05TRSIEgLUYB0IDgAEA");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_channel_AddMemberRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_channel_AddMemberRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.AddMemberRequest, global::bnet.protocol.channel.AddMemberRequest.Builder>(internal__static_bnet_protocol_channel_AddMemberRequest__Descriptor,
                  new string[] { "AgentId", "MemberIdentity", "State", "ObjectId", });
          internal__static_bnet_protocol_channel_RemoveMemberRequest__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_channel_RemoveMemberRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.RemoveMemberRequest, global::bnet.protocol.channel.RemoveMemberRequest.Builder>(internal__static_bnet_protocol_channel_RemoveMemberRequest__Descriptor,
                  new string[] { "AgentId", "MemberId", "Reason", });
          internal__static_bnet_protocol_channel_SendMessageRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_channel_SendMessageRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.SendMessageRequest, global::bnet.protocol.channel.SendMessageRequest.Builder>(internal__static_bnet_protocol_channel_SendMessageRequest__Descriptor,
                  new string[] { "AgentId", "Message", "RequiredPrivileges", });
          internal__static_bnet_protocol_channel_UpdateChannelStateRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_channel_UpdateChannelStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.UpdateChannelStateRequest, global::bnet.protocol.channel.UpdateChannelStateRequest.Builder>(internal__static_bnet_protocol_channel_UpdateChannelStateRequest__Descriptor,
                  new string[] { "AgentId", "StateChange", });
          internal__static_bnet_protocol_channel_UpdateMemberStateRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_channel_UpdateMemberStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.UpdateMemberStateRequest, global::bnet.protocol.channel.UpdateMemberStateRequest.Builder>(internal__static_bnet_protocol_channel_UpdateMemberStateRequest__Descriptor,
                  new string[] { "AgentId", "StateChange", });
          internal__static_bnet_protocol_channel_DissolveRequest__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bnet_protocol_channel_DissolveRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.DissolveRequest, global::bnet.protocol.channel.DissolveRequest.Builder>(internal__static_bnet_protocol_channel_DissolveRequest__Descriptor,
                  new string[] { "AgentId", "Reason", });
          internal__static_bnet_protocol_channel_SetRolesRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bnet_protocol_channel_SetRolesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.SetRolesRequest, global::bnet.protocol.channel.SetRolesRequest.Builder>(internal__static_bnet_protocol_channel_SetRolesRequest__Descriptor,
                  new string[] { "AgentId", "Role", "MemberId", });
          internal__static_bnet_protocol_channel_AddNotification__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bnet_protocol_channel_AddNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.AddNotification, global::bnet.protocol.channel.AddNotification.Builder>(internal__static_bnet_protocol_channel_AddNotification__Descriptor,
                  new string[] { "Self", "Member", "ChannelState", });
          internal__static_bnet_protocol_channel_JoinNotification__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bnet_protocol_channel_JoinNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.JoinNotification, global::bnet.protocol.channel.JoinNotification.Builder>(internal__static_bnet_protocol_channel_JoinNotification__Descriptor,
                  new string[] { "Member", });
          internal__static_bnet_protocol_channel_RemoveNotification__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bnet_protocol_channel_RemoveNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.RemoveNotification, global::bnet.protocol.channel.RemoveNotification.Builder>(internal__static_bnet_protocol_channel_RemoveNotification__Descriptor,
                  new string[] { "AgentId", "MemberId", "Reason", });
          internal__static_bnet_protocol_channel_LeaveNotification__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bnet_protocol_channel_LeaveNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.LeaveNotification, global::bnet.protocol.channel.LeaveNotification.Builder>(internal__static_bnet_protocol_channel_LeaveNotification__Descriptor,
                  new string[] { "AgentId", "MemberId", });
          internal__static_bnet_protocol_channel_SendMessageNotification__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bnet_protocol_channel_SendMessageNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.SendMessageNotification, global::bnet.protocol.channel.SendMessageNotification.Builder>(internal__static_bnet_protocol_channel_SendMessageNotification__Descriptor,
                  new string[] { "AgentId", "Message", "RequiredPrivileges", });
          internal__static_bnet_protocol_channel_UpdateChannelStateNotification__Descriptor = Descriptor.MessageTypes[12];
          internal__static_bnet_protocol_channel_UpdateChannelStateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.UpdateChannelStateNotification, global::bnet.protocol.channel.UpdateChannelStateNotification.Builder>(internal__static_bnet_protocol_channel_UpdateChannelStateNotification__Descriptor,
                  new string[] { "AgentId", "StateChange", });
          internal__static_bnet_protocol_channel_UpdateMemberStateNotification__Descriptor = Descriptor.MessageTypes[13];
          internal__static_bnet_protocol_channel_UpdateMemberStateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel.UpdateMemberStateNotification, global::bnet.protocol.channel.UpdateMemberStateNotification.Builder>(internal__static_bnet_protocol_channel_UpdateMemberStateNotification__Descriptor,
                  new string[] { "AgentId", "StateChange", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bnet.protocol.attribute.Proto.Attribute.RegisterAllExtensions(registry);
          global::bnet.protocol.Entity.RegisterAllExtensions(registry);
          global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
          global::bnet.protocol.channel.ChannelTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            global::bnet.protocol.Rpc.Descriptor, 
            global::bnet.protocol.channel.ChannelTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class AddMemberRequest : pb::GeneratedMessage<AddMemberRequest, AddMemberRequest.Builder> {
    private static readonly AddMemberRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _addMemberRequestFieldNames = new string[] { "agent_id", "member_identity", "object_id", "state" };
    private static readonly uint[] _addMemberRequestFieldTags = new uint[] { 10, 18, 32, 26 };
    public static AddMemberRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddMemberRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AddMemberRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_AddMemberRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddMemberRequest, AddMemberRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_AddMemberRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int MemberIdentityFieldNumber = 2;
    private bool hasMemberIdentity;
    private global::bnet.protocol.Identity memberIdentity_ = global::bnet.protocol.Identity.DefaultInstance;
    public bool HasMemberIdentity {
      get { return hasMemberIdentity; }
    }
    public global::bnet.protocol.Identity MemberIdentity {
      get { return memberIdentity_; }
    }
    
    public const int StateFieldNumber = 3;
    private bool hasState;
    private global::bnet.protocol.channel.MemberState state_ = global::bnet.protocol.channel.MemberState.DefaultInstance;
    public bool HasState {
      get { return hasState; }
    }
    public global::bnet.protocol.channel.MemberState State {
      get { return state_; }
    }
    
    public const int ObjectIdFieldNumber = 4;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMemberIdentity) return false;
        if (!hasState) return false;
        if (!hasObjectId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!MemberIdentity.IsInitialized) return false;
        if (!State.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addMemberRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMemberIdentity) {
        output.WriteMessage(2, field_names[1], MemberIdentity);
      }
      if (hasState) {
        output.WriteMessage(3, field_names[3], State);
      }
      if (hasObjectId) {
        output.WriteUInt64(4, field_names[2], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMemberIdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, MemberIdentity);
        }
        if (hasState) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, State);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddMemberRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddMemberRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddMemberRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddMemberRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddMemberRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AddMemberRequest result = new AddMemberRequest();
      
      protected override AddMemberRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AddMemberRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.AddMemberRequest.Descriptor; }
      }
      
      public override AddMemberRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel.AddMemberRequest.DefaultInstance; }
      }
      
      public override AddMemberRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        AddMemberRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddMemberRequest) {
          return MergeFrom((AddMemberRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddMemberRequest other) {
        if (other == global::bnet.protocol.channel.AddMemberRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMemberIdentity) {
          MergeMemberIdentity(other.MemberIdentity);
        }
        if (other.HasState) {
          MergeState(other.State);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addMemberRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addMemberRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (result.hasMemberIdentity) {
                subBuilder.MergeFrom(MemberIdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberIdentity = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.channel.MemberState.Builder subBuilder = global::bnet.protocol.channel.MemberState.CreateBuilder();
              if (result.hasState) {
                subBuilder.MergeFrom(State);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              State = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasMemberIdentity {
       get { return result.hasMemberIdentity; }
      }
      public global::bnet.protocol.Identity MemberIdentity {
        get { return result.MemberIdentity; }
        set { SetMemberIdentity(value); }
      }
      public Builder SetMemberIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMemberIdentity = true;
        result.memberIdentity_ = value;
        return this;
      }
      public Builder SetMemberIdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMemberIdentity = true;
        result.memberIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasMemberIdentity &&
            result.memberIdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.memberIdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.memberIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.memberIdentity_ = value;
        }
        result.hasMemberIdentity = true;
        return this;
      }
      public Builder ClearMemberIdentity() {
        result.hasMemberIdentity = false;
        result.memberIdentity_ = global::bnet.protocol.Identity.DefaultInstance;
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bnet.protocol.channel.MemberState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bnet.protocol.channel.MemberState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bnet.protocol.channel.MemberState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bnet.protocol.channel.MemberState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasState &&
            result.state_ != global::bnet.protocol.channel.MemberState.DefaultInstance) {
            result.state_ = global::bnet.protocol.channel.MemberState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        result.hasState = false;
        result.state_ = global::bnet.protocol.channel.MemberState.DefaultInstance;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static AddMemberRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RemoveMemberRequest : pb::GeneratedMessage<RemoveMemberRequest, RemoveMemberRequest.Builder> {
    private static readonly RemoveMemberRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _removeMemberRequestFieldNames = new string[] { "agent_id", "member_id", "reason" };
    private static readonly uint[] _removeMemberRequestFieldTags = new uint[] { 10, 18, 24 };
    public static RemoveMemberRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveMemberRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RemoveMemberRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_RemoveMemberRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveMemberRequest, RemoveMemberRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_RemoveMemberRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int MemberIdFieldNumber = 2;
    private bool hasMemberId;
    private global::bnet.protocol.EntityId memberId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bnet.protocol.EntityId MemberId {
      get { return memberId_; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMemberId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!MemberId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removeMemberRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMemberId) {
        output.WriteMessage(2, field_names[1], MemberId);
      }
      if (hasReason) {
        output.WriteUInt32(3, field_names[2], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, MemberId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemoveMemberRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveMemberRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveMemberRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveMemberRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RemoveMemberRequest result = new RemoveMemberRequest();
      
      protected override RemoveMemberRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RemoveMemberRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.RemoveMemberRequest.Descriptor; }
      }
      
      public override RemoveMemberRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel.RemoveMemberRequest.DefaultInstance; }
      }
      
      public override RemoveMemberRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RemoveMemberRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveMemberRequest) {
          return MergeFrom((RemoveMemberRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveMemberRequest other) {
        if (other == global::bnet.protocol.channel.RemoveMemberRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeMemberRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeMemberRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bnet.protocol.EntityId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasMemberId &&
            result.memberId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.memberId_ = global::bnet.protocol.EntityId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        result.hasMemberId = false;
        result.memberId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static RemoveMemberRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class SendMessageRequest : pb::GeneratedMessage<SendMessageRequest, SendMessageRequest.Builder> {
    private static readonly SendMessageRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _sendMessageRequestFieldNames = new string[] { "agent_id", "message", "required_privileges" };
    private static readonly uint[] _sendMessageRequestFieldTags = new uint[] { 10, 18, 24 };
    public static SendMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendMessageRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SendMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_SendMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendMessageRequest, SendMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_SendMessageRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private global::bnet.protocol.channel.Message message_ = global::bnet.protocol.channel.Message.DefaultInstance;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bnet.protocol.channel.Message Message {
      get { return message_; }
    }
    
    public const int RequiredPrivilegesFieldNumber = 3;
    private bool hasRequiredPrivileges;
    private ulong requiredPrivileges_;
    public bool HasRequiredPrivileges {
      get { return hasRequiredPrivileges; }
    }
    public ulong RequiredPrivileges {
      get { return requiredPrivileges_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessage) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!Message.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendMessageRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMessage) {
        output.WriteMessage(2, field_names[1], Message);
      }
      if (hasRequiredPrivileges) {
        output.WriteUInt64(3, field_names[2], RequiredPrivileges);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Message);
        }
        if (hasRequiredPrivileges) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, RequiredPrivileges);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendMessageRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SendMessageRequest result = new SendMessageRequest();
      
      protected override SendMessageRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SendMessageRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.SendMessageRequest.Descriptor; }
      }
      
      public override SendMessageRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel.SendMessageRequest.DefaultInstance; }
      }
      
      public override SendMessageRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SendMessageRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendMessageRequest) {
          return MergeFrom((SendMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendMessageRequest other) {
        if (other == global::bnet.protocol.channel.SendMessageRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        if (other.HasRequiredPrivileges) {
          RequiredPrivileges = other.RequiredPrivileges;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.channel.Message.Builder subBuilder = global::bnet.protocol.channel.Message.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasRequiredPrivileges = input.ReadUInt64(ref result.requiredPrivileges_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bnet.protocol.channel.Message Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bnet.protocol.channel.Message value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bnet.protocol.channel.Message.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bnet.protocol.channel.Message value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasMessage &&
            result.message_ != global::bnet.protocol.channel.Message.DefaultInstance) {
            result.message_ = global::bnet.protocol.channel.Message.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        result.hasMessage = false;
        result.message_ = global::bnet.protocol.channel.Message.DefaultInstance;
        return this;
      }
      
      public bool HasRequiredPrivileges {
        get { return result.hasRequiredPrivileges; }
      }
      public ulong RequiredPrivileges {
        get { return result.RequiredPrivileges; }
        set { SetRequiredPrivileges(value); }
      }
      public Builder SetRequiredPrivileges(ulong value) {
        result.hasRequiredPrivileges = true;
        result.requiredPrivileges_ = value;
        return this;
      }
      public Builder ClearRequiredPrivileges() {
        result.hasRequiredPrivileges = false;
        result.requiredPrivileges_ = 0UL;
        return this;
      }
    }
    static SendMessageRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class UpdateChannelStateRequest : pb::GeneratedMessage<UpdateChannelStateRequest, UpdateChannelStateRequest.Builder> {
    private static readonly UpdateChannelStateRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _updateChannelStateRequestFieldNames = new string[] { "agent_id", "state_change" };
    private static readonly uint[] _updateChannelStateRequestFieldTags = new uint[] { 10, 18 };
    public static UpdateChannelStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateChannelStateRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UpdateChannelStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_UpdateChannelStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateChannelStateRequest, UpdateChannelStateRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_UpdateChannelStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int StateChangeFieldNumber = 2;
    private bool hasStateChange;
    private global::bnet.protocol.channel.ChannelState stateChange_ = global::bnet.protocol.channel.ChannelState.DefaultInstance;
    public bool HasStateChange {
      get { return hasStateChange; }
    }
    public global::bnet.protocol.channel.ChannelState StateChange {
      get { return stateChange_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStateChange) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!StateChange.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateChannelStateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasStateChange) {
        output.WriteMessage(2, field_names[1], StateChange);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasStateChange) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, StateChange);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateChannelStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateChannelStateRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateChannelStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UpdateChannelStateRequest result = new UpdateChannelStateRequest();
      
      protected override UpdateChannelStateRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UpdateChannelStateRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.UpdateChannelStateRequest.Descriptor; }
      }
      
      public override UpdateChannelStateRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel.UpdateChannelStateRequest.DefaultInstance; }
      }
      
      public override UpdateChannelStateRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        UpdateChannelStateRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateChannelStateRequest) {
          return MergeFrom((UpdateChannelStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateChannelStateRequest other) {
        if (other == global::bnet.protocol.channel.UpdateChannelStateRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasStateChange) {
          MergeStateChange(other.StateChange);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateChannelStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateChannelStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.channel.ChannelState.Builder subBuilder = global::bnet.protocol.channel.ChannelState.CreateBuilder();
              if (result.hasStateChange) {
                subBuilder.MergeFrom(StateChange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StateChange = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasStateChange {
       get { return result.hasStateChange; }
      }
      public global::bnet.protocol.channel.ChannelState StateChange {
        get { return result.StateChange; }
        set { SetStateChange(value); }
      }
      public Builder SetStateChange(global::bnet.protocol.channel.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasStateChange = true;
        result.stateChange_ = value;
        return this;
      }
      public Builder SetStateChange(global::bnet.protocol.channel.ChannelState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasStateChange = true;
        result.stateChange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStateChange(global::bnet.protocol.channel.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasStateChange &&
            result.stateChange_ != global::bnet.protocol.channel.ChannelState.DefaultInstance) {
            result.stateChange_ = global::bnet.protocol.channel.ChannelState.CreateBuilder(result.stateChange_).MergeFrom(value).BuildPartial();
        } else {
          result.stateChange_ = value;
        }
        result.hasStateChange = true;
        return this;
      }
      public Builder ClearStateChange() {
        result.hasStateChange = false;
        result.stateChange_ = global::bnet.protocol.channel.ChannelState.DefaultInstance;
        return this;
      }
    }
    static UpdateChannelStateRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class UpdateMemberStateRequest : pb::GeneratedMessage<UpdateMemberStateRequest, UpdateMemberStateRequest.Builder> {
    private static readonly UpdateMemberStateRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _updateMemberStateRequestFieldNames = new string[] { "agent_id", "state_change" };
    private static readonly uint[] _updateMemberStateRequestFieldTags = new uint[] { 10, 18 };
    public static UpdateMemberStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateMemberStateRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UpdateMemberStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_UpdateMemberStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateMemberStateRequest, UpdateMemberStateRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_UpdateMemberStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int StateChangeFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.channel.Member> stateChange_ = new pbc::PopsicleList<global::bnet.protocol.channel.Member>();
    public scg::IList<global::bnet.protocol.channel.Member> StateChangeList {
      get { return stateChange_; }
    }
    public int StateChangeCount {
      get { return stateChange_.Count; }
    }
    public global::bnet.protocol.channel.Member GetStateChange(int index) {
      return stateChange_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.channel.Member element in StateChangeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateMemberStateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (stateChange_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], stateChange_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        foreach (global::bnet.protocol.channel.Member element in StateChangeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateMemberStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateMemberStateRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateMemberStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UpdateMemberStateRequest result = new UpdateMemberStateRequest();
      
      protected override UpdateMemberStateRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UpdateMemberStateRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.UpdateMemberStateRequest.Descriptor; }
      }
      
      public override UpdateMemberStateRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel.UpdateMemberStateRequest.DefaultInstance; }
      }
      
      public override UpdateMemberStateRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.stateChange_.MakeReadOnly();
        UpdateMemberStateRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateMemberStateRequest) {
          return MergeFrom((UpdateMemberStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateMemberStateRequest other) {
        if (other == global::bnet.protocol.channel.UpdateMemberStateRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.stateChange_.Count != 0) {
          base.AddRange(other.stateChange_, result.stateChange_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateMemberStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateMemberStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.stateChange_, global::bnet.protocol.channel.Member.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.channel.Member> StateChangeList {
        get { return result.stateChange_; }
      }
      public int StateChangeCount {
        get { return result.StateChangeCount; }
      }
      public global::bnet.protocol.channel.Member GetStateChange(int index) {
        return result.GetStateChange(index);
      }
      public Builder SetStateChange(int index, global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.stateChange_[index] = value;
        return this;
      }
      public Builder SetStateChange(int index, global::bnet.protocol.channel.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.stateChange_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStateChange(global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.stateChange_.Add(value);
        return this;
      }
      public Builder AddStateChange(global::bnet.protocol.channel.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.stateChange_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStateChange(scg::IEnumerable<global::bnet.protocol.channel.Member> values) {
        base.AddRange(values, result.stateChange_);
        return this;
      }
      public Builder ClearStateChange() {
        result.stateChange_.Clear();
        return this;
      }
    }
    static UpdateMemberStateRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class DissolveRequest : pb::GeneratedMessage<DissolveRequest, DissolveRequest.Builder> {
    private static readonly DissolveRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _dissolveRequestFieldNames = new string[] { "agent_id", "reason" };
    private static readonly uint[] _dissolveRequestFieldTags = new uint[] { 10, 16 };
    public static DissolveRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DissolveRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override DissolveRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_DissolveRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DissolveRequest, DissolveRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_DissolveRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dissolveRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasReason) {
        output.WriteUInt32(2, field_names[1], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DissolveRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DissolveRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DissolveRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DissolveRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DissolveRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<DissolveRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      DissolveRequest result = new DissolveRequest();
      
      protected override DissolveRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new DissolveRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.DissolveRequest.Descriptor; }
      }
      
      public override DissolveRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel.DissolveRequest.DefaultInstance; }
      }
      
      public override DissolveRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        DissolveRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DissolveRequest) {
          return MergeFrom((DissolveRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DissolveRequest other) {
        if (other == global::bnet.protocol.channel.DissolveRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dissolveRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dissolveRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static DissolveRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class SetRolesRequest : pb::GeneratedMessage<SetRolesRequest, SetRolesRequest.Builder> {
    private static readonly SetRolesRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _setRolesRequestFieldNames = new string[] { "agent_id", "member_id", "role" };
    private static readonly uint[] _setRolesRequestFieldTags = new uint[] { 10, 26, 16 };
    public static SetRolesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetRolesRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SetRolesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_SetRolesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetRolesRequest, SetRolesRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_SetRolesRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int RoleFieldNumber = 2;
    private pbc::PopsicleList<uint> role_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> RoleList {
      get { return pbc::Lists.AsReadOnly(role_); }
    }
    public int RoleCount {
      get { return role_.Count; }
    }
    public uint GetRole(int index) {
      return role_[index];
    }
    
    public const int MemberIdFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> memberId_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> MemberIdList {
      get { return memberId_; }
    }
    public int MemberIdCount {
      get { return memberId_.Count; }
    }
    public global::bnet.protocol.EntityId GetMemberId(int index) {
      return memberId_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.EntityId element in MemberIdList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setRolesRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (role_.Count > 0) {
        output.WriteUInt32Array(2, field_names[2], role_);
      }
      if (memberId_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], memberId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        {
          int dataSize = 0;
          foreach (uint element in RoleList) {
            dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * role_.Count;
        }
        foreach (global::bnet.protocol.EntityId element in MemberIdList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetRolesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetRolesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetRolesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetRolesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetRolesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetRolesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetRolesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetRolesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetRolesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetRolesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetRolesRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetRolesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SetRolesRequest result = new SetRolesRequest();
      
      protected override SetRolesRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SetRolesRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.SetRolesRequest.Descriptor; }
      }
      
      public override SetRolesRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel.SetRolesRequest.DefaultInstance; }
      }
      
      public override SetRolesRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.role_.MakeReadOnly();
        result.memberId_.MakeReadOnly();
        SetRolesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetRolesRequest) {
          return MergeFrom((SetRolesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetRolesRequest other) {
        if (other == global::bnet.protocol.channel.SetRolesRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.role_.Count != 0) {
          base.AddRange(other.role_, result.role_);
        }
        if (other.memberId_.Count != 0) {
          base.AddRange(other.memberId_, result.memberId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setRolesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setRolesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.role_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.memberId_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public pbc::IPopsicleList<uint> RoleList {
        get { return result.role_; }
      }
      public int RoleCount {
        get { return result.RoleCount; }
      }
      public uint GetRole(int index) {
        return result.GetRole(index);
      }
      public Builder SetRole(int index, uint value) {
        result.role_[index] = value;
        return this;
      }
      public Builder AddRole(uint value) {
        result.role_.Add(value);
        return this;
      }
      public Builder AddRangeRole(scg::IEnumerable<uint> values) {
        base.AddRange(values, result.role_);
        return this;
      }
      public Builder ClearRole() {
        result.role_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> MemberIdList {
        get { return result.memberId_; }
      }
      public int MemberIdCount {
        get { return result.MemberIdCount; }
      }
      public global::bnet.protocol.EntityId GetMemberId(int index) {
        return result.GetMemberId(index);
      }
      public Builder SetMemberId(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.memberId_[index] = value;
        return this;
      }
      public Builder SetMemberId(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.memberId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMemberId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.memberId_.Add(value);
        return this;
      }
      public Builder AddMemberId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.memberId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMemberId(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        base.AddRange(values, result.memberId_);
        return this;
      }
      public Builder ClearMemberId() {
        result.memberId_.Clear();
        return this;
      }
    }
    static SetRolesRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class AddNotification : pb::GeneratedMessage<AddNotification, AddNotification.Builder> {
    private static readonly AddNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _addNotificationFieldNames = new string[] { "channel_state", "member", "self" };
    private static readonly uint[] _addNotificationFieldTags = new uint[] { 26, 18, 10 };
    public static AddNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AddNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_AddNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddNotification, AddNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_AddNotification__FieldAccessorTable; }
    }
    
    public const int SelfFieldNumber = 1;
    private bool hasSelf;
    private global::bnet.protocol.channel.Member self_ = global::bnet.protocol.channel.Member.DefaultInstance;
    public bool HasSelf {
      get { return hasSelf; }
    }
    public global::bnet.protocol.channel.Member Self {
      get { return self_; }
    }
    
    public const int MemberFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.channel.Member> member_ = new pbc::PopsicleList<global::bnet.protocol.channel.Member>();
    public scg::IList<global::bnet.protocol.channel.Member> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bnet.protocol.channel.Member GetMember(int index) {
      return member_[index];
    }
    
    public const int ChannelStateFieldNumber = 3;
    private bool hasChannelState;
    private global::bnet.protocol.channel.ChannelState channelState_ = global::bnet.protocol.channel.ChannelState.DefaultInstance;
    public bool HasChannelState {
      get { return hasChannelState; }
    }
    public global::bnet.protocol.channel.ChannelState ChannelState {
      get { return channelState_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasChannelState) return false;
        if (HasSelf) {
          if (!Self.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.channel.Member element in MemberList) {
          if (!element.IsInitialized) return false;
        }
        if (!ChannelState.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addNotificationFieldNames;
      if (hasSelf) {
        output.WriteMessage(1, field_names[2], Self);
      }
      if (member_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], member_);
      }
      if (hasChannelState) {
        output.WriteMessage(3, field_names[0], ChannelState);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSelf) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Self);
        }
        foreach (global::bnet.protocol.channel.Member element in MemberList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasChannelState) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelState);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AddNotification result = new AddNotification();
      
      protected override AddNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AddNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.AddNotification.Descriptor; }
      }
      
      public override AddNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel.AddNotification.DefaultInstance; }
      }
      
      public override AddNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.member_.MakeReadOnly();
        AddNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddNotification) {
          return MergeFrom((AddNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddNotification other) {
        if (other == global::bnet.protocol.channel.AddNotification.DefaultInstance) return this;
        if (other.HasSelf) {
          MergeSelf(other.Self);
        }
        if (other.member_.Count != 0) {
          base.AddRange(other.member_, result.member_);
        }
        if (other.HasChannelState) {
          MergeChannelState(other.ChannelState);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.channel.Member.Builder subBuilder = global::bnet.protocol.channel.Member.CreateBuilder();
              if (result.hasSelf) {
                subBuilder.MergeFrom(Self);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Self = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.member_, global::bnet.protocol.channel.Member.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              global::bnet.protocol.channel.ChannelState.Builder subBuilder = global::bnet.protocol.channel.ChannelState.CreateBuilder();
              if (result.hasChannelState) {
                subBuilder.MergeFrom(ChannelState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelState = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSelf {
       get { return result.hasSelf; }
      }
      public global::bnet.protocol.channel.Member Self {
        get { return result.Self; }
        set { SetSelf(value); }
      }
      public Builder SetSelf(global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSelf = true;
        result.self_ = value;
        return this;
      }
      public Builder SetSelf(global::bnet.protocol.channel.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasSelf = true;
        result.self_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSelf(global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasSelf &&
            result.self_ != global::bnet.protocol.channel.Member.DefaultInstance) {
            result.self_ = global::bnet.protocol.channel.Member.CreateBuilder(result.self_).MergeFrom(value).BuildPartial();
        } else {
          result.self_ = value;
        }
        result.hasSelf = true;
        return this;
      }
      public Builder ClearSelf() {
        result.hasSelf = false;
        result.self_ = global::bnet.protocol.channel.Member.DefaultInstance;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.channel.Member> MemberList {
        get { return result.member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bnet.protocol.channel.Member GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bnet.protocol.channel.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bnet.protocol.channel.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bnet.protocol.channel.Member> values) {
        base.AddRange(values, result.member_);
        return this;
      }
      public Builder ClearMember() {
        result.member_.Clear();
        return this;
      }
      
      public bool HasChannelState {
       get { return result.hasChannelState; }
      }
      public global::bnet.protocol.channel.ChannelState ChannelState {
        get { return result.ChannelState; }
        set { SetChannelState(value); }
      }
      public Builder SetChannelState(global::bnet.protocol.channel.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasChannelState = true;
        result.channelState_ = value;
        return this;
      }
      public Builder SetChannelState(global::bnet.protocol.channel.ChannelState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasChannelState = true;
        result.channelState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelState(global::bnet.protocol.channel.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasChannelState &&
            result.channelState_ != global::bnet.protocol.channel.ChannelState.DefaultInstance) {
            result.channelState_ = global::bnet.protocol.channel.ChannelState.CreateBuilder(result.channelState_).MergeFrom(value).BuildPartial();
        } else {
          result.channelState_ = value;
        }
        result.hasChannelState = true;
        return this;
      }
      public Builder ClearChannelState() {
        result.hasChannelState = false;
        result.channelState_ = global::bnet.protocol.channel.ChannelState.DefaultInstance;
        return this;
      }
    }
    static AddNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class JoinNotification : pb::GeneratedMessage<JoinNotification, JoinNotification.Builder> {
    private static readonly JoinNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _joinNotificationFieldNames = new string[] { "member" };
    private static readonly uint[] _joinNotificationFieldTags = new uint[] { 10 };
    public static JoinNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override JoinNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_JoinNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinNotification, JoinNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_JoinNotification__FieldAccessorTable; }
    }
    
    public const int MemberFieldNumber = 1;
    private bool hasMember;
    private global::bnet.protocol.channel.Member member_ = global::bnet.protocol.channel.Member.DefaultInstance;
    public bool HasMember {
      get { return hasMember; }
    }
    public global::bnet.protocol.channel.Member Member {
      get { return member_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMember) return false;
        if (!Member.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _joinNotificationFieldNames;
      if (hasMember) {
        output.WriteMessage(1, field_names[0], Member);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMember) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Member);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static JoinNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      JoinNotification result = new JoinNotification();
      
      protected override JoinNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new JoinNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.JoinNotification.Descriptor; }
      }
      
      public override JoinNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel.JoinNotification.DefaultInstance; }
      }
      
      public override JoinNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        JoinNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinNotification) {
          return MergeFrom((JoinNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinNotification other) {
        if (other == global::bnet.protocol.channel.JoinNotification.DefaultInstance) return this;
        if (other.HasMember) {
          MergeMember(other.Member);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.channel.Member.Builder subBuilder = global::bnet.protocol.channel.Member.CreateBuilder();
              if (result.hasMember) {
                subBuilder.MergeFrom(Member);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Member = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMember {
       get { return result.hasMember; }
      }
      public global::bnet.protocol.channel.Member Member {
        get { return result.Member; }
        set { SetMember(value); }
      }
      public Builder SetMember(global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder SetMember(global::bnet.protocol.channel.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMember = true;
        result.member_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMember(global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasMember &&
            result.member_ != global::bnet.protocol.channel.Member.DefaultInstance) {
            result.member_ = global::bnet.protocol.channel.Member.CreateBuilder(result.member_).MergeFrom(value).BuildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder ClearMember() {
        result.hasMember = false;
        result.member_ = global::bnet.protocol.channel.Member.DefaultInstance;
        return this;
      }
    }
    static JoinNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RemoveNotification : pb::GeneratedMessage<RemoveNotification, RemoveNotification.Builder> {
    private static readonly RemoveNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _removeNotificationFieldNames = new string[] { "agent_id", "member_id", "reason" };
    private static readonly uint[] _removeNotificationFieldTags = new uint[] { 10, 18, 24 };
    public static RemoveNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RemoveNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_RemoveNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveNotification, RemoveNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_RemoveNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int MemberIdFieldNumber = 2;
    private bool hasMemberId;
    private global::bnet.protocol.EntityId memberId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bnet.protocol.EntityId MemberId {
      get { return memberId_; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMemberId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!MemberId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removeNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMemberId) {
        output.WriteMessage(2, field_names[1], MemberId);
      }
      if (hasReason) {
        output.WriteUInt32(3, field_names[2], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, MemberId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemoveNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RemoveNotification result = new RemoveNotification();
      
      protected override RemoveNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RemoveNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.RemoveNotification.Descriptor; }
      }
      
      public override RemoveNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel.RemoveNotification.DefaultInstance; }
      }
      
      public override RemoveNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RemoveNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveNotification) {
          return MergeFrom((RemoveNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveNotification other) {
        if (other == global::bnet.protocol.channel.RemoveNotification.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bnet.protocol.EntityId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasMemberId &&
            result.memberId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.memberId_ = global::bnet.protocol.EntityId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        result.hasMemberId = false;
        result.memberId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static RemoveNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class LeaveNotification : pb::GeneratedMessage<LeaveNotification, LeaveNotification.Builder> {
    private static readonly LeaveNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _leaveNotificationFieldNames = new string[] { "agent_id", "member_id" };
    private static readonly uint[] _leaveNotificationFieldTags = new uint[] { 10, 18 };
    public static LeaveNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LeaveNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override LeaveNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_LeaveNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LeaveNotification, LeaveNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_LeaveNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int MemberIdFieldNumber = 2;
    private bool hasMemberId;
    private global::bnet.protocol.EntityId memberId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bnet.protocol.EntityId MemberId {
      get { return memberId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMemberId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!MemberId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _leaveNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMemberId) {
        output.WriteMessage(2, field_names[1], MemberId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, MemberId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LeaveNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LeaveNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LeaveNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LeaveNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LeaveNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<LeaveNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      LeaveNotification result = new LeaveNotification();
      
      protected override LeaveNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new LeaveNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.LeaveNotification.Descriptor; }
      }
      
      public override LeaveNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel.LeaveNotification.DefaultInstance; }
      }
      
      public override LeaveNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        LeaveNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LeaveNotification) {
          return MergeFrom((LeaveNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LeaveNotification other) {
        if (other == global::bnet.protocol.channel.LeaveNotification.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_leaveNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _leaveNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bnet.protocol.EntityId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasMemberId &&
            result.memberId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.memberId_ = global::bnet.protocol.EntityId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        result.hasMemberId = false;
        result.memberId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static LeaveNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class SendMessageNotification : pb::GeneratedMessage<SendMessageNotification, SendMessageNotification.Builder> {
    private static readonly SendMessageNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _sendMessageNotificationFieldNames = new string[] { "agent_id", "message", "required_privileges" };
    private static readonly uint[] _sendMessageNotificationFieldTags = new uint[] { 10, 18, 24 };
    public static SendMessageNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendMessageNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SendMessageNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_SendMessageNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendMessageNotification, SendMessageNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_SendMessageNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private global::bnet.protocol.channel.Message message_ = global::bnet.protocol.channel.Message.DefaultInstance;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bnet.protocol.channel.Message Message {
      get { return message_; }
    }
    
    public const int RequiredPrivilegesFieldNumber = 3;
    private bool hasRequiredPrivileges;
    private ulong requiredPrivileges_;
    public bool HasRequiredPrivileges {
      get { return hasRequiredPrivileges; }
    }
    public ulong RequiredPrivileges {
      get { return requiredPrivileges_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessage) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!Message.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendMessageNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMessage) {
        output.WriteMessage(2, field_names[1], Message);
      }
      if (hasRequiredPrivileges) {
        output.WriteUInt64(3, field_names[2], RequiredPrivileges);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Message);
        }
        if (hasRequiredPrivileges) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, RequiredPrivileges);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendMessageNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendMessageNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendMessageNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendMessageNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SendMessageNotification result = new SendMessageNotification();
      
      protected override SendMessageNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SendMessageNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.SendMessageNotification.Descriptor; }
      }
      
      public override SendMessageNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel.SendMessageNotification.DefaultInstance; }
      }
      
      public override SendMessageNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SendMessageNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendMessageNotification) {
          return MergeFrom((SendMessageNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendMessageNotification other) {
        if (other == global::bnet.protocol.channel.SendMessageNotification.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        if (other.HasRequiredPrivileges) {
          RequiredPrivileges = other.RequiredPrivileges;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendMessageNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendMessageNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.channel.Message.Builder subBuilder = global::bnet.protocol.channel.Message.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasRequiredPrivileges = input.ReadUInt64(ref result.requiredPrivileges_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bnet.protocol.channel.Message Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bnet.protocol.channel.Message value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bnet.protocol.channel.Message.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bnet.protocol.channel.Message value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasMessage &&
            result.message_ != global::bnet.protocol.channel.Message.DefaultInstance) {
            result.message_ = global::bnet.protocol.channel.Message.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        result.hasMessage = false;
        result.message_ = global::bnet.protocol.channel.Message.DefaultInstance;
        return this;
      }
      
      public bool HasRequiredPrivileges {
        get { return result.hasRequiredPrivileges; }
      }
      public ulong RequiredPrivileges {
        get { return result.RequiredPrivileges; }
        set { SetRequiredPrivileges(value); }
      }
      public Builder SetRequiredPrivileges(ulong value) {
        result.hasRequiredPrivileges = true;
        result.requiredPrivileges_ = value;
        return this;
      }
      public Builder ClearRequiredPrivileges() {
        result.hasRequiredPrivileges = false;
        result.requiredPrivileges_ = 0UL;
        return this;
      }
    }
    static SendMessageNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class UpdateChannelStateNotification : pb::GeneratedMessage<UpdateChannelStateNotification, UpdateChannelStateNotification.Builder> {
    private static readonly UpdateChannelStateNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _updateChannelStateNotificationFieldNames = new string[] { "agent_id", "state_change" };
    private static readonly uint[] _updateChannelStateNotificationFieldTags = new uint[] { 10, 18 };
    public static UpdateChannelStateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateChannelStateNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UpdateChannelStateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_UpdateChannelStateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateChannelStateNotification, UpdateChannelStateNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_UpdateChannelStateNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int StateChangeFieldNumber = 2;
    private bool hasStateChange;
    private global::bnet.protocol.channel.ChannelState stateChange_ = global::bnet.protocol.channel.ChannelState.DefaultInstance;
    public bool HasStateChange {
      get { return hasStateChange; }
    }
    public global::bnet.protocol.channel.ChannelState StateChange {
      get { return stateChange_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStateChange) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!StateChange.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateChannelStateNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasStateChange) {
        output.WriteMessage(2, field_names[1], StateChange);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasStateChange) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, StateChange);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateChannelStateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateChannelStateNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateChannelStateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UpdateChannelStateNotification result = new UpdateChannelStateNotification();
      
      protected override UpdateChannelStateNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UpdateChannelStateNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.UpdateChannelStateNotification.Descriptor; }
      }
      
      public override UpdateChannelStateNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel.UpdateChannelStateNotification.DefaultInstance; }
      }
      
      public override UpdateChannelStateNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        UpdateChannelStateNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateChannelStateNotification) {
          return MergeFrom((UpdateChannelStateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateChannelStateNotification other) {
        if (other == global::bnet.protocol.channel.UpdateChannelStateNotification.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasStateChange) {
          MergeStateChange(other.StateChange);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateChannelStateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateChannelStateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.channel.ChannelState.Builder subBuilder = global::bnet.protocol.channel.ChannelState.CreateBuilder();
              if (result.hasStateChange) {
                subBuilder.MergeFrom(StateChange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StateChange = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasStateChange {
       get { return result.hasStateChange; }
      }
      public global::bnet.protocol.channel.ChannelState StateChange {
        get { return result.StateChange; }
        set { SetStateChange(value); }
      }
      public Builder SetStateChange(global::bnet.protocol.channel.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasStateChange = true;
        result.stateChange_ = value;
        return this;
      }
      public Builder SetStateChange(global::bnet.protocol.channel.ChannelState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasStateChange = true;
        result.stateChange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStateChange(global::bnet.protocol.channel.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasStateChange &&
            result.stateChange_ != global::bnet.protocol.channel.ChannelState.DefaultInstance) {
            result.stateChange_ = global::bnet.protocol.channel.ChannelState.CreateBuilder(result.stateChange_).MergeFrom(value).BuildPartial();
        } else {
          result.stateChange_ = value;
        }
        result.hasStateChange = true;
        return this;
      }
      public Builder ClearStateChange() {
        result.hasStateChange = false;
        result.stateChange_ = global::bnet.protocol.channel.ChannelState.DefaultInstance;
        return this;
      }
    }
    static UpdateChannelStateNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class UpdateMemberStateNotification : pb::GeneratedMessage<UpdateMemberStateNotification, UpdateMemberStateNotification.Builder> {
    private static readonly UpdateMemberStateNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _updateMemberStateNotificationFieldNames = new string[] { "agent_id", "state_change" };
    private static readonly uint[] _updateMemberStateNotificationFieldTags = new uint[] { 10, 18 };
    public static UpdateMemberStateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateMemberStateNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UpdateMemberStateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_UpdateMemberStateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateMemberStateNotification, UpdateMemberStateNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel.Proto.Channel.internal__static_bnet_protocol_channel_UpdateMemberStateNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int StateChangeFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.channel.Member> stateChange_ = new pbc::PopsicleList<global::bnet.protocol.channel.Member>();
    public scg::IList<global::bnet.protocol.channel.Member> StateChangeList {
      get { return stateChange_; }
    }
    public int StateChangeCount {
      get { return stateChange_.Count; }
    }
    public global::bnet.protocol.channel.Member GetStateChange(int index) {
      return stateChange_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.channel.Member element in StateChangeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateMemberStateNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (stateChange_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], stateChange_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        foreach (global::bnet.protocol.channel.Member element in StateChangeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateMemberStateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateMemberStateNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateMemberStateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UpdateMemberStateNotification result = new UpdateMemberStateNotification();
      
      protected override UpdateMemberStateNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UpdateMemberStateNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel.UpdateMemberStateNotification.Descriptor; }
      }
      
      public override UpdateMemberStateNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel.UpdateMemberStateNotification.DefaultInstance; }
      }
      
      public override UpdateMemberStateNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.stateChange_.MakeReadOnly();
        UpdateMemberStateNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateMemberStateNotification) {
          return MergeFrom((UpdateMemberStateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateMemberStateNotification other) {
        if (other == global::bnet.protocol.channel.UpdateMemberStateNotification.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.stateChange_.Count != 0) {
          base.AddRange(other.stateChange_, result.stateChange_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateMemberStateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateMemberStateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.stateChange_, global::bnet.protocol.channel.Member.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.channel.Member> StateChangeList {
        get { return result.stateChange_; }
      }
      public int StateChangeCount {
        get { return result.StateChangeCount; }
      }
      public global::bnet.protocol.channel.Member GetStateChange(int index) {
        return result.GetStateChange(index);
      }
      public Builder SetStateChange(int index, global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.stateChange_[index] = value;
        return this;
      }
      public Builder SetStateChange(int index, global::bnet.protocol.channel.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.stateChange_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStateChange(global::bnet.protocol.channel.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.stateChange_.Add(value);
        return this;
      }
      public Builder AddStateChange(global::bnet.protocol.channel.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.stateChange_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStateChange(scg::IEnumerable<global::bnet.protocol.channel.Member> values) {
        base.AddRange(values, result.stateChange_);
        return this;
      }
      public Builder ClearStateChange() {
        result.stateChange_.Clear();
        return this;
      }
    }
    static UpdateMemberStateNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel.Proto.Channel.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public abstract class Channel : pb::IService {
    public abstract void AddMember(
        pb::IRpcController controller,
        global::bnet.protocol.channel.AddMemberRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void RemoveMember(
        pb::IRpcController controller,
        global::bnet.protocol.channel.RemoveMemberRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SendMessage(
        pb::IRpcController controller,
        global::bnet.protocol.channel.SendMessageRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UpdateChannelState(
        pb::IRpcController controller,
        global::bnet.protocol.channel.UpdateChannelStateRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UpdateMemberState(
        pb::IRpcController controller,
        global::bnet.protocol.channel.UpdateMemberStateRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void Dissolve(
        pb::IRpcController controller,
        global::bnet.protocol.channel.DissolveRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SetRoles(
        pb::IRpcController controller,
        global::bnet.protocol.channel.SetRolesRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.Channel.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.AddMember(controller, (global::bnet.protocol.channel.AddMemberRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 1:
          this.RemoveMember(controller, (global::bnet.protocol.channel.RemoveMemberRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 2:
          this.SendMessage(controller, (global::bnet.protocol.channel.SendMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 3:
          this.UpdateChannelState(controller, (global::bnet.protocol.channel.UpdateChannelStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 4:
          this.UpdateMemberState(controller, (global::bnet.protocol.channel.UpdateMemberStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 5:
          this.Dissolve(controller, (global::bnet.protocol.channel.DissolveRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 6:
          this.SetRoles(controller, (global::bnet.protocol.channel.SetRolesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.channel.AddMemberRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.channel.RemoveMemberRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.channel.SendMessageRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.channel.UpdateChannelStateRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.channel.UpdateMemberStateRequest.DefaultInstance;
        case 5:
          return global::bnet.protocol.channel.DissolveRequest.DefaultInstance;
        case 6:
          return global::bnet.protocol.channel.SetRolesRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 2:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 3:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 4:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 5:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 6:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public class Stub : global::bnet.protocol.channel.Channel {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void AddMember(
          pb::IRpcController controller,
          global::bnet.protocol.channel.AddMemberRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void RemoveMember(
          pb::IRpcController controller,
          global::bnet.protocol.channel.RemoveMemberRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SendMessage(
          pb::IRpcController controller,
          global::bnet.protocol.channel.SendMessageRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UpdateChannelState(
          pb::IRpcController controller,
          global::bnet.protocol.channel.UpdateChannelStateRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UpdateMemberState(
          pb::IRpcController controller,
          global::bnet.protocol.channel.UpdateMemberStateRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void Dissolve(
          pb::IRpcController controller,
          global::bnet.protocol.channel.DissolveRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SetRoles(
          pb::IRpcController controller,
          global::bnet.protocol.channel.SetRolesRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public abstract class ChannelOwner : pb::IService {
    public abstract void GetChannelId(
        pb::IRpcController controller,
        global::bnet.protocol.channel.GetChannelIdRequest request,
        global::System.Action<global::bnet.protocol.channel.GetChannelIdResponse> done);
    public abstract void CreateChannel(
        pb::IRpcController controller,
        global::bnet.protocol.channel.CreateChannelRequest request,
        global::System.Action<global::bnet.protocol.channel.CreateChannelResponse> done);
    public abstract void JoinChannel(
        pb::IRpcController controller,
        global::bnet.protocol.channel.JoinChannelRequest request,
        global::System.Action<global::bnet.protocol.channel.JoinChannelResponse> done);
    public abstract void FindChannel(
        pb::IRpcController controller,
        global::bnet.protocol.channel.FindChannelRequest request,
        global::System.Action<global::bnet.protocol.channel.FindChannelResponse> done);
    public abstract void GetChannelInfo(
        pb::IRpcController controller,
        global::bnet.protocol.channel.GetChannelInfoRequest request,
        global::System.Action<global::bnet.protocol.channel.GetChannelInfoResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.Channel.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.GetChannelId(controller, (global::bnet.protocol.channel.GetChannelIdRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.channel.GetChannelIdResponse>(
              done));
          return;
        case 1:
          this.CreateChannel(controller, (global::bnet.protocol.channel.CreateChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.channel.CreateChannelResponse>(
              done));
          return;
        case 2:
          this.JoinChannel(controller, (global::bnet.protocol.channel.JoinChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.channel.JoinChannelResponse>(
              done));
          return;
        case 3:
          this.FindChannel(controller, (global::bnet.protocol.channel.FindChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.channel.FindChannelResponse>(
              done));
          return;
        case 4:
          this.GetChannelInfo(controller, (global::bnet.protocol.channel.GetChannelInfoRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.channel.GetChannelInfoResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.channel.GetChannelIdRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.channel.CreateChannelRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.channel.JoinChannelRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.channel.FindChannelRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.channel.GetChannelInfoRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.channel.GetChannelIdResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.channel.CreateChannelResponse.DefaultInstance;
        case 2:
          return global::bnet.protocol.channel.JoinChannelResponse.DefaultInstance;
        case 3:
          return global::bnet.protocol.channel.FindChannelResponse.DefaultInstance;
        case 4:
          return global::bnet.protocol.channel.GetChannelInfoResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public class Stub : global::bnet.protocol.channel.ChannelOwner {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void GetChannelId(
          pb::IRpcController controller,
          global::bnet.protocol.channel.GetChannelIdRequest request,
          global::System.Action<global::bnet.protocol.channel.GetChannelIdResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.channel.GetChannelIdResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.channel.GetChannelIdResponse, global::bnet.protocol.channel.GetChannelIdResponse.Builder>(done, global::bnet.protocol.channel.GetChannelIdResponse.DefaultInstance));
      }
      
      public override void CreateChannel(
          pb::IRpcController controller,
          global::bnet.protocol.channel.CreateChannelRequest request,
          global::System.Action<global::bnet.protocol.channel.CreateChannelResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.channel.CreateChannelResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.channel.CreateChannelResponse, global::bnet.protocol.channel.CreateChannelResponse.Builder>(done, global::bnet.protocol.channel.CreateChannelResponse.DefaultInstance));
      }
      
      public override void JoinChannel(
          pb::IRpcController controller,
          global::bnet.protocol.channel.JoinChannelRequest request,
          global::System.Action<global::bnet.protocol.channel.JoinChannelResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.channel.JoinChannelResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.channel.JoinChannelResponse, global::bnet.protocol.channel.JoinChannelResponse.Builder>(done, global::bnet.protocol.channel.JoinChannelResponse.DefaultInstance));
      }
      
      public override void FindChannel(
          pb::IRpcController controller,
          global::bnet.protocol.channel.FindChannelRequest request,
          global::System.Action<global::bnet.protocol.channel.FindChannelResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.channel.FindChannelResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.channel.FindChannelResponse, global::bnet.protocol.channel.FindChannelResponse.Builder>(done, global::bnet.protocol.channel.FindChannelResponse.DefaultInstance));
      }
      
      public override void GetChannelInfo(
          pb::IRpcController controller,
          global::bnet.protocol.channel.GetChannelInfoRequest request,
          global::System.Action<global::bnet.protocol.channel.GetChannelInfoResponse> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.channel.GetChannelInfoResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.channel.GetChannelInfoResponse, global::bnet.protocol.channel.GetChannelInfoResponse.Builder>(done, global::bnet.protocol.channel.GetChannelInfoResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public abstract class ChannelSubscriber : pb::IService {
    public abstract void NotifyAdd(
        pb::IRpcController controller,
        global::bnet.protocol.channel.AddNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyJoin(
        pb::IRpcController controller,
        global::bnet.protocol.channel.JoinNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyRemove(
        pb::IRpcController controller,
        global::bnet.protocol.channel.RemoveNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyLeave(
        pb::IRpcController controller,
        global::bnet.protocol.channel.LeaveNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifySendMessage(
        pb::IRpcController controller,
        global::bnet.protocol.channel.SendMessageNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyUpdateChannelState(
        pb::IRpcController controller,
        global::bnet.protocol.channel.UpdateChannelStateNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyUpdateMemberState(
        pb::IRpcController controller,
        global::bnet.protocol.channel.UpdateMemberStateNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.Channel.Descriptor.Services[2]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyAdd(controller, (global::bnet.protocol.channel.AddNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.NotifyJoin(controller, (global::bnet.protocol.channel.JoinNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.NotifyRemove(controller, (global::bnet.protocol.channel.RemoveNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.NotifyLeave(controller, (global::bnet.protocol.channel.LeaveNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.NotifySendMessage(controller, (global::bnet.protocol.channel.SendMessageNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.NotifyUpdateChannelState(controller, (global::bnet.protocol.channel.UpdateChannelStateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 6:
          this.NotifyUpdateMemberState(controller, (global::bnet.protocol.channel.UpdateMemberStateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.channel.AddNotification.DefaultInstance;
        case 1:
          return global::bnet.protocol.channel.JoinNotification.DefaultInstance;
        case 2:
          return global::bnet.protocol.channel.RemoveNotification.DefaultInstance;
        case 3:
          return global::bnet.protocol.channel.LeaveNotification.DefaultInstance;
        case 4:
          return global::bnet.protocol.channel.SendMessageNotification.DefaultInstance;
        case 5:
          return global::bnet.protocol.channel.UpdateChannelStateNotification.DefaultInstance;
        case 6:
          return global::bnet.protocol.channel.UpdateMemberStateNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 6:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public class Stub : global::bnet.protocol.channel.ChannelSubscriber {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyAdd(
          pb::IRpcController controller,
          global::bnet.protocol.channel.AddNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyJoin(
          pb::IRpcController controller,
          global::bnet.protocol.channel.JoinNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyRemove(
          pb::IRpcController controller,
          global::bnet.protocol.channel.RemoveNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyLeave(
          pb::IRpcController controller,
          global::bnet.protocol.channel.LeaveNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifySendMessage(
          pb::IRpcController controller,
          global::bnet.protocol.channel.SendMessageNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyUpdateChannelState(
          pb::IRpcController controller,
          global::bnet.protocol.channel.UpdateChannelStateNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyUpdateMemberState(
          pb::IRpcController controller,
          global::bnet.protocol.channel.UpdateMemberStateNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
