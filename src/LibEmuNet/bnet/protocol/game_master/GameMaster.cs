// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.game_master {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public static partial class GameMaster {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_JoinGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.JoinGameRequest, global::bnet.protocol.game_master.JoinGameRequest.Builder> internal__static_bnet_protocol_game_master_JoinGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_JoinGameResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.JoinGameResponse, global::bnet.protocol.game_master.JoinGameResponse.Builder> internal__static_bnet_protocol_game_master_JoinGameResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_ListFactoriesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.ListFactoriesRequest, global::bnet.protocol.game_master.ListFactoriesRequest.Builder> internal__static_bnet_protocol_game_master_ListFactoriesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_ListFactoriesResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.ListFactoriesResponse, global::bnet.protocol.game_master.ListFactoriesResponse.Builder> internal__static_bnet_protocol_game_master_ListFactoriesResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_FindGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.FindGameRequest, global::bnet.protocol.game_master.FindGameRequest.Builder> internal__static_bnet_protocol_game_master_FindGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_FindGameResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.FindGameResponse, global::bnet.protocol.game_master.FindGameResponse.Builder> internal__static_bnet_protocol_game_master_FindGameResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_CancelFindGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.CancelFindGameRequest, global::bnet.protocol.game_master.CancelFindGameRequest.Builder> internal__static_bnet_protocol_game_master_CancelFindGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_GameEndedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GameEndedNotification, global::bnet.protocol.game_master.GameEndedNotification.Builder> internal__static_bnet_protocol_game_master_GameEndedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_PlayerLeftNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.PlayerLeftNotification, global::bnet.protocol.game_master.PlayerLeftNotification.Builder> internal__static_bnet_protocol_game_master_PlayerLeftNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_RegisterServerRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.RegisterServerRequest, global::bnet.protocol.game_master.RegisterServerRequest.Builder> internal__static_bnet_protocol_game_master_RegisterServerRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_UnregisterServerRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.UnregisterServerRequest, global::bnet.protocol.game_master.UnregisterServerRequest.Builder> internal__static_bnet_protocol_game_master_UnregisterServerRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_RegisterUtilitiesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.RegisterUtilitiesRequest, global::bnet.protocol.game_master.RegisterUtilitiesRequest.Builder> internal__static_bnet_protocol_game_master_RegisterUtilitiesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_UnregisterUtilitiesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.UnregisterUtilitiesRequest, global::bnet.protocol.game_master.UnregisterUtilitiesRequest.Builder> internal__static_bnet_protocol_game_master_UnregisterUtilitiesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_SubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.SubscribeRequest, global::bnet.protocol.game_master.SubscribeRequest.Builder> internal__static_bnet_protocol_game_master_SubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_SubscribeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.SubscribeResponse, global::bnet.protocol.game_master.SubscribeResponse.Builder> internal__static_bnet_protocol_game_master_SubscribeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_UnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.UnsubscribeRequest, global::bnet.protocol.game_master.UnsubscribeRequest.Builder> internal__static_bnet_protocol_game_master_UnsubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_ChangeGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.ChangeGameRequest, global::bnet.protocol.game_master.ChangeGameRequest.Builder> internal__static_bnet_protocol_game_master_ChangeGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_GetFactoryInfoRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GetFactoryInfoRequest, global::bnet.protocol.game_master.GetFactoryInfoRequest.Builder> internal__static_bnet_protocol_game_master_GetFactoryInfoRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_GetFactoryInfoResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GetFactoryInfoResponse, global::bnet.protocol.game_master.GetFactoryInfoResponse.Builder> internal__static_bnet_protocol_game_master_GetFactoryInfoResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_GetGameStatsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GetGameStatsRequest, global::bnet.protocol.game_master.GetGameStatsRequest.Builder> internal__static_bnet_protocol_game_master_GetGameStatsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_GetGameStatsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GetGameStatsResponse, global::bnet.protocol.game_master.GetGameStatsResponse.Builder> internal__static_bnet_protocol_game_master_GetGameStatsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_FactoryUpdateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.FactoryUpdateNotification, global::bnet.protocol.game_master.FactoryUpdateNotification.Builder> internal__static_bnet_protocol_game_master_FactoryUpdateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_game_master_GameFoundNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GameFoundNotification, global::bnet.protocol.game_master.GameFoundNotification.Builder> internal__static_bnet_protocol_game_master_GameFoundNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static GameMaster() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CiVzZXJ2aWNlL2dhbWVfbWFzdGVyL2dhbWVfbWFzdGVyLnByb3RvEhlibmV0" + 
            "LnByb3RvY29sLmdhbWVfbWFzdGVyGiZzZXJ2aWNlL2dhbWVfbWFzdGVyL2dh" + 
            "bWVfZmFjdG9yeS5wcm90bxolc2VydmljZS9zZXJ2ZXJfcG9vbC9zZXJ2ZXJf" + 
            "cG9vbC5wcm90bxojc2VydmljZS9jaGFubmVsL2NoYW5uZWxfdHlwZXMucHJv" + 
            "dG8aHGxpYi9wcm90b2NvbC9hdHRyaWJ1dGUucHJvdG8aGWxpYi9wcm90b2Nv" + 
            "bC9lbnRpdHkucHJvdG8aEWxpYi9ycGMvcnBjLnByb3RvGitzZXJ2aWNlL2dh" + 
            "bWVfbWFzdGVyL2dhbWVfbWFzdGVyX3R5cGVzLnByb3RvIsQBCg9Kb2luR2Ft" + 
            "ZVJlcXVlc3QSOgoLZ2FtZV9oYW5kbGUYASACKAsyJS5ibmV0LnByb3RvY29s" + 
            "LmdhbWVfbWFzdGVyLkdhbWVIYW5kbGUSMQoGcGxheWVyGAIgAygLMiEuYm5l" + 
            "dC5wcm90b2NvbC5nYW1lX21hc3Rlci5QbGF5ZXISQgoPY2hhbm5lbF9yZXF1" + 
            "ZXN0GAMgASgLMikuYm5ldC5wcm90b2NvbC5jaGFubmVsLkpvaW5DaGFubmVs" + 
            "UmVxdWVzdCJQChBKb2luR2FtZVJlc3BvbnNlEjwKDGNvbm5lY3RfaW5mbxgB" + 
            "IAMoCzImLmJuZXQucHJvdG9jb2wuZ2FtZV9tYXN0ZXIuQ29ubmVjdEluZm8i" + 
            "ggEKFExpc3RGYWN0b3JpZXNSZXF1ZXN0EjgKBmZpbHRlchgBIAIoCzIoLmJu" + 
            "ZXQucHJvdG9jb2wuYXR0cmlidXRlLkF0dHJpYnV0ZUZpbHRlchIWCgtzdGFy" + 
            "dF9pbmRleBgCIAEoDToBMBIYCgttYXhfcmVzdWx0cxgDIAEoDToDMTAwInYK" + 
            "FUxpc3RGYWN0b3JpZXNSZXNwb25zZRJGCgtkZXNjcmlwdGlvbhgBIAMoCzIx" + 
            "LmJuZXQucHJvdG9jb2wuZ2FtZV9tYXN0ZXIuR2FtZUZhY3RvcnlEZXNjcmlw" + 
            "dGlvbhIVCg10b3RhbF9yZXN1bHRzGAIgASgNIvABCg9GaW5kR2FtZVJlcXVl" + 
            "c3QSMQoGcGxheWVyGAEgAygLMiEuYm5ldC5wcm90b2NvbC5nYW1lX21hc3Rl" + 
            "ci5QbGF5ZXISEgoKZmFjdG9yeV9pZBgCIAEoBhI9Cgpwcm9wZXJ0aWVzGAMg" + 
            "ASgLMikuYm5ldC5wcm90b2NvbC5nYW1lX21hc3Rlci5HYW1lUHJvcGVydGll" + 
            "cxIRCglvYmplY3RfaWQYBCACKAQSRAoPY2hhbm5lbF9yZXF1ZXN0GAUgASgL" + 
            "MisuYm5ldC5wcm90b2NvbC5jaGFubmVsLkNyZWF0ZUNoYW5uZWxSZXF1ZXN0" + 
            "IjoKEEZpbmRHYW1lUmVzcG9uc2USEgoKcmVxdWVzdF9pZBgBIAEoBBISCgpm" + 
            "YWN0b3J5X2lkGAIgASgGIj8KFUNhbmNlbEZpbmRHYW1lUmVxdWVzdBISCgpm" + 
            "YWN0b3J5X2lkGAEgAigGEhIKCnJlcXVlc3RfaWQYAiACKAQiUwoVR2FtZUVu" + 
            "ZGVkTm90aWZpY2F0aW9uEjoKC2dhbWVfaGFuZGxlGAEgAigLMiUuYm5ldC5w" + 
            "cm90b2NvbC5nYW1lX21hc3Rlci5HYW1lSGFuZGxlIpEBChZQbGF5ZXJMZWZ0" + 
            "Tm90aWZpY2F0aW9uEjoKC2dhbWVfaGFuZGxlGAEgAigLMiUuYm5ldC5wcm90" + 
            "b2NvbC5nYW1lX21hc3Rlci5HYW1lSGFuZGxlEigKB3Rvb25faWQYAiACKAsy" + 
            "Fy5ibmV0LnByb3RvY29sLkVudGl0eUlkEhEKBnJlYXNvbhgDIAEoDToBMCKZ" + 
            "AQoVUmVnaXN0ZXJTZXJ2ZXJSZXF1ZXN0EjUKCWF0dHJpYnV0ZRgBIAMoCzIi" + 
            "LmJuZXQucHJvdG9jb2wuYXR0cmlidXRlLkF0dHJpYnV0ZRI1CgVzdGF0ZRgC" + 
            "IAEoCzImLmJuZXQucHJvdG9jb2wuc2VydmVyX3Bvb2wuU2VydmVyU3RhdGUS" + 
            "EgoKcHJvZ3JhbV9pZBgDIAIoByIZChdVbnJlZ2lzdGVyU2VydmVyUmVxdWVz" + 
            "dCKcAQoYUmVnaXN0ZXJVdGlsaXRpZXNSZXF1ZXN0EjUKCWF0dHJpYnV0ZRgB" + 
            "IAMoCzIiLmJuZXQucHJvdG9jb2wuYXR0cmlidXRlLkF0dHJpYnV0ZRI1CgVz" + 
            "dGF0ZRgCIAEoCzImLmJuZXQucHJvdG9jb2wuc2VydmVyX3Bvb2wuU2VydmVy" + 
            "U3RhdGUSEgoKcHJvZ3JhbV9pZBgDIAIoByIcChpVbnJlZ2lzdGVyVXRpbGl0" + 
            "aWVzUmVxdWVzdCIlChBTdWJzY3JpYmVSZXF1ZXN0EhEKCW9iamVjdF9pZBgB" + 
            "IAIoBCIsChFTdWJzY3JpYmVSZXNwb25zZRIXCg9zdWJzY3JpcHRpb25faWQY" + 
            "ASABKAQiLQoSVW5zdWJzY3JpYmVSZXF1ZXN0EhcKD3N1YnNjcmlwdGlvbl9p" + 
            "ZBgBIAIoBCKsAQoRQ2hhbmdlR2FtZVJlcXVlc3QSOgoLZ2FtZV9oYW5kbGUY" + 
            "ASACKAsyJS5ibmV0LnByb3RvY29sLmdhbWVfbWFzdGVyLkdhbWVIYW5kbGUS" + 
            "DAoEb3BlbhgCIAEoCBI1CglhdHRyaWJ1dGUYAyADKAsyIi5ibmV0LnByb3Rv" + 
            "Y29sLmF0dHJpYnV0ZS5BdHRyaWJ1dGUSFgoHcmVwbGFjZRgEIAEoCDoFZmFs" + 
            "c2UiKwoVR2V0RmFjdG9yeUluZm9SZXF1ZXN0EhIKCmZhY3RvcnlfaWQYASAC" + 
            "KAYikQEKFkdldEZhY3RvcnlJbmZvUmVzcG9uc2USNQoJYXR0cmlidXRlGAEg" + 
            "AygLMiIuYm5ldC5wcm90b2NvbC5hdHRyaWJ1dGUuQXR0cmlidXRlEkAKDHN0" + 
            "YXRzX2J1Y2tldBgCIAMoCzIqLmJuZXQucHJvdG9jb2wuZ2FtZV9tYXN0ZXIu" + 
            "R2FtZVN0YXRzQnVja2V0ImMKE0dldEdhbWVTdGF0c1JlcXVlc3QSEgoKZmFj" + 
            "dG9yeV9pZBgBIAIoBhI4CgZmaWx0ZXIYAiACKAsyKC5ibmV0LnByb3RvY29s" + 
            "LmF0dHJpYnV0ZS5BdHRyaWJ1dGVGaWx0ZXIiWAoUR2V0R2FtZVN0YXRzUmVz" + 
            "cG9uc2USQAoMc3RhdHNfYnVja2V0GAEgAygLMiouYm5ldC5wcm90b2NvbC5n" + 
            "YW1lX21hc3Rlci5HYW1lU3RhdHNCdWNrZXQi8QEKGUZhY3RvcnlVcGRhdGVO" + 
            "b3RpZmljYXRpb24SSgoCb3AYASACKA4yPi5ibmV0LnByb3RvY29sLmdhbWVf" + 
            "bWFzdGVyLkZhY3RvcnlVcGRhdGVOb3RpZmljYXRpb24uT3BlcmF0aW9uEkYK" + 
            "C2Rlc2NyaXB0aW9uGAIgAigLMjEuYm5ldC5wcm90b2NvbC5nYW1lX21hc3Rl" + 
            "ci5HYW1lRmFjdG9yeURlc2NyaXB0aW9uEhIKCnByb2dyYW1faWQYAyABKAci" + 
            "LAoJT3BlcmF0aW9uEgcKA0FERBABEgoKBlJFTU9WRRACEgoKBkNIQU5HRRAD" + 
            "IrwBChVHYW1lRm91bmROb3RpZmljYXRpb24SEgoKcmVxdWVzdF9pZBgBIAIo" + 
            "BBIVCgplcnJvcl9jb2RlGAIgASgNOgEwEjoKC2dhbWVfaGFuZGxlGAMgASgL" + 
            "MiUuYm5ldC5wcm90b2NvbC5nYW1lX21hc3Rlci5HYW1lSGFuZGxlEjwKDGNv" + 
            "bm5lY3RfaW5mbxgEIAMoCzImLmJuZXQucHJvdG9jb2wuZ2FtZV9tYXN0ZXIu" + 
            "Q29ubmVjdEluZm8yvgwKCkdhbWVNYXN0ZXISaQoISm9pbkdhbWUSKi5ibmV0" + 
            "LnByb3RvY29sLmdhbWVfbWFzdGVyLkpvaW5HYW1lUmVxdWVzdBorLmJuZXQu" + 
            "cHJvdG9jb2wuZ2FtZV9tYXN0ZXIuSm9pbkdhbWVSZXNwb25zZSIEgLUYARJ4" + 
            "Cg1MaXN0RmFjdG9yaWVzEi8uYm5ldC5wcm90b2NvbC5nYW1lX21hc3Rlci5M" + 
            "aXN0RmFjdG9yaWVzUmVxdWVzdBowLmJuZXQucHJvdG9jb2wuZ2FtZV9tYXN0" + 
            "ZXIuTGlzdEZhY3Rvcmllc1Jlc3BvbnNlIgSAtRgCEmkKCEZpbmRHYW1lEiou" + 
            "Ym5ldC5wcm90b2NvbC5nYW1lX21hc3Rlci5GaW5kR2FtZVJlcXVlc3QaKy5i" + 
            "bmV0LnByb3RvY29sLmdhbWVfbWFzdGVyLkZpbmRHYW1lUmVzcG9uc2UiBIC1" + 
            "GAMSXwoOQ2FuY2VsRmluZEdhbWUSMC5ibmV0LnByb3RvY29sLmdhbWVfbWFz" + 
            "dGVyLkNhbmNlbEZpbmRHYW1lUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9E" + 
            "YXRhIgSAtRgEEl8KCUdhbWVFbmRlZBIwLmJuZXQucHJvdG9jb2wuZ2FtZV9t" + 
            "YXN0ZXIuR2FtZUVuZGVkTm90aWZpY2F0aW9uGhouYm5ldC5wcm90b2NvbC5O" + 
            "T19SRVNQT05TRSIEgLUYBRJhCgpQbGF5ZXJMZWZ0EjEuYm5ldC5wcm90b2Nv" + 
            "bC5nYW1lX21hc3Rlci5QbGF5ZXJMZWZ0Tm90aWZpY2F0aW9uGhouYm5ldC5w" + 
            "cm90b2NvbC5OT19SRVNQT05TRSIEgLUYBhJfCg5SZWdpc3RlclNlcnZlchIw" + 
            "LmJuZXQucHJvdG9jb2wuZ2FtZV9tYXN0ZXIuUmVnaXN0ZXJTZXJ2ZXJSZXF1" + 
            "ZXN0GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1GAcSaAoQVW5yZWdpc3Rl" + 
            "clNlcnZlchIyLmJuZXQucHJvdG9jb2wuZ2FtZV9tYXN0ZXIuVW5yZWdpc3Rl" + 
            "clNlcnZlclJlcXVlc3QaGi5ibmV0LnByb3RvY29sLk5PX1JFU1BPTlNFIgSA" + 
            "tRgIEmUKEVJlZ2lzdGVyVXRpbGl0aWVzEjMuYm5ldC5wcm90b2NvbC5nYW1l" + 
            "X21hc3Rlci5SZWdpc3RlclV0aWxpdGllc1JlcXVlc3QaFS5ibmV0LnByb3Rv" + 
            "Y29sLk5vRGF0YSIEgLUYCRJuChNVbnJlZ2lzdGVyVXRpbGl0aWVzEjUuYm5l" + 
            "dC5wcm90b2NvbC5nYW1lX21hc3Rlci5VbnJlZ2lzdGVyVXRpbGl0aWVzUmVx" + 
            "dWVzdBoaLmJuZXQucHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAoSbAoJU3Vi" + 
            "c2NyaWJlEisuYm5ldC5wcm90b2NvbC5nYW1lX21hc3Rlci5TdWJzY3JpYmVS" + 
            "ZXF1ZXN0GiwuYm5ldC5wcm90b2NvbC5nYW1lX21hc3Rlci5TdWJzY3JpYmVS" + 
            "ZXNwb25zZSIEgLUYCxJeCgtVbnN1YnNjcmliZRItLmJuZXQucHJvdG9jb2wu" + 
            "Z2FtZV9tYXN0ZXIuVW5zdWJzY3JpYmVSZXF1ZXN0GhouYm5ldC5wcm90b2Nv" + 
            "bC5OT19SRVNQT05TRSIEgLUYDBJXCgpDaGFuZ2VHYW1lEiwuYm5ldC5wcm90" + 
            "b2NvbC5nYW1lX21hc3Rlci5DaGFuZ2VHYW1lUmVxdWVzdBoVLmJuZXQucHJv" + 
            "dG9jb2wuTm9EYXRhIgSAtRgNEnsKDkdldEZhY3RvcnlJbmZvEjAuYm5ldC5w" + 
            "cm90b2NvbC5nYW1lX21hc3Rlci5HZXRGYWN0b3J5SW5mb1JlcXVlc3QaMS5i" + 
            "bmV0LnByb3RvY29sLmdhbWVfbWFzdGVyLkdldEZhY3RvcnlJbmZvUmVzcG9u" + 
            "c2UiBIC1GA4SdQoMR2V0R2FtZVN0YXRzEi4uYm5ldC5wcm90b2NvbC5nYW1l" + 
            "X21hc3Rlci5HZXRHYW1lU3RhdHNSZXF1ZXN0Gi8uYm5ldC5wcm90b2NvbC5n" + 
            "YW1lX21hc3Rlci5HZXRHYW1lU3RhdHNSZXNwb25zZSIEgLUYDzKFAQoUR2Ft" + 
            "ZU1hc3RlclN1YnNjcmliZXISbQoTTm90aWZ5RmFjdG9yeVVwZGF0ZRI0LmJu" + 
            "ZXQucHJvdG9jb2wuZ2FtZV9tYXN0ZXIuRmFjdG9yeVVwZGF0ZU5vdGlmaWNh" + 
            "dGlvbhoaLmJuZXQucHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAEyfgoVR2Ft" + 
            "ZUZhY3RvcnlTdWJzY3JpYmVyEmUKD05vdGlmeUdhbWVGb3VuZBIwLmJuZXQu" + 
            "cHJvdG9jb2wuZ2FtZV9tYXN0ZXIuR2FtZUZvdW5kTm90aWZpY2F0aW9uGhou" + 
            "Ym5ldC5wcm90b2NvbC5OT19SRVNQT05TRSIEgLUYAUIDgAEA");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_game_master_JoinGameRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_game_master_JoinGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.JoinGameRequest, global::bnet.protocol.game_master.JoinGameRequest.Builder>(internal__static_bnet_protocol_game_master_JoinGameRequest__Descriptor,
                  new string[] { "GameHandle", "Player", "ChannelRequest", });
          internal__static_bnet_protocol_game_master_JoinGameResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_game_master_JoinGameResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.JoinGameResponse, global::bnet.protocol.game_master.JoinGameResponse.Builder>(internal__static_bnet_protocol_game_master_JoinGameResponse__Descriptor,
                  new string[] { "ConnectInfo", });
          internal__static_bnet_protocol_game_master_ListFactoriesRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_game_master_ListFactoriesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.ListFactoriesRequest, global::bnet.protocol.game_master.ListFactoriesRequest.Builder>(internal__static_bnet_protocol_game_master_ListFactoriesRequest__Descriptor,
                  new string[] { "Filter", "StartIndex", "MaxResults", });
          internal__static_bnet_protocol_game_master_ListFactoriesResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_game_master_ListFactoriesResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.ListFactoriesResponse, global::bnet.protocol.game_master.ListFactoriesResponse.Builder>(internal__static_bnet_protocol_game_master_ListFactoriesResponse__Descriptor,
                  new string[] { "Description", "TotalResults", });
          internal__static_bnet_protocol_game_master_FindGameRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_game_master_FindGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.FindGameRequest, global::bnet.protocol.game_master.FindGameRequest.Builder>(internal__static_bnet_protocol_game_master_FindGameRequest__Descriptor,
                  new string[] { "Player", "FactoryId", "Properties", "ObjectId", "ChannelRequest", });
          internal__static_bnet_protocol_game_master_FindGameResponse__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bnet_protocol_game_master_FindGameResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.FindGameResponse, global::bnet.protocol.game_master.FindGameResponse.Builder>(internal__static_bnet_protocol_game_master_FindGameResponse__Descriptor,
                  new string[] { "RequestId", "FactoryId", });
          internal__static_bnet_protocol_game_master_CancelFindGameRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bnet_protocol_game_master_CancelFindGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.CancelFindGameRequest, global::bnet.protocol.game_master.CancelFindGameRequest.Builder>(internal__static_bnet_protocol_game_master_CancelFindGameRequest__Descriptor,
                  new string[] { "FactoryId", "RequestId", });
          internal__static_bnet_protocol_game_master_GameEndedNotification__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bnet_protocol_game_master_GameEndedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GameEndedNotification, global::bnet.protocol.game_master.GameEndedNotification.Builder>(internal__static_bnet_protocol_game_master_GameEndedNotification__Descriptor,
                  new string[] { "GameHandle", });
          internal__static_bnet_protocol_game_master_PlayerLeftNotification__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bnet_protocol_game_master_PlayerLeftNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.PlayerLeftNotification, global::bnet.protocol.game_master.PlayerLeftNotification.Builder>(internal__static_bnet_protocol_game_master_PlayerLeftNotification__Descriptor,
                  new string[] { "GameHandle", "ToonId", "Reason", });
          internal__static_bnet_protocol_game_master_RegisterServerRequest__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bnet_protocol_game_master_RegisterServerRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.RegisterServerRequest, global::bnet.protocol.game_master.RegisterServerRequest.Builder>(internal__static_bnet_protocol_game_master_RegisterServerRequest__Descriptor,
                  new string[] { "Attribute", "State", "ProgramId", });
          internal__static_bnet_protocol_game_master_UnregisterServerRequest__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bnet_protocol_game_master_UnregisterServerRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.UnregisterServerRequest, global::bnet.protocol.game_master.UnregisterServerRequest.Builder>(internal__static_bnet_protocol_game_master_UnregisterServerRequest__Descriptor,
                  new string[] { });
          internal__static_bnet_protocol_game_master_RegisterUtilitiesRequest__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bnet_protocol_game_master_RegisterUtilitiesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.RegisterUtilitiesRequest, global::bnet.protocol.game_master.RegisterUtilitiesRequest.Builder>(internal__static_bnet_protocol_game_master_RegisterUtilitiesRequest__Descriptor,
                  new string[] { "Attribute", "State", "ProgramId", });
          internal__static_bnet_protocol_game_master_UnregisterUtilitiesRequest__Descriptor = Descriptor.MessageTypes[12];
          internal__static_bnet_protocol_game_master_UnregisterUtilitiesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.UnregisterUtilitiesRequest, global::bnet.protocol.game_master.UnregisterUtilitiesRequest.Builder>(internal__static_bnet_protocol_game_master_UnregisterUtilitiesRequest__Descriptor,
                  new string[] { });
          internal__static_bnet_protocol_game_master_SubscribeRequest__Descriptor = Descriptor.MessageTypes[13];
          internal__static_bnet_protocol_game_master_SubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.SubscribeRequest, global::bnet.protocol.game_master.SubscribeRequest.Builder>(internal__static_bnet_protocol_game_master_SubscribeRequest__Descriptor,
                  new string[] { "ObjectId", });
          internal__static_bnet_protocol_game_master_SubscribeResponse__Descriptor = Descriptor.MessageTypes[14];
          internal__static_bnet_protocol_game_master_SubscribeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.SubscribeResponse, global::bnet.protocol.game_master.SubscribeResponse.Builder>(internal__static_bnet_protocol_game_master_SubscribeResponse__Descriptor,
                  new string[] { "SubscriptionId", });
          internal__static_bnet_protocol_game_master_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[15];
          internal__static_bnet_protocol_game_master_UnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.UnsubscribeRequest, global::bnet.protocol.game_master.UnsubscribeRequest.Builder>(internal__static_bnet_protocol_game_master_UnsubscribeRequest__Descriptor,
                  new string[] { "SubscriptionId", });
          internal__static_bnet_protocol_game_master_ChangeGameRequest__Descriptor = Descriptor.MessageTypes[16];
          internal__static_bnet_protocol_game_master_ChangeGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.ChangeGameRequest, global::bnet.protocol.game_master.ChangeGameRequest.Builder>(internal__static_bnet_protocol_game_master_ChangeGameRequest__Descriptor,
                  new string[] { "GameHandle", "Open", "Attribute", "Replace", });
          internal__static_bnet_protocol_game_master_GetFactoryInfoRequest__Descriptor = Descriptor.MessageTypes[17];
          internal__static_bnet_protocol_game_master_GetFactoryInfoRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GetFactoryInfoRequest, global::bnet.protocol.game_master.GetFactoryInfoRequest.Builder>(internal__static_bnet_protocol_game_master_GetFactoryInfoRequest__Descriptor,
                  new string[] { "FactoryId", });
          internal__static_bnet_protocol_game_master_GetFactoryInfoResponse__Descriptor = Descriptor.MessageTypes[18];
          internal__static_bnet_protocol_game_master_GetFactoryInfoResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GetFactoryInfoResponse, global::bnet.protocol.game_master.GetFactoryInfoResponse.Builder>(internal__static_bnet_protocol_game_master_GetFactoryInfoResponse__Descriptor,
                  new string[] { "Attribute", "StatsBucket", });
          internal__static_bnet_protocol_game_master_GetGameStatsRequest__Descriptor = Descriptor.MessageTypes[19];
          internal__static_bnet_protocol_game_master_GetGameStatsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GetGameStatsRequest, global::bnet.protocol.game_master.GetGameStatsRequest.Builder>(internal__static_bnet_protocol_game_master_GetGameStatsRequest__Descriptor,
                  new string[] { "FactoryId", "Filter", });
          internal__static_bnet_protocol_game_master_GetGameStatsResponse__Descriptor = Descriptor.MessageTypes[20];
          internal__static_bnet_protocol_game_master_GetGameStatsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GetGameStatsResponse, global::bnet.protocol.game_master.GetGameStatsResponse.Builder>(internal__static_bnet_protocol_game_master_GetGameStatsResponse__Descriptor,
                  new string[] { "StatsBucket", });
          internal__static_bnet_protocol_game_master_FactoryUpdateNotification__Descriptor = Descriptor.MessageTypes[21];
          internal__static_bnet_protocol_game_master_FactoryUpdateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.FactoryUpdateNotification, global::bnet.protocol.game_master.FactoryUpdateNotification.Builder>(internal__static_bnet_protocol_game_master_FactoryUpdateNotification__Descriptor,
                  new string[] { "Op", "Description", "ProgramId", });
          internal__static_bnet_protocol_game_master_GameFoundNotification__Descriptor = Descriptor.MessageTypes[22];
          internal__static_bnet_protocol_game_master_GameFoundNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.game_master.GameFoundNotification, global::bnet.protocol.game_master.GameFoundNotification.Builder>(internal__static_bnet_protocol_game_master_GameFoundNotification__Descriptor,
                  new string[] { "RequestId", "ErrorCode", "GameHandle", "ConnectInfo", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bnet.protocol.game_master.GameFactory.RegisterAllExtensions(registry);
          global::bnet.protocol.server_pool.ServerPool.RegisterAllExtensions(registry);
          global::bnet.protocol.channel.ChannelTypes.RegisterAllExtensions(registry);
          global::bnet.protocol.attribute.Proto.Attribute.RegisterAllExtensions(registry);
          global::bnet.protocol.Entity.RegisterAllExtensions(registry);
          global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
          global::bnet.protocol.game_master.GameMasterTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bnet.protocol.game_master.GameFactory.Descriptor, 
            global::bnet.protocol.server_pool.ServerPool.Descriptor, 
            global::bnet.protocol.channel.ChannelTypes.Descriptor, 
            global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            global::bnet.protocol.Rpc.Descriptor, 
            global::bnet.protocol.game_master.GameMasterTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class JoinGameRequest : pb::GeneratedMessage<JoinGameRequest, JoinGameRequest.Builder> {
    private static readonly JoinGameRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _joinGameRequestFieldNames = new string[] { "channel_request", "game_handle", "player" };
    private static readonly uint[] _joinGameRequestFieldTags = new uint[] { 26, 10, 18 };
    public static JoinGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinGameRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override JoinGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_JoinGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinGameRequest, JoinGameRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_JoinGameRequest__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bnet.protocol.game_master.GameHandle gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bnet.protocol.game_master.GameHandle GameHandle {
      get { return gameHandle_; }
    }
    
    public const int PlayerFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.game_master.Player> player_ = new pbc::PopsicleList<global::bnet.protocol.game_master.Player>();
    public scg::IList<global::bnet.protocol.game_master.Player> PlayerList {
      get { return player_; }
    }
    public int PlayerCount {
      get { return player_.Count; }
    }
    public global::bnet.protocol.game_master.Player GetPlayer(int index) {
      return player_[index];
    }
    
    public const int ChannelRequestFieldNumber = 3;
    private bool hasChannelRequest;
    private global::bnet.protocol.channel.JoinChannelRequest channelRequest_ = global::bnet.protocol.channel.JoinChannelRequest.DefaultInstance;
    public bool HasChannelRequest {
      get { return hasChannelRequest; }
    }
    public global::bnet.protocol.channel.JoinChannelRequest ChannelRequest {
      get { return channelRequest_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameHandle) return false;
        if (!GameHandle.IsInitialized) return false;
        foreach (global::bnet.protocol.game_master.Player element in PlayerList) {
          if (!element.IsInitialized) return false;
        }
        if (HasChannelRequest) {
          if (!ChannelRequest.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _joinGameRequestFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[1], GameHandle);
      }
      if (player_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], player_);
      }
      if (hasChannelRequest) {
        output.WriteMessage(3, field_names[0], ChannelRequest);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        foreach (global::bnet.protocol.game_master.Player element in PlayerList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasChannelRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelRequest);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static JoinGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinGameRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      JoinGameRequest result = new JoinGameRequest();
      
      protected override JoinGameRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new JoinGameRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.JoinGameRequest.Descriptor; }
      }
      
      public override JoinGameRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.JoinGameRequest.DefaultInstance; }
      }
      
      public override JoinGameRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.player_.MakeReadOnly();
        JoinGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinGameRequest) {
          return MergeFrom((JoinGameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinGameRequest other) {
        if (other == global::bnet.protocol.game_master.JoinGameRequest.DefaultInstance) return this;
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.player_.Count != 0) {
          base.AddRange(other.player_, result.player_);
        }
        if (other.HasChannelRequest) {
          MergeChannelRequest(other.ChannelRequest);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinGameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinGameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.game_master.GameHandle.Builder subBuilder = global::bnet.protocol.game_master.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.player_, global::bnet.protocol.game_master.Player.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              global::bnet.protocol.channel.JoinChannelRequest.Builder subBuilder = global::bnet.protocol.channel.JoinChannelRequest.CreateBuilder();
              if (result.hasChannelRequest) {
                subBuilder.MergeFrom(ChannelRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelRequest = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bnet.protocol.game_master.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bnet.protocol.game_master.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.game_master.Player> PlayerList {
        get { return result.player_; }
      }
      public int PlayerCount {
        get { return result.PlayerCount; }
      }
      public global::bnet.protocol.game_master.Player GetPlayer(int index) {
        return result.GetPlayer(index);
      }
      public Builder SetPlayer(int index, global::bnet.protocol.game_master.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.player_[index] = value;
        return this;
      }
      public Builder SetPlayer(int index, global::bnet.protocol.game_master.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.player_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayer(global::bnet.protocol.game_master.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.player_.Add(value);
        return this;
      }
      public Builder AddPlayer(global::bnet.protocol.game_master.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.player_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayer(scg::IEnumerable<global::bnet.protocol.game_master.Player> values) {
        base.AddRange(values, result.player_);
        return this;
      }
      public Builder ClearPlayer() {
        result.player_.Clear();
        return this;
      }
      
      public bool HasChannelRequest {
       get { return result.hasChannelRequest; }
      }
      public global::bnet.protocol.channel.JoinChannelRequest ChannelRequest {
        get { return result.ChannelRequest; }
        set { SetChannelRequest(value); }
      }
      public Builder SetChannelRequest(global::bnet.protocol.channel.JoinChannelRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasChannelRequest = true;
        result.channelRequest_ = value;
        return this;
      }
      public Builder SetChannelRequest(global::bnet.protocol.channel.JoinChannelRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasChannelRequest = true;
        result.channelRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelRequest(global::bnet.protocol.channel.JoinChannelRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasChannelRequest &&
            result.channelRequest_ != global::bnet.protocol.channel.JoinChannelRequest.DefaultInstance) {
            result.channelRequest_ = global::bnet.protocol.channel.JoinChannelRequest.CreateBuilder(result.channelRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.channelRequest_ = value;
        }
        result.hasChannelRequest = true;
        return this;
      }
      public Builder ClearChannelRequest() {
        result.hasChannelRequest = false;
        result.channelRequest_ = global::bnet.protocol.channel.JoinChannelRequest.DefaultInstance;
        return this;
      }
    }
    static JoinGameRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class JoinGameResponse : pb::GeneratedMessage<JoinGameResponse, JoinGameResponse.Builder> {
    private static readonly JoinGameResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _joinGameResponseFieldNames = new string[] { "connect_info" };
    private static readonly uint[] _joinGameResponseFieldTags = new uint[] { 10 };
    public static JoinGameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinGameResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override JoinGameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_JoinGameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinGameResponse, JoinGameResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_JoinGameResponse__FieldAccessorTable; }
    }
    
    public const int ConnectInfoFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.game_master.ConnectInfo> connectInfo_ = new pbc::PopsicleList<global::bnet.protocol.game_master.ConnectInfo>();
    public scg::IList<global::bnet.protocol.game_master.ConnectInfo> ConnectInfoList {
      get { return connectInfo_; }
    }
    public int ConnectInfoCount {
      get { return connectInfo_.Count; }
    }
    public global::bnet.protocol.game_master.ConnectInfo GetConnectInfo(int index) {
      return connectInfo_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.game_master.ConnectInfo element in ConnectInfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _joinGameResponseFieldNames;
      if (connectInfo_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], connectInfo_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.game_master.ConnectInfo element in ConnectInfoList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static JoinGameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinGameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinGameResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinGameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      JoinGameResponse result = new JoinGameResponse();
      
      protected override JoinGameResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new JoinGameResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.JoinGameResponse.Descriptor; }
      }
      
      public override JoinGameResponse DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.JoinGameResponse.DefaultInstance; }
      }
      
      public override JoinGameResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.connectInfo_.MakeReadOnly();
        JoinGameResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinGameResponse) {
          return MergeFrom((JoinGameResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinGameResponse other) {
        if (other == global::bnet.protocol.game_master.JoinGameResponse.DefaultInstance) return this;
        if (other.connectInfo_.Count != 0) {
          base.AddRange(other.connectInfo_, result.connectInfo_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinGameResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinGameResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.connectInfo_, global::bnet.protocol.game_master.ConnectInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.game_master.ConnectInfo> ConnectInfoList {
        get { return result.connectInfo_; }
      }
      public int ConnectInfoCount {
        get { return result.ConnectInfoCount; }
      }
      public global::bnet.protocol.game_master.ConnectInfo GetConnectInfo(int index) {
        return result.GetConnectInfo(index);
      }
      public Builder SetConnectInfo(int index, global::bnet.protocol.game_master.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.connectInfo_[index] = value;
        return this;
      }
      public Builder SetConnectInfo(int index, global::bnet.protocol.game_master.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.connectInfo_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConnectInfo(global::bnet.protocol.game_master.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.connectInfo_.Add(value);
        return this;
      }
      public Builder AddConnectInfo(global::bnet.protocol.game_master.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.connectInfo_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConnectInfo(scg::IEnumerable<global::bnet.protocol.game_master.ConnectInfo> values) {
        base.AddRange(values, result.connectInfo_);
        return this;
      }
      public Builder ClearConnectInfo() {
        result.connectInfo_.Clear();
        return this;
      }
    }
    static JoinGameResponse() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class ListFactoriesRequest : pb::GeneratedMessage<ListFactoriesRequest, ListFactoriesRequest.Builder> {
    private static readonly ListFactoriesRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _listFactoriesRequestFieldNames = new string[] { "filter", "max_results", "start_index" };
    private static readonly uint[] _listFactoriesRequestFieldTags = new uint[] { 10, 24, 16 };
    public static ListFactoriesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListFactoriesRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ListFactoriesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_ListFactoriesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListFactoriesRequest, ListFactoriesRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_ListFactoriesRequest__FieldAccessorTable; }
    }
    
    public const int FilterFieldNumber = 1;
    private bool hasFilter;
    private global::bnet.protocol.attribute.AttributeFilter filter_ = global::bnet.protocol.attribute.AttributeFilter.DefaultInstance;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.attribute.AttributeFilter Filter {
      get { return filter_; }
    }
    
    public const int StartIndexFieldNumber = 2;
    private bool hasStartIndex;
    private uint startIndex_;
    public bool HasStartIndex {
      get { return hasStartIndex; }
    }
    public uint StartIndex {
      get { return startIndex_; }
    }
    
    public const int MaxResultsFieldNumber = 3;
    private bool hasMaxResults;
    private uint maxResults_ = 100;
    public bool HasMaxResults {
      get { return hasMaxResults; }
    }
    public uint MaxResults {
      get { return maxResults_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFilter) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _listFactoriesRequestFieldNames;
      if (hasFilter) {
        output.WriteMessage(1, field_names[0], Filter);
      }
      if (hasStartIndex) {
        output.WriteUInt32(2, field_names[2], StartIndex);
      }
      if (hasMaxResults) {
        output.WriteUInt32(3, field_names[1], MaxResults);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Filter);
        }
        if (hasStartIndex) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, StartIndex);
        }
        if (hasMaxResults) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, MaxResults);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ListFactoriesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListFactoriesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListFactoriesRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<ListFactoriesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ListFactoriesRequest result = new ListFactoriesRequest();
      
      protected override ListFactoriesRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ListFactoriesRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.ListFactoriesRequest.Descriptor; }
      }
      
      public override ListFactoriesRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.ListFactoriesRequest.DefaultInstance; }
      }
      
      public override ListFactoriesRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ListFactoriesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListFactoriesRequest) {
          return MergeFrom((ListFactoriesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListFactoriesRequest other) {
        if (other == global::bnet.protocol.game_master.ListFactoriesRequest.DefaultInstance) return this;
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasStartIndex) {
          StartIndex = other.StartIndex;
        }
        if (other.HasMaxResults) {
          MaxResults = other.MaxResults;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listFactoriesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listFactoriesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.attribute.AttributeFilter.Builder subBuilder = global::bnet.protocol.attribute.AttributeFilter.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasStartIndex = input.ReadUInt32(ref result.startIndex_);
              break;
            }
            case 24: {
              result.hasMaxResults = input.ReadUInt32(ref result.maxResults_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bnet.protocol.attribute.AttributeFilter Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.attribute.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.attribute.AttributeFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.attribute.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasFilter &&
            result.filter_ != global::bnet.protocol.attribute.AttributeFilter.DefaultInstance) {
            result.filter_ = global::bnet.protocol.attribute.AttributeFilter.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        result.hasFilter = false;
        result.filter_ = global::bnet.protocol.attribute.AttributeFilter.DefaultInstance;
        return this;
      }
      
      public bool HasStartIndex {
        get { return result.hasStartIndex; }
      }
      public uint StartIndex {
        get { return result.StartIndex; }
        set { SetStartIndex(value); }
      }
      public Builder SetStartIndex(uint value) {
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder ClearStartIndex() {
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      public bool HasMaxResults {
        get { return result.hasMaxResults; }
      }
      public uint MaxResults {
        get { return result.MaxResults; }
        set { SetMaxResults(value); }
      }
      public Builder SetMaxResults(uint value) {
        result.hasMaxResults = true;
        result.maxResults_ = value;
        return this;
      }
      public Builder ClearMaxResults() {
        result.hasMaxResults = false;
        result.maxResults_ = 100;
        return this;
      }
    }
    static ListFactoriesRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class ListFactoriesResponse : pb::GeneratedMessage<ListFactoriesResponse, ListFactoriesResponse.Builder> {
    private static readonly ListFactoriesResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _listFactoriesResponseFieldNames = new string[] { "description", "total_results" };
    private static readonly uint[] _listFactoriesResponseFieldTags = new uint[] { 10, 16 };
    public static ListFactoriesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListFactoriesResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ListFactoriesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_ListFactoriesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListFactoriesResponse, ListFactoriesResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_ListFactoriesResponse__FieldAccessorTable; }
    }
    
    public const int DescriptionFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.game_master.GameFactoryDescription> description_ = new pbc::PopsicleList<global::bnet.protocol.game_master.GameFactoryDescription>();
    public scg::IList<global::bnet.protocol.game_master.GameFactoryDescription> DescriptionList {
      get { return description_; }
    }
    public int DescriptionCount {
      get { return description_.Count; }
    }
    public global::bnet.protocol.game_master.GameFactoryDescription GetDescription(int index) {
      return description_[index];
    }
    
    public const int TotalResultsFieldNumber = 2;
    private bool hasTotalResults;
    private uint totalResults_;
    public bool HasTotalResults {
      get { return hasTotalResults; }
    }
    public uint TotalResults {
      get { return totalResults_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.game_master.GameFactoryDescription element in DescriptionList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _listFactoriesResponseFieldNames;
      if (description_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], description_);
      }
      if (hasTotalResults) {
        output.WriteUInt32(2, field_names[1], TotalResults);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.game_master.GameFactoryDescription element in DescriptionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasTotalResults) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalResults);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ListFactoriesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListFactoriesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListFactoriesResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<ListFactoriesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ListFactoriesResponse result = new ListFactoriesResponse();
      
      protected override ListFactoriesResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ListFactoriesResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.ListFactoriesResponse.Descriptor; }
      }
      
      public override ListFactoriesResponse DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.ListFactoriesResponse.DefaultInstance; }
      }
      
      public override ListFactoriesResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.description_.MakeReadOnly();
        ListFactoriesResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListFactoriesResponse) {
          return MergeFrom((ListFactoriesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListFactoriesResponse other) {
        if (other == global::bnet.protocol.game_master.ListFactoriesResponse.DefaultInstance) return this;
        if (other.description_.Count != 0) {
          base.AddRange(other.description_, result.description_);
        }
        if (other.HasTotalResults) {
          TotalResults = other.TotalResults;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listFactoriesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listFactoriesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.description_, global::bnet.protocol.game_master.GameFactoryDescription.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasTotalResults = input.ReadUInt32(ref result.totalResults_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.game_master.GameFactoryDescription> DescriptionList {
        get { return result.description_; }
      }
      public int DescriptionCount {
        get { return result.DescriptionCount; }
      }
      public global::bnet.protocol.game_master.GameFactoryDescription GetDescription(int index) {
        return result.GetDescription(index);
      }
      public Builder SetDescription(int index, global::bnet.protocol.game_master.GameFactoryDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.description_[index] = value;
        return this;
      }
      public Builder SetDescription(int index, global::bnet.protocol.game_master.GameFactoryDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.description_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDescription(global::bnet.protocol.game_master.GameFactoryDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.description_.Add(value);
        return this;
      }
      public Builder AddDescription(global::bnet.protocol.game_master.GameFactoryDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.description_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDescription(scg::IEnumerable<global::bnet.protocol.game_master.GameFactoryDescription> values) {
        base.AddRange(values, result.description_);
        return this;
      }
      public Builder ClearDescription() {
        result.description_.Clear();
        return this;
      }
      
      public bool HasTotalResults {
        get { return result.hasTotalResults; }
      }
      public uint TotalResults {
        get { return result.TotalResults; }
        set { SetTotalResults(value); }
      }
      public Builder SetTotalResults(uint value) {
        result.hasTotalResults = true;
        result.totalResults_ = value;
        return this;
      }
      public Builder ClearTotalResults() {
        result.hasTotalResults = false;
        result.totalResults_ = 0;
        return this;
      }
    }
    static ListFactoriesResponse() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class FindGameRequest : pb::GeneratedMessage<FindGameRequest, FindGameRequest.Builder> {
    private static readonly FindGameRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _findGameRequestFieldNames = new string[] { "channel_request", "factory_id", "object_id", "player", "properties" };
    private static readonly uint[] _findGameRequestFieldTags = new uint[] { 42, 17, 32, 10, 26 };
    public static FindGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FindGameRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override FindGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_FindGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FindGameRequest, FindGameRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_FindGameRequest__FieldAccessorTable; }
    }
    
    public const int PlayerFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.game_master.Player> player_ = new pbc::PopsicleList<global::bnet.protocol.game_master.Player>();
    public scg::IList<global::bnet.protocol.game_master.Player> PlayerList {
      get { return player_; }
    }
    public int PlayerCount {
      get { return player_.Count; }
    }
    public global::bnet.protocol.game_master.Player GetPlayer(int index) {
      return player_[index];
    }
    
    public const int FactoryIdFieldNumber = 2;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int PropertiesFieldNumber = 3;
    private bool hasProperties;
    private global::bnet.protocol.game_master.GameProperties properties_ = global::bnet.protocol.game_master.GameProperties.DefaultInstance;
    public bool HasProperties {
      get { return hasProperties; }
    }
    public global::bnet.protocol.game_master.GameProperties Properties {
      get { return properties_; }
    }
    
    public const int ObjectIdFieldNumber = 4;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int ChannelRequestFieldNumber = 5;
    private bool hasChannelRequest;
    private global::bnet.protocol.channel.CreateChannelRequest channelRequest_ = global::bnet.protocol.channel.CreateChannelRequest.DefaultInstance;
    public bool HasChannelRequest {
      get { return hasChannelRequest; }
    }
    public global::bnet.protocol.channel.CreateChannelRequest ChannelRequest {
      get { return channelRequest_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        foreach (global::bnet.protocol.game_master.Player element in PlayerList) {
          if (!element.IsInitialized) return false;
        }
        if (HasProperties) {
          if (!Properties.IsInitialized) return false;
        }
        if (HasChannelRequest) {
          if (!ChannelRequest.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _findGameRequestFieldNames;
      if (player_.Count > 0) {
        output.WriteMessageArray(1, field_names[3], player_);
      }
      if (hasFactoryId) {
        output.WriteFixed64(2, field_names[1], FactoryId);
      }
      if (hasProperties) {
        output.WriteMessage(3, field_names[4], Properties);
      }
      if (hasObjectId) {
        output.WriteUInt64(4, field_names[2], ObjectId);
      }
      if (hasChannelRequest) {
        output.WriteMessage(5, field_names[0], ChannelRequest);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.game_master.Player element in PlayerList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(2, FactoryId);
        }
        if (hasProperties) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Properties);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ObjectId);
        }
        if (hasChannelRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, ChannelRequest);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FindGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FindGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FindGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FindGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FindGameRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<FindGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      FindGameRequest result = new FindGameRequest();
      
      protected override FindGameRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new FindGameRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.FindGameRequest.Descriptor; }
      }
      
      public override FindGameRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.FindGameRequest.DefaultInstance; }
      }
      
      public override FindGameRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.player_.MakeReadOnly();
        FindGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FindGameRequest) {
          return MergeFrom((FindGameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FindGameRequest other) {
        if (other == global::bnet.protocol.game_master.FindGameRequest.DefaultInstance) return this;
        if (other.player_.Count != 0) {
          base.AddRange(other.player_, result.player_);
        }
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasProperties) {
          MergeProperties(other.Properties);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        if (other.HasChannelRequest) {
          MergeChannelRequest(other.ChannelRequest);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_findGameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _findGameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.player_, global::bnet.protocol.game_master.Player.DefaultInstance, extensionRegistry);
              break;
            }
            case 17: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 26: {
              global::bnet.protocol.game_master.GameProperties.Builder subBuilder = global::bnet.protocol.game_master.GameProperties.CreateBuilder();
              if (result.hasProperties) {
                subBuilder.MergeFrom(Properties);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Properties = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
            case 42: {
              global::bnet.protocol.channel.CreateChannelRequest.Builder subBuilder = global::bnet.protocol.channel.CreateChannelRequest.CreateBuilder();
              if (result.hasChannelRequest) {
                subBuilder.MergeFrom(ChannelRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelRequest = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.game_master.Player> PlayerList {
        get { return result.player_; }
      }
      public int PlayerCount {
        get { return result.PlayerCount; }
      }
      public global::bnet.protocol.game_master.Player GetPlayer(int index) {
        return result.GetPlayer(index);
      }
      public Builder SetPlayer(int index, global::bnet.protocol.game_master.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.player_[index] = value;
        return this;
      }
      public Builder SetPlayer(int index, global::bnet.protocol.game_master.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.player_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayer(global::bnet.protocol.game_master.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.player_.Add(value);
        return this;
      }
      public Builder AddPlayer(global::bnet.protocol.game_master.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.player_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayer(scg::IEnumerable<global::bnet.protocol.game_master.Player> values) {
        base.AddRange(values, result.player_);
        return this;
      }
      public Builder ClearPlayer() {
        result.player_.Clear();
        return this;
      }
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasProperties {
       get { return result.hasProperties; }
      }
      public global::bnet.protocol.game_master.GameProperties Properties {
        get { return result.Properties; }
        set { SetProperties(value); }
      }
      public Builder SetProperties(global::bnet.protocol.game_master.GameProperties value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasProperties = true;
        result.properties_ = value;
        return this;
      }
      public Builder SetProperties(global::bnet.protocol.game_master.GameProperties.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasProperties = true;
        result.properties_ = builderForValue.Build();
        return this;
      }
      public Builder MergeProperties(global::bnet.protocol.game_master.GameProperties value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasProperties &&
            result.properties_ != global::bnet.protocol.game_master.GameProperties.DefaultInstance) {
            result.properties_ = global::bnet.protocol.game_master.GameProperties.CreateBuilder(result.properties_).MergeFrom(value).BuildPartial();
        } else {
          result.properties_ = value;
        }
        result.hasProperties = true;
        return this;
      }
      public Builder ClearProperties() {
        result.hasProperties = false;
        result.properties_ = global::bnet.protocol.game_master.GameProperties.DefaultInstance;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
      
      public bool HasChannelRequest {
       get { return result.hasChannelRequest; }
      }
      public global::bnet.protocol.channel.CreateChannelRequest ChannelRequest {
        get { return result.ChannelRequest; }
        set { SetChannelRequest(value); }
      }
      public Builder SetChannelRequest(global::bnet.protocol.channel.CreateChannelRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasChannelRequest = true;
        result.channelRequest_ = value;
        return this;
      }
      public Builder SetChannelRequest(global::bnet.protocol.channel.CreateChannelRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasChannelRequest = true;
        result.channelRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelRequest(global::bnet.protocol.channel.CreateChannelRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasChannelRequest &&
            result.channelRequest_ != global::bnet.protocol.channel.CreateChannelRequest.DefaultInstance) {
            result.channelRequest_ = global::bnet.protocol.channel.CreateChannelRequest.CreateBuilder(result.channelRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.channelRequest_ = value;
        }
        result.hasChannelRequest = true;
        return this;
      }
      public Builder ClearChannelRequest() {
        result.hasChannelRequest = false;
        result.channelRequest_ = global::bnet.protocol.channel.CreateChannelRequest.DefaultInstance;
        return this;
      }
    }
    static FindGameRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class FindGameResponse : pb::GeneratedMessage<FindGameResponse, FindGameResponse.Builder> {
    private static readonly FindGameResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _findGameResponseFieldNames = new string[] { "factory_id", "request_id" };
    private static readonly uint[] _findGameResponseFieldTags = new uint[] { 17, 8 };
    public static FindGameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FindGameResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override FindGameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_FindGameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FindGameResponse, FindGameResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_FindGameResponse__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private ulong requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public ulong RequestId {
      get { return requestId_; }
    }
    
    public const int FactoryIdFieldNumber = 2;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _findGameResponseFieldNames;
      if (hasRequestId) {
        output.WriteUInt64(1, field_names[1], RequestId);
      }
      if (hasFactoryId) {
        output.WriteFixed64(2, field_names[0], FactoryId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, RequestId);
        }
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(2, FactoryId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FindGameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FindGameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FindGameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FindGameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FindGameResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<FindGameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      FindGameResponse result = new FindGameResponse();
      
      protected override FindGameResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new FindGameResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.FindGameResponse.Descriptor; }
      }
      
      public override FindGameResponse DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.FindGameResponse.DefaultInstance; }
      }
      
      public override FindGameResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        FindGameResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FindGameResponse) {
          return MergeFrom((FindGameResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FindGameResponse other) {
        if (other == global::bnet.protocol.game_master.FindGameResponse.DefaultInstance) return this;
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_findGameResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _findGameResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestId = input.ReadUInt64(ref result.requestId_);
              break;
            }
            case 17: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      public ulong RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(ulong value) {
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        result.hasRequestId = false;
        result.requestId_ = 0UL;
        return this;
      }
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
    }
    static FindGameResponse() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class CancelFindGameRequest : pb::GeneratedMessage<CancelFindGameRequest, CancelFindGameRequest.Builder> {
    private static readonly CancelFindGameRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _cancelFindGameRequestFieldNames = new string[] { "factory_id", "request_id" };
    private static readonly uint[] _cancelFindGameRequestFieldTags = new uint[] { 9, 16 };
    public static CancelFindGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CancelFindGameRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CancelFindGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_CancelFindGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CancelFindGameRequest, CancelFindGameRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_CancelFindGameRequest__FieldAccessorTable; }
    }
    
    public const int FactoryIdFieldNumber = 1;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int RequestIdFieldNumber = 2;
    private bool hasRequestId;
    private ulong requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public ulong RequestId {
      get { return requestId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFactoryId) return false;
        if (!hasRequestId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cancelFindGameRequestFieldNames;
      if (hasFactoryId) {
        output.WriteFixed64(1, field_names[0], FactoryId);
      }
      if (hasRequestId) {
        output.WriteUInt64(2, field_names[1], RequestId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, FactoryId);
        }
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RequestId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CancelFindGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelFindGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelFindGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelFindGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelFindGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelFindGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CancelFindGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CancelFindGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CancelFindGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelFindGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CancelFindGameRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<CancelFindGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CancelFindGameRequest result = new CancelFindGameRequest();
      
      protected override CancelFindGameRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CancelFindGameRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.CancelFindGameRequest.Descriptor; }
      }
      
      public override CancelFindGameRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.CancelFindGameRequest.DefaultInstance; }
      }
      
      public override CancelFindGameRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CancelFindGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CancelFindGameRequest) {
          return MergeFrom((CancelFindGameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelFindGameRequest other) {
        if (other == global::bnet.protocol.game_master.CancelFindGameRequest.DefaultInstance) return this;
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelFindGameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelFindGameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 16: {
              result.hasRequestId = input.ReadUInt64(ref result.requestId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      public ulong RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(ulong value) {
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        result.hasRequestId = false;
        result.requestId_ = 0UL;
        return this;
      }
    }
    static CancelFindGameRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class GameEndedNotification : pb::GeneratedMessage<GameEndedNotification, GameEndedNotification.Builder> {
    private static readonly GameEndedNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _gameEndedNotificationFieldNames = new string[] { "game_handle" };
    private static readonly uint[] _gameEndedNotificationFieldTags = new uint[] { 10 };
    public static GameEndedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameEndedNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GameEndedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GameEndedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameEndedNotification, GameEndedNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GameEndedNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bnet.protocol.game_master.GameHandle gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bnet.protocol.game_master.GameHandle GameHandle {
      get { return gameHandle_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameHandle) return false;
        if (!GameHandle.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameEndedNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[0], GameHandle);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameEndedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameEndedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameEndedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameEndedNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameEndedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GameEndedNotification result = new GameEndedNotification();
      
      protected override GameEndedNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GameEndedNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.GameEndedNotification.Descriptor; }
      }
      
      public override GameEndedNotification DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.GameEndedNotification.DefaultInstance; }
      }
      
      public override GameEndedNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GameEndedNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameEndedNotification) {
          return MergeFrom((GameEndedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameEndedNotification other) {
        if (other == global::bnet.protocol.game_master.GameEndedNotification.DefaultInstance) return this;
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameEndedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameEndedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.game_master.GameHandle.Builder subBuilder = global::bnet.protocol.game_master.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bnet.protocol.game_master.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bnet.protocol.game_master.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
        return this;
      }
    }
    static GameEndedNotification() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class PlayerLeftNotification : pb::GeneratedMessage<PlayerLeftNotification, PlayerLeftNotification.Builder> {
    private static readonly PlayerLeftNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _playerLeftNotificationFieldNames = new string[] { "game_handle", "reason", "toon_id" };
    private static readonly uint[] _playerLeftNotificationFieldTags = new uint[] { 10, 24, 18 };
    public static PlayerLeftNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlayerLeftNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlayerLeftNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_PlayerLeftNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlayerLeftNotification, PlayerLeftNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_PlayerLeftNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bnet.protocol.game_master.GameHandle gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bnet.protocol.game_master.GameHandle GameHandle {
      get { return gameHandle_; }
    }
    
    public const int ToonIdFieldNumber = 2;
    private bool hasToonId;
    private global::bnet.protocol.EntityId toonId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasToonId {
      get { return hasToonId; }
    }
    public global::bnet.protocol.EntityId ToonId {
      get { return toonId_; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameHandle) return false;
        if (!hasToonId) return false;
        if (!GameHandle.IsInitialized) return false;
        if (!ToonId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerLeftNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[0], GameHandle);
      }
      if (hasToonId) {
        output.WriteMessage(2, field_names[2], ToonId);
      }
      if (hasReason) {
        output.WriteUInt32(3, field_names[1], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasToonId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ToonId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlayerLeftNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeftNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlayerLeftNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlayerLeftNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlayerLeftNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlayerLeftNotification result = new PlayerLeftNotification();
      
      protected override PlayerLeftNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlayerLeftNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.PlayerLeftNotification.Descriptor; }
      }
      
      public override PlayerLeftNotification DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.PlayerLeftNotification.DefaultInstance; }
      }
      
      public override PlayerLeftNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlayerLeftNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlayerLeftNotification) {
          return MergeFrom((PlayerLeftNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerLeftNotification other) {
        if (other == global::bnet.protocol.game_master.PlayerLeftNotification.DefaultInstance) return this;
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasToonId) {
          MergeToonId(other.ToonId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerLeftNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerLeftNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.game_master.GameHandle.Builder subBuilder = global::bnet.protocol.game_master.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasToonId) {
                subBuilder.MergeFrom(ToonId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ToonId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bnet.protocol.game_master.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bnet.protocol.game_master.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
        return this;
      }
      
      public bool HasToonId {
       get { return result.hasToonId; }
      }
      public global::bnet.protocol.EntityId ToonId {
        get { return result.ToonId; }
        set { SetToonId(value); }
      }
      public Builder SetToonId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder SetToonId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasToonId = true;
        result.toonId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeToonId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasToonId &&
            result.toonId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.toonId_ = global::bnet.protocol.EntityId.CreateBuilder(result.toonId_).MergeFrom(value).BuildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder ClearToonId() {
        result.hasToonId = false;
        result.toonId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static PlayerLeftNotification() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RegisterServerRequest : pb::GeneratedMessage<RegisterServerRequest, RegisterServerRequest.Builder> {
    private static readonly RegisterServerRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _registerServerRequestFieldNames = new string[] { "attribute", "program_id", "state" };
    private static readonly uint[] _registerServerRequestFieldTags = new uint[] { 10, 29, 18 };
    public static RegisterServerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RegisterServerRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RegisterServerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_RegisterServerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RegisterServerRequest, RegisterServerRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_RegisterServerRequest__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attribute_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int StateFieldNumber = 2;
    private bool hasState;
    private global::bnet.protocol.server_pool.ServerState state_ = global::bnet.protocol.server_pool.ServerState.DefaultInstance;
    public bool HasState {
      get { return hasState; }
    }
    public global::bnet.protocol.server_pool.ServerState State {
      get { return state_; }
    }
    
    public const int ProgramIdFieldNumber = 3;
    private bool hasProgramId;
    private uint programId_;
    public bool HasProgramId {
      get { return hasProgramId; }
    }
    public uint ProgramId {
      get { return programId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgramId) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _registerServerRequestFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (hasState) {
        output.WriteMessage(2, field_names[2], State);
      }
      if (hasProgramId) {
        output.WriteFixed32(3, field_names[1], ProgramId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasState) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, State);
        }
        if (hasProgramId) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, ProgramId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RegisterServerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RegisterServerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RegisterServerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RegisterServerRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RegisterServerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RegisterServerRequest result = new RegisterServerRequest();
      
      protected override RegisterServerRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RegisterServerRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.RegisterServerRequest.Descriptor; }
      }
      
      public override RegisterServerRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.RegisterServerRequest.DefaultInstance; }
      }
      
      public override RegisterServerRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.attribute_.MakeReadOnly();
        RegisterServerRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RegisterServerRequest) {
          return MergeFrom((RegisterServerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegisterServerRequest other) {
        if (other == global::bnet.protocol.game_master.RegisterServerRequest.DefaultInstance) return this;
        if (other.attribute_.Count != 0) {
          base.AddRange(other.attribute_, result.attribute_);
        }
        if (other.HasState) {
          MergeState(other.State);
        }
        if (other.HasProgramId) {
          ProgramId = other.ProgramId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_registerServerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _registerServerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::bnet.protocol.server_pool.ServerState.Builder subBuilder = global::bnet.protocol.server_pool.ServerState.CreateBuilder();
              if (result.hasState) {
                subBuilder.MergeFrom(State);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              State = subBuilder.BuildPartial();
              break;
            }
            case 29: {
              result.hasProgramId = input.ReadFixed32(ref result.programId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributeList {
        get { return result.attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        base.AddRange(values, result.attribute_);
        return this;
      }
      public Builder ClearAttribute() {
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bnet.protocol.server_pool.ServerState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bnet.protocol.server_pool.ServerState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bnet.protocol.server_pool.ServerState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bnet.protocol.server_pool.ServerState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasState &&
            result.state_ != global::bnet.protocol.server_pool.ServerState.DefaultInstance) {
            result.state_ = global::bnet.protocol.server_pool.ServerState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        result.hasState = false;
        result.state_ = global::bnet.protocol.server_pool.ServerState.DefaultInstance;
        return this;
      }
      
      public bool HasProgramId {
        get { return result.hasProgramId; }
      }
      public uint ProgramId {
        get { return result.ProgramId; }
        set { SetProgramId(value); }
      }
      public Builder SetProgramId(uint value) {
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder ClearProgramId() {
        result.hasProgramId = false;
        result.programId_ = 0;
        return this;
      }
    }
    static RegisterServerRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class UnregisterServerRequest : pb::GeneratedMessage<UnregisterServerRequest, UnregisterServerRequest.Builder> {
    private static readonly UnregisterServerRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _unregisterServerRequestFieldNames = new string[] {  };
    private static readonly uint[] _unregisterServerRequestFieldTags = new uint[] {  };
    public static UnregisterServerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnregisterServerRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UnregisterServerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_UnregisterServerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnregisterServerRequest, UnregisterServerRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_UnregisterServerRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unregisterServerRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnregisterServerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnregisterServerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnregisterServerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnregisterServerRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnregisterServerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UnregisterServerRequest result = new UnregisterServerRequest();
      
      protected override UnregisterServerRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UnregisterServerRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.UnregisterServerRequest.Descriptor; }
      }
      
      public override UnregisterServerRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.UnregisterServerRequest.DefaultInstance; }
      }
      
      public override UnregisterServerRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        UnregisterServerRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnregisterServerRequest) {
          return MergeFrom((UnregisterServerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnregisterServerRequest other) {
        if (other == global::bnet.protocol.game_master.UnregisterServerRequest.DefaultInstance) return this;
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unregisterServerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unregisterServerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UnregisterServerRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RegisterUtilitiesRequest : pb::GeneratedMessage<RegisterUtilitiesRequest, RegisterUtilitiesRequest.Builder> {
    private static readonly RegisterUtilitiesRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _registerUtilitiesRequestFieldNames = new string[] { "attribute", "program_id", "state" };
    private static readonly uint[] _registerUtilitiesRequestFieldTags = new uint[] { 10, 29, 18 };
    public static RegisterUtilitiesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RegisterUtilitiesRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RegisterUtilitiesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_RegisterUtilitiesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RegisterUtilitiesRequest, RegisterUtilitiesRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_RegisterUtilitiesRequest__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attribute_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int StateFieldNumber = 2;
    private bool hasState;
    private global::bnet.protocol.server_pool.ServerState state_ = global::bnet.protocol.server_pool.ServerState.DefaultInstance;
    public bool HasState {
      get { return hasState; }
    }
    public global::bnet.protocol.server_pool.ServerState State {
      get { return state_; }
    }
    
    public const int ProgramIdFieldNumber = 3;
    private bool hasProgramId;
    private uint programId_;
    public bool HasProgramId {
      get { return hasProgramId; }
    }
    public uint ProgramId {
      get { return programId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgramId) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _registerUtilitiesRequestFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (hasState) {
        output.WriteMessage(2, field_names[2], State);
      }
      if (hasProgramId) {
        output.WriteFixed32(3, field_names[1], ProgramId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasState) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, State);
        }
        if (hasProgramId) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, ProgramId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RegisterUtilitiesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RegisterUtilitiesRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RegisterUtilitiesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RegisterUtilitiesRequest result = new RegisterUtilitiesRequest();
      
      protected override RegisterUtilitiesRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RegisterUtilitiesRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.RegisterUtilitiesRequest.Descriptor; }
      }
      
      public override RegisterUtilitiesRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.RegisterUtilitiesRequest.DefaultInstance; }
      }
      
      public override RegisterUtilitiesRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.attribute_.MakeReadOnly();
        RegisterUtilitiesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RegisterUtilitiesRequest) {
          return MergeFrom((RegisterUtilitiesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegisterUtilitiesRequest other) {
        if (other == global::bnet.protocol.game_master.RegisterUtilitiesRequest.DefaultInstance) return this;
        if (other.attribute_.Count != 0) {
          base.AddRange(other.attribute_, result.attribute_);
        }
        if (other.HasState) {
          MergeState(other.State);
        }
        if (other.HasProgramId) {
          ProgramId = other.ProgramId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_registerUtilitiesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _registerUtilitiesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::bnet.protocol.server_pool.ServerState.Builder subBuilder = global::bnet.protocol.server_pool.ServerState.CreateBuilder();
              if (result.hasState) {
                subBuilder.MergeFrom(State);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              State = subBuilder.BuildPartial();
              break;
            }
            case 29: {
              result.hasProgramId = input.ReadFixed32(ref result.programId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributeList {
        get { return result.attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        base.AddRange(values, result.attribute_);
        return this;
      }
      public Builder ClearAttribute() {
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bnet.protocol.server_pool.ServerState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bnet.protocol.server_pool.ServerState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bnet.protocol.server_pool.ServerState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bnet.protocol.server_pool.ServerState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasState &&
            result.state_ != global::bnet.protocol.server_pool.ServerState.DefaultInstance) {
            result.state_ = global::bnet.protocol.server_pool.ServerState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        result.hasState = false;
        result.state_ = global::bnet.protocol.server_pool.ServerState.DefaultInstance;
        return this;
      }
      
      public bool HasProgramId {
        get { return result.hasProgramId; }
      }
      public uint ProgramId {
        get { return result.ProgramId; }
        set { SetProgramId(value); }
      }
      public Builder SetProgramId(uint value) {
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder ClearProgramId() {
        result.hasProgramId = false;
        result.programId_ = 0;
        return this;
      }
    }
    static RegisterUtilitiesRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class UnregisterUtilitiesRequest : pb::GeneratedMessage<UnregisterUtilitiesRequest, UnregisterUtilitiesRequest.Builder> {
    private static readonly UnregisterUtilitiesRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _unregisterUtilitiesRequestFieldNames = new string[] {  };
    private static readonly uint[] _unregisterUtilitiesRequestFieldTags = new uint[] {  };
    public static UnregisterUtilitiesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnregisterUtilitiesRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UnregisterUtilitiesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_UnregisterUtilitiesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnregisterUtilitiesRequest, UnregisterUtilitiesRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_UnregisterUtilitiesRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unregisterUtilitiesRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnregisterUtilitiesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnregisterUtilitiesRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnregisterUtilitiesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UnregisterUtilitiesRequest result = new UnregisterUtilitiesRequest();
      
      protected override UnregisterUtilitiesRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UnregisterUtilitiesRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.UnregisterUtilitiesRequest.Descriptor; }
      }
      
      public override UnregisterUtilitiesRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.UnregisterUtilitiesRequest.DefaultInstance; }
      }
      
      public override UnregisterUtilitiesRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        UnregisterUtilitiesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnregisterUtilitiesRequest) {
          return MergeFrom((UnregisterUtilitiesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnregisterUtilitiesRequest other) {
        if (other == global::bnet.protocol.game_master.UnregisterUtilitiesRequest.DefaultInstance) return this;
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unregisterUtilitiesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unregisterUtilitiesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UnregisterUtilitiesRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private static readonly SubscribeRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _subscribeRequestFieldNames = new string[] { "object_id" };
    private static readonly uint[] _subscribeRequestFieldTags = new uint[] { 8 };
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeRequestFieldNames;
      if (hasObjectId) {
        output.WriteUInt64(1, field_names[0], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SubscribeRequest result = new SubscribeRequest();
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SubscribeRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SubscribeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeRequest) {
          return MergeFrom((SubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeRequest other) {
        if (other == global::bnet.protocol.game_master.SubscribeRequest.DefaultInstance) return this;
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class SubscribeResponse : pb::GeneratedMessage<SubscribeResponse, SubscribeResponse.Builder> {
    private static readonly SubscribeResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _subscribeResponseFieldNames = new string[] { "subscription_id" };
    private static readonly uint[] _subscribeResponseFieldTags = new uint[] { 8 };
    public static SubscribeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SubscribeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_SubscribeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeResponse, SubscribeResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_SubscribeResponse__FieldAccessorTable; }
    }
    
    public const int SubscriptionIdFieldNumber = 1;
    private bool hasSubscriptionId;
    private ulong subscriptionId_;
    public bool HasSubscriptionId {
      get { return hasSubscriptionId; }
    }
    public ulong SubscriptionId {
      get { return subscriptionId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeResponseFieldNames;
      if (hasSubscriptionId) {
        output.WriteUInt64(1, field_names[0], SubscriptionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSubscriptionId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, SubscriptionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SubscribeResponse result = new SubscribeResponse();
      
      protected override SubscribeResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SubscribeResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.SubscribeResponse.Descriptor; }
      }
      
      public override SubscribeResponse DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.SubscribeResponse.DefaultInstance; }
      }
      
      public override SubscribeResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SubscribeResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeResponse) {
          return MergeFrom((SubscribeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeResponse other) {
        if (other == global::bnet.protocol.game_master.SubscribeResponse.DefaultInstance) return this;
        if (other.HasSubscriptionId) {
          SubscriptionId = other.SubscriptionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSubscriptionId = input.ReadUInt64(ref result.subscriptionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSubscriptionId {
        get { return result.hasSubscriptionId; }
      }
      public ulong SubscriptionId {
        get { return result.SubscriptionId; }
        set { SetSubscriptionId(value); }
      }
      public Builder SetSubscriptionId(ulong value) {
        result.hasSubscriptionId = true;
        result.subscriptionId_ = value;
        return this;
      }
      public Builder ClearSubscriptionId() {
        result.hasSubscriptionId = false;
        result.subscriptionId_ = 0UL;
        return this;
      }
    }
    static SubscribeResponse() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private static readonly UnsubscribeRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _unsubscribeRequestFieldNames = new string[] { "subscription_id" };
    private static readonly uint[] _unsubscribeRequestFieldTags = new uint[] { 8 };
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int SubscriptionIdFieldNumber = 1;
    private bool hasSubscriptionId;
    private ulong subscriptionId_;
    public bool HasSubscriptionId {
      get { return hasSubscriptionId; }
    }
    public ulong SubscriptionId {
      get { return subscriptionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSubscriptionId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeRequestFieldNames;
      if (hasSubscriptionId) {
        output.WriteUInt64(1, field_names[0], SubscriptionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSubscriptionId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, SubscriptionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UnsubscribeRequest result = new UnsubscribeRequest();
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UnsubscribeRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        UnsubscribeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeRequest) {
          return MergeFrom((UnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeRequest other) {
        if (other == global::bnet.protocol.game_master.UnsubscribeRequest.DefaultInstance) return this;
        if (other.HasSubscriptionId) {
          SubscriptionId = other.SubscriptionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSubscriptionId = input.ReadUInt64(ref result.subscriptionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSubscriptionId {
        get { return result.hasSubscriptionId; }
      }
      public ulong SubscriptionId {
        get { return result.SubscriptionId; }
        set { SetSubscriptionId(value); }
      }
      public Builder SetSubscriptionId(ulong value) {
        result.hasSubscriptionId = true;
        result.subscriptionId_ = value;
        return this;
      }
      public Builder ClearSubscriptionId() {
        result.hasSubscriptionId = false;
        result.subscriptionId_ = 0UL;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class ChangeGameRequest : pb::GeneratedMessage<ChangeGameRequest, ChangeGameRequest.Builder> {
    private static readonly ChangeGameRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _changeGameRequestFieldNames = new string[] { "attribute", "game_handle", "open", "replace" };
    private static readonly uint[] _changeGameRequestFieldTags = new uint[] { 26, 10, 16, 32 };
    public static ChangeGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChangeGameRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ChangeGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_ChangeGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChangeGameRequest, ChangeGameRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_ChangeGameRequest__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bnet.protocol.game_master.GameHandle gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bnet.protocol.game_master.GameHandle GameHandle {
      get { return gameHandle_; }
    }
    
    public const int OpenFieldNumber = 2;
    private bool hasOpen;
    private bool open_;
    public bool HasOpen {
      get { return hasOpen; }
    }
    public bool Open {
      get { return open_; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attribute_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int ReplaceFieldNumber = 4;
    private bool hasReplace;
    private bool replace_;
    public bool HasReplace {
      get { return hasReplace; }
    }
    public bool Replace {
      get { return replace_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameHandle) return false;
        if (!GameHandle.IsInitialized) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _changeGameRequestFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[1], GameHandle);
      }
      if (hasOpen) {
        output.WriteBool(2, field_names[2], Open);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attribute_);
      }
      if (hasReplace) {
        output.WriteBool(4, field_names[3], Replace);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasOpen) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Open);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasReplace) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, Replace);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChangeGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChangeGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChangeGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChangeGameRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChangeGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ChangeGameRequest result = new ChangeGameRequest();
      
      protected override ChangeGameRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ChangeGameRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.ChangeGameRequest.Descriptor; }
      }
      
      public override ChangeGameRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.ChangeGameRequest.DefaultInstance; }
      }
      
      public override ChangeGameRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.attribute_.MakeReadOnly();
        ChangeGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChangeGameRequest) {
          return MergeFrom((ChangeGameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChangeGameRequest other) {
        if (other == global::bnet.protocol.game_master.ChangeGameRequest.DefaultInstance) return this;
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasOpen) {
          Open = other.Open;
        }
        if (other.attribute_.Count != 0) {
          base.AddRange(other.attribute_, result.attribute_);
        }
        if (other.HasReplace) {
          Replace = other.Replace;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_changeGameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _changeGameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.game_master.GameHandle.Builder subBuilder = global::bnet.protocol.game_master.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOpen = input.ReadBool(ref result.open_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasReplace = input.ReadBool(ref result.replace_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bnet.protocol.game_master.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bnet.protocol.game_master.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
        return this;
      }
      
      public bool HasOpen {
        get { return result.hasOpen; }
      }
      public bool Open {
        get { return result.Open; }
        set { SetOpen(value); }
      }
      public Builder SetOpen(bool value) {
        result.hasOpen = true;
        result.open_ = value;
        return this;
      }
      public Builder ClearOpen() {
        result.hasOpen = false;
        result.open_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributeList {
        get { return result.attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        base.AddRange(values, result.attribute_);
        return this;
      }
      public Builder ClearAttribute() {
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasReplace {
        get { return result.hasReplace; }
      }
      public bool Replace {
        get { return result.Replace; }
        set { SetReplace(value); }
      }
      public Builder SetReplace(bool value) {
        result.hasReplace = true;
        result.replace_ = value;
        return this;
      }
      public Builder ClearReplace() {
        result.hasReplace = false;
        result.replace_ = false;
        return this;
      }
    }
    static ChangeGameRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class GetFactoryInfoRequest : pb::GeneratedMessage<GetFactoryInfoRequest, GetFactoryInfoRequest.Builder> {
    private static readonly GetFactoryInfoRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _getFactoryInfoRequestFieldNames = new string[] { "factory_id" };
    private static readonly uint[] _getFactoryInfoRequestFieldTags = new uint[] { 9 };
    public static GetFactoryInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFactoryInfoRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetFactoryInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GetFactoryInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFactoryInfoRequest, GetFactoryInfoRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GetFactoryInfoRequest__FieldAccessorTable; }
    }
    
    public const int FactoryIdFieldNumber = 1;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFactoryId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFactoryInfoRequestFieldNames;
      if (hasFactoryId) {
        output.WriteFixed64(1, field_names[0], FactoryId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, FactoryId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFactoryInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFactoryInfoRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFactoryInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetFactoryInfoRequest result = new GetFactoryInfoRequest();
      
      protected override GetFactoryInfoRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetFactoryInfoRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.GetFactoryInfoRequest.Descriptor; }
      }
      
      public override GetFactoryInfoRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.GetFactoryInfoRequest.DefaultInstance; }
      }
      
      public override GetFactoryInfoRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GetFactoryInfoRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFactoryInfoRequest) {
          return MergeFrom((GetFactoryInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFactoryInfoRequest other) {
        if (other == global::bnet.protocol.game_master.GetFactoryInfoRequest.DefaultInstance) return this;
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFactoryInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFactoryInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
    }
    static GetFactoryInfoRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class GetFactoryInfoResponse : pb::GeneratedMessage<GetFactoryInfoResponse, GetFactoryInfoResponse.Builder> {
    private static readonly GetFactoryInfoResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _getFactoryInfoResponseFieldNames = new string[] { "attribute", "stats_bucket" };
    private static readonly uint[] _getFactoryInfoResponseFieldTags = new uint[] { 10, 18 };
    public static GetFactoryInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFactoryInfoResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetFactoryInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GetFactoryInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFactoryInfoResponse, GetFactoryInfoResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GetFactoryInfoResponse__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attribute_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int StatsBucketFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.game_master.GameStatsBucket> statsBucket_ = new pbc::PopsicleList<global::bnet.protocol.game_master.GameStatsBucket>();
    public scg::IList<global::bnet.protocol.game_master.GameStatsBucket> StatsBucketList {
      get { return statsBucket_; }
    }
    public int StatsBucketCount {
      get { return statsBucket_.Count; }
    }
    public global::bnet.protocol.game_master.GameStatsBucket GetStatsBucket(int index) {
      return statsBucket_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFactoryInfoResponseFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (statsBucket_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], statsBucket_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bnet.protocol.game_master.GameStatsBucket element in StatsBucketList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFactoryInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFactoryInfoResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFactoryInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetFactoryInfoResponse result = new GetFactoryInfoResponse();
      
      protected override GetFactoryInfoResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetFactoryInfoResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.GetFactoryInfoResponse.Descriptor; }
      }
      
      public override GetFactoryInfoResponse DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.GetFactoryInfoResponse.DefaultInstance; }
      }
      
      public override GetFactoryInfoResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.attribute_.MakeReadOnly();
        result.statsBucket_.MakeReadOnly();
        GetFactoryInfoResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFactoryInfoResponse) {
          return MergeFrom((GetFactoryInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFactoryInfoResponse other) {
        if (other == global::bnet.protocol.game_master.GetFactoryInfoResponse.DefaultInstance) return this;
        if (other.attribute_.Count != 0) {
          base.AddRange(other.attribute_, result.attribute_);
        }
        if (other.statsBucket_.Count != 0) {
          base.AddRange(other.statsBucket_, result.statsBucket_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFactoryInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFactoryInfoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.statsBucket_, global::bnet.protocol.game_master.GameStatsBucket.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributeList {
        get { return result.attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        base.AddRange(values, result.attribute_);
        return this;
      }
      public Builder ClearAttribute() {
        result.attribute_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.game_master.GameStatsBucket> StatsBucketList {
        get { return result.statsBucket_; }
      }
      public int StatsBucketCount {
        get { return result.StatsBucketCount; }
      }
      public global::bnet.protocol.game_master.GameStatsBucket GetStatsBucket(int index) {
        return result.GetStatsBucket(index);
      }
      public Builder SetStatsBucket(int index, global::bnet.protocol.game_master.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.statsBucket_[index] = value;
        return this;
      }
      public Builder SetStatsBucket(int index, global::bnet.protocol.game_master.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.statsBucket_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStatsBucket(global::bnet.protocol.game_master.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.statsBucket_.Add(value);
        return this;
      }
      public Builder AddStatsBucket(global::bnet.protocol.game_master.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.statsBucket_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStatsBucket(scg::IEnumerable<global::bnet.protocol.game_master.GameStatsBucket> values) {
        base.AddRange(values, result.statsBucket_);
        return this;
      }
      public Builder ClearStatsBucket() {
        result.statsBucket_.Clear();
        return this;
      }
    }
    static GetFactoryInfoResponse() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class GetGameStatsRequest : pb::GeneratedMessage<GetGameStatsRequest, GetGameStatsRequest.Builder> {
    private static readonly GetGameStatsRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _getGameStatsRequestFieldNames = new string[] { "factory_id", "filter" };
    private static readonly uint[] _getGameStatsRequestFieldTags = new uint[] { 9, 18 };
    public static GetGameStatsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameStatsRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetGameStatsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GetGameStatsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameStatsRequest, GetGameStatsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GetGameStatsRequest__FieldAccessorTable; }
    }
    
    public const int FactoryIdFieldNumber = 1;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.attribute.AttributeFilter filter_ = global::bnet.protocol.attribute.AttributeFilter.DefaultInstance;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.attribute.AttributeFilter Filter {
      get { return filter_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFactoryId) return false;
        if (!hasFilter) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameStatsRequestFieldNames;
      if (hasFactoryId) {
        output.WriteFixed64(1, field_names[0], FactoryId);
      }
      if (hasFilter) {
        output.WriteMessage(2, field_names[1], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, FactoryId);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameStatsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameStatsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameStatsRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameStatsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetGameStatsRequest result = new GetGameStatsRequest();
      
      protected override GetGameStatsRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetGameStatsRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.GetGameStatsRequest.Descriptor; }
      }
      
      public override GetGameStatsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.GetGameStatsRequest.DefaultInstance; }
      }
      
      public override GetGameStatsRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GetGameStatsRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameStatsRequest) {
          return MergeFrom((GetGameStatsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameStatsRequest other) {
        if (other == global::bnet.protocol.game_master.GetGameStatsRequest.DefaultInstance) return this;
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameStatsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameStatsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 18: {
              global::bnet.protocol.attribute.AttributeFilter.Builder subBuilder = global::bnet.protocol.attribute.AttributeFilter.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bnet.protocol.attribute.AttributeFilter Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.attribute.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.attribute.AttributeFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.attribute.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasFilter &&
            result.filter_ != global::bnet.protocol.attribute.AttributeFilter.DefaultInstance) {
            result.filter_ = global::bnet.protocol.attribute.AttributeFilter.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        result.hasFilter = false;
        result.filter_ = global::bnet.protocol.attribute.AttributeFilter.DefaultInstance;
        return this;
      }
    }
    static GetGameStatsRequest() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class GetGameStatsResponse : pb::GeneratedMessage<GetGameStatsResponse, GetGameStatsResponse.Builder> {
    private static readonly GetGameStatsResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _getGameStatsResponseFieldNames = new string[] { "stats_bucket" };
    private static readonly uint[] _getGameStatsResponseFieldTags = new uint[] { 10 };
    public static GetGameStatsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameStatsResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetGameStatsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GetGameStatsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameStatsResponse, GetGameStatsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GetGameStatsResponse__FieldAccessorTable; }
    }
    
    public const int StatsBucketFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.game_master.GameStatsBucket> statsBucket_ = new pbc::PopsicleList<global::bnet.protocol.game_master.GameStatsBucket>();
    public scg::IList<global::bnet.protocol.game_master.GameStatsBucket> StatsBucketList {
      get { return statsBucket_; }
    }
    public int StatsBucketCount {
      get { return statsBucket_.Count; }
    }
    public global::bnet.protocol.game_master.GameStatsBucket GetStatsBucket(int index) {
      return statsBucket_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameStatsResponseFieldNames;
      if (statsBucket_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], statsBucket_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.game_master.GameStatsBucket element in StatsBucketList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameStatsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameStatsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameStatsResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameStatsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetGameStatsResponse result = new GetGameStatsResponse();
      
      protected override GetGameStatsResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetGameStatsResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.GetGameStatsResponse.Descriptor; }
      }
      
      public override GetGameStatsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.GetGameStatsResponse.DefaultInstance; }
      }
      
      public override GetGameStatsResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.statsBucket_.MakeReadOnly();
        GetGameStatsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameStatsResponse) {
          return MergeFrom((GetGameStatsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameStatsResponse other) {
        if (other == global::bnet.protocol.game_master.GetGameStatsResponse.DefaultInstance) return this;
        if (other.statsBucket_.Count != 0) {
          base.AddRange(other.statsBucket_, result.statsBucket_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameStatsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameStatsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.statsBucket_, global::bnet.protocol.game_master.GameStatsBucket.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.game_master.GameStatsBucket> StatsBucketList {
        get { return result.statsBucket_; }
      }
      public int StatsBucketCount {
        get { return result.StatsBucketCount; }
      }
      public global::bnet.protocol.game_master.GameStatsBucket GetStatsBucket(int index) {
        return result.GetStatsBucket(index);
      }
      public Builder SetStatsBucket(int index, global::bnet.protocol.game_master.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.statsBucket_[index] = value;
        return this;
      }
      public Builder SetStatsBucket(int index, global::bnet.protocol.game_master.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.statsBucket_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStatsBucket(global::bnet.protocol.game_master.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.statsBucket_.Add(value);
        return this;
      }
      public Builder AddStatsBucket(global::bnet.protocol.game_master.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.statsBucket_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStatsBucket(scg::IEnumerable<global::bnet.protocol.game_master.GameStatsBucket> values) {
        base.AddRange(values, result.statsBucket_);
        return this;
      }
      public Builder ClearStatsBucket() {
        result.statsBucket_.Clear();
        return this;
      }
    }
    static GetGameStatsResponse() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class FactoryUpdateNotification : pb::GeneratedMessage<FactoryUpdateNotification, FactoryUpdateNotification.Builder> {
    private static readonly FactoryUpdateNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _factoryUpdateNotificationFieldNames = new string[] { "description", "op", "program_id" };
    private static readonly uint[] _factoryUpdateNotificationFieldTags = new uint[] { 18, 8, 29 };
    public static FactoryUpdateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FactoryUpdateNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override FactoryUpdateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_FactoryUpdateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FactoryUpdateNotification, FactoryUpdateNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_FactoryUpdateNotification__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
      public enum Operation {
        ADD = 1,
        REMOVE = 2,
        CHANGE = 3,
      }
      
    }
    #endregion
    
    public const int OpFieldNumber = 1;
    private bool hasOp;
    private global::bnet.protocol.game_master.FactoryUpdateNotification.Types.Operation op_ = global::bnet.protocol.game_master.FactoryUpdateNotification.Types.Operation.ADD;
    public bool HasOp {
      get { return hasOp; }
    }
    public global::bnet.protocol.game_master.FactoryUpdateNotification.Types.Operation Op {
      get { return op_; }
    }
    
    public const int DescriptionFieldNumber = 2;
    private bool hasDescription;
    private global::bnet.protocol.game_master.GameFactoryDescription description_ = global::bnet.protocol.game_master.GameFactoryDescription.DefaultInstance;
    public bool HasDescription {
      get { return hasDescription; }
    }
    public global::bnet.protocol.game_master.GameFactoryDescription Description {
      get { return description_; }
    }
    
    public const int ProgramIdFieldNumber = 3;
    private bool hasProgramId;
    private uint programId_;
    public bool HasProgramId {
      get { return hasProgramId; }
    }
    public uint ProgramId {
      get { return programId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOp) return false;
        if (!hasDescription) return false;
        if (!Description.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _factoryUpdateNotificationFieldNames;
      if (hasOp) {
        output.WriteEnum(1, field_names[1], (int) Op, Op);
      }
      if (hasDescription) {
        output.WriteMessage(2, field_names[0], Description);
      }
      if (hasProgramId) {
        output.WriteFixed32(3, field_names[2], ProgramId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOp) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Op);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Description);
        }
        if (hasProgramId) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, ProgramId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FactoryUpdateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FactoryUpdateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FactoryUpdateNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<FactoryUpdateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      FactoryUpdateNotification result = new FactoryUpdateNotification();
      
      protected override FactoryUpdateNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new FactoryUpdateNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.FactoryUpdateNotification.Descriptor; }
      }
      
      public override FactoryUpdateNotification DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.FactoryUpdateNotification.DefaultInstance; }
      }
      
      public override FactoryUpdateNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        FactoryUpdateNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FactoryUpdateNotification) {
          return MergeFrom((FactoryUpdateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FactoryUpdateNotification other) {
        if (other == global::bnet.protocol.game_master.FactoryUpdateNotification.DefaultInstance) return this;
        if (other.HasOp) {
          Op = other.Op;
        }
        if (other.HasDescription) {
          MergeDescription(other.Description);
        }
        if (other.HasProgramId) {
          ProgramId = other.ProgramId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_factoryUpdateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _factoryUpdateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.op_, out unknown)) {
                result.hasOp = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::bnet.protocol.game_master.GameFactoryDescription.Builder subBuilder = global::bnet.protocol.game_master.GameFactoryDescription.CreateBuilder();
              if (result.hasDescription) {
                subBuilder.MergeFrom(Description);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Description = subBuilder.BuildPartial();
              break;
            }
            case 29: {
              result.hasProgramId = input.ReadFixed32(ref result.programId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOp {
       get { return result.hasOp; }
      }
      public global::bnet.protocol.game_master.FactoryUpdateNotification.Types.Operation Op {
        get { return result.Op; }
        set { SetOp(value); }
      }
      public Builder SetOp(global::bnet.protocol.game_master.FactoryUpdateNotification.Types.Operation value) {
        result.hasOp = true;
        result.op_ = value;
        return this;
      }
      public Builder ClearOp() {
        result.hasOp = false;
        result.op_ = global::bnet.protocol.game_master.FactoryUpdateNotification.Types.Operation.ADD;
        return this;
      }
      
      public bool HasDescription {
       get { return result.hasDescription; }
      }
      public global::bnet.protocol.game_master.GameFactoryDescription Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(global::bnet.protocol.game_master.GameFactoryDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder SetDescription(global::bnet.protocol.game_master.GameFactoryDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasDescription = true;
        result.description_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDescription(global::bnet.protocol.game_master.GameFactoryDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasDescription &&
            result.description_ != global::bnet.protocol.game_master.GameFactoryDescription.DefaultInstance) {
            result.description_ = global::bnet.protocol.game_master.GameFactoryDescription.CreateBuilder(result.description_).MergeFrom(value).BuildPartial();
        } else {
          result.description_ = value;
        }
        result.hasDescription = true;
        return this;
      }
      public Builder ClearDescription() {
        result.hasDescription = false;
        result.description_ = global::bnet.protocol.game_master.GameFactoryDescription.DefaultInstance;
        return this;
      }
      
      public bool HasProgramId {
        get { return result.hasProgramId; }
      }
      public uint ProgramId {
        get { return result.ProgramId; }
        set { SetProgramId(value); }
      }
      public Builder SetProgramId(uint value) {
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder ClearProgramId() {
        result.hasProgramId = false;
        result.programId_ = 0;
        return this;
      }
    }
    static FactoryUpdateNotification() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class GameFoundNotification : pb::GeneratedMessage<GameFoundNotification, GameFoundNotification.Builder> {
    private static readonly GameFoundNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _gameFoundNotificationFieldNames = new string[] { "connect_info", "error_code", "game_handle", "request_id" };
    private static readonly uint[] _gameFoundNotificationFieldTags = new uint[] { 34, 16, 26, 8 };
    public static GameFoundNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameFoundNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GameFoundNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GameFoundNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameFoundNotification, GameFoundNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.game_master.Proto.GameMaster.internal__static_bnet_protocol_game_master_GameFoundNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private ulong requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public ulong RequestId {
      get { return requestId_; }
    }
    
    public const int ErrorCodeFieldNumber = 2;
    private bool hasErrorCode;
    private uint errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public uint ErrorCode {
      get { return errorCode_; }
    }
    
    public const int GameHandleFieldNumber = 3;
    private bool hasGameHandle;
    private global::bnet.protocol.game_master.GameHandle gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bnet.protocol.game_master.GameHandle GameHandle {
      get { return gameHandle_; }
    }
    
    public const int ConnectInfoFieldNumber = 4;
    private pbc::PopsicleList<global::bnet.protocol.game_master.ConnectInfo> connectInfo_ = new pbc::PopsicleList<global::bnet.protocol.game_master.ConnectInfo>();
    public scg::IList<global::bnet.protocol.game_master.ConnectInfo> ConnectInfoList {
      get { return connectInfo_; }
    }
    public int ConnectInfoCount {
      get { return connectInfo_.Count; }
    }
    public global::bnet.protocol.game_master.ConnectInfo GetConnectInfo(int index) {
      return connectInfo_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestId) return false;
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.game_master.ConnectInfo element in ConnectInfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameFoundNotificationFieldNames;
      if (hasRequestId) {
        output.WriteUInt64(1, field_names[3], RequestId);
      }
      if (hasErrorCode) {
        output.WriteUInt32(2, field_names[1], ErrorCode);
      }
      if (hasGameHandle) {
        output.WriteMessage(3, field_names[2], GameHandle);
      }
      if (connectInfo_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], connectInfo_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, RequestId);
        }
        if (hasErrorCode) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, ErrorCode);
        }
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, GameHandle);
        }
        foreach (global::bnet.protocol.game_master.ConnectInfo element in ConnectInfoList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameFoundNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameFoundNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameFoundNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameFoundNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameFoundNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameFoundNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameFoundNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameFoundNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameFoundNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameFoundNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameFoundNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameFoundNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GameFoundNotification result = new GameFoundNotification();
      
      protected override GameFoundNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GameFoundNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.game_master.GameFoundNotification.Descriptor; }
      }
      
      public override GameFoundNotification DefaultInstanceForType {
        get { return global::bnet.protocol.game_master.GameFoundNotification.DefaultInstance; }
      }
      
      public override GameFoundNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.connectInfo_.MakeReadOnly();
        GameFoundNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameFoundNotification) {
          return MergeFrom((GameFoundNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameFoundNotification other) {
        if (other == global::bnet.protocol.game_master.GameFoundNotification.DefaultInstance) return this;
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.connectInfo_.Count != 0) {
          base.AddRange(other.connectInfo_, result.connectInfo_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameFoundNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameFoundNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestId = input.ReadUInt64(ref result.requestId_);
              break;
            }
            case 16: {
              result.hasErrorCode = input.ReadUInt32(ref result.errorCode_);
              break;
            }
            case 26: {
              global::bnet.protocol.game_master.GameHandle.Builder subBuilder = global::bnet.protocol.game_master.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.connectInfo_, global::bnet.protocol.game_master.ConnectInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      public ulong RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(ulong value) {
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        result.hasRequestId = false;
        result.requestId_ = 0UL;
        return this;
      }
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public uint ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(uint value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bnet.protocol.game_master.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bnet.protocol.game_master.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bnet.protocol.game_master.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bnet.protocol.game_master.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = global::bnet.protocol.game_master.GameHandle.DefaultInstance;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.game_master.ConnectInfo> ConnectInfoList {
        get { return result.connectInfo_; }
      }
      public int ConnectInfoCount {
        get { return result.ConnectInfoCount; }
      }
      public global::bnet.protocol.game_master.ConnectInfo GetConnectInfo(int index) {
        return result.GetConnectInfo(index);
      }
      public Builder SetConnectInfo(int index, global::bnet.protocol.game_master.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.connectInfo_[index] = value;
        return this;
      }
      public Builder SetConnectInfo(int index, global::bnet.protocol.game_master.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.connectInfo_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConnectInfo(global::bnet.protocol.game_master.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.connectInfo_.Add(value);
        return this;
      }
      public Builder AddConnectInfo(global::bnet.protocol.game_master.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.connectInfo_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConnectInfo(scg::IEnumerable<global::bnet.protocol.game_master.ConnectInfo> values) {
        base.AddRange(values, result.connectInfo_);
        return this;
      }
      public Builder ClearConnectInfo() {
        result.connectInfo_.Clear();
        return this;
      }
    }
    static GameFoundNotification() {
      object.ReferenceEquals(global::bnet.protocol.game_master.Proto.GameMaster.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public abstract class GameMaster : pb::IService {
    public abstract void JoinGame(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.JoinGameRequest request,
        global::System.Action<global::bnet.protocol.game_master.JoinGameResponse> done);
    public abstract void ListFactories(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.ListFactoriesRequest request,
        global::System.Action<global::bnet.protocol.game_master.ListFactoriesResponse> done);
    public abstract void FindGame(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.FindGameRequest request,
        global::System.Action<global::bnet.protocol.game_master.FindGameResponse> done);
    public abstract void CancelFindGame(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.CancelFindGameRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void GameEnded(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.GameEndedNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void PlayerLeft(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.PlayerLeftNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void RegisterServer(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.RegisterServerRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnregisterServer(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.UnregisterServerRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void RegisterUtilities(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.RegisterUtilitiesRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnregisterUtilities(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.UnregisterUtilitiesRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.SubscribeRequest request,
        global::System.Action<global::bnet.protocol.game_master.SubscribeResponse> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.UnsubscribeRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void ChangeGame(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.ChangeGameRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void GetFactoryInfo(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.GetFactoryInfoRequest request,
        global::System.Action<global::bnet.protocol.game_master.GetFactoryInfoResponse> done);
    public abstract void GetGameStats(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.GetGameStatsRequest request,
        global::System.Action<global::bnet.protocol.game_master.GetGameStatsResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.GameMaster.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.JoinGame(controller, (global::bnet.protocol.game_master.JoinGameRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.game_master.JoinGameResponse>(
              done));
          return;
        case 1:
          this.ListFactories(controller, (global::bnet.protocol.game_master.ListFactoriesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.game_master.ListFactoriesResponse>(
              done));
          return;
        case 2:
          this.FindGame(controller, (global::bnet.protocol.game_master.FindGameRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.game_master.FindGameResponse>(
              done));
          return;
        case 3:
          this.CancelFindGame(controller, (global::bnet.protocol.game_master.CancelFindGameRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 4:
          this.GameEnded(controller, (global::bnet.protocol.game_master.GameEndedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.PlayerLeft(controller, (global::bnet.protocol.game_master.PlayerLeftNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 6:
          this.RegisterServer(controller, (global::bnet.protocol.game_master.RegisterServerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 7:
          this.UnregisterServer(controller, (global::bnet.protocol.game_master.UnregisterServerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 8:
          this.RegisterUtilities(controller, (global::bnet.protocol.game_master.RegisterUtilitiesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 9:
          this.UnregisterUtilities(controller, (global::bnet.protocol.game_master.UnregisterUtilitiesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 10:
          this.Subscribe(controller, (global::bnet.protocol.game_master.SubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.game_master.SubscribeResponse>(
              done));
          return;
        case 11:
          this.Unsubscribe(controller, (global::bnet.protocol.game_master.UnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 12:
          this.ChangeGame(controller, (global::bnet.protocol.game_master.ChangeGameRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 13:
          this.GetFactoryInfo(controller, (global::bnet.protocol.game_master.GetFactoryInfoRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.game_master.GetFactoryInfoResponse>(
              done));
          return;
        case 14:
          this.GetGameStats(controller, (global::bnet.protocol.game_master.GetGameStatsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.game_master.GetGameStatsResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.game_master.JoinGameRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.game_master.ListFactoriesRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.game_master.FindGameRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.game_master.CancelFindGameRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.game_master.GameEndedNotification.DefaultInstance;
        case 5:
          return global::bnet.protocol.game_master.PlayerLeftNotification.DefaultInstance;
        case 6:
          return global::bnet.protocol.game_master.RegisterServerRequest.DefaultInstance;
        case 7:
          return global::bnet.protocol.game_master.UnregisterServerRequest.DefaultInstance;
        case 8:
          return global::bnet.protocol.game_master.RegisterUtilitiesRequest.DefaultInstance;
        case 9:
          return global::bnet.protocol.game_master.UnregisterUtilitiesRequest.DefaultInstance;
        case 10:
          return global::bnet.protocol.game_master.SubscribeRequest.DefaultInstance;
        case 11:
          return global::bnet.protocol.game_master.UnsubscribeRequest.DefaultInstance;
        case 12:
          return global::bnet.protocol.game_master.ChangeGameRequest.DefaultInstance;
        case 13:
          return global::bnet.protocol.game_master.GetFactoryInfoRequest.DefaultInstance;
        case 14:
          return global::bnet.protocol.game_master.GetGameStatsRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.game_master.JoinGameResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.game_master.ListFactoriesResponse.DefaultInstance;
        case 2:
          return global::bnet.protocol.game_master.FindGameResponse.DefaultInstance;
        case 3:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 4:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 6:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 7:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 8:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 9:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 10:
          return global::bnet.protocol.game_master.SubscribeResponse.DefaultInstance;
        case 11:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 12:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 13:
          return global::bnet.protocol.game_master.GetFactoryInfoResponse.DefaultInstance;
        case 14:
          return global::bnet.protocol.game_master.GetGameStatsResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public class Stub : global::bnet.protocol.game_master.GameMaster {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void JoinGame(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.JoinGameRequest request,
          global::System.Action<global::bnet.protocol.game_master.JoinGameResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.game_master.JoinGameResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.game_master.JoinGameResponse, global::bnet.protocol.game_master.JoinGameResponse.Builder>(done, global::bnet.protocol.game_master.JoinGameResponse.DefaultInstance));
      }
      
      public override void ListFactories(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.ListFactoriesRequest request,
          global::System.Action<global::bnet.protocol.game_master.ListFactoriesResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.game_master.ListFactoriesResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.game_master.ListFactoriesResponse, global::bnet.protocol.game_master.ListFactoriesResponse.Builder>(done, global::bnet.protocol.game_master.ListFactoriesResponse.DefaultInstance));
      }
      
      public override void FindGame(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.FindGameRequest request,
          global::System.Action<global::bnet.protocol.game_master.FindGameResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.game_master.FindGameResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.game_master.FindGameResponse, global::bnet.protocol.game_master.FindGameResponse.Builder>(done, global::bnet.protocol.game_master.FindGameResponse.DefaultInstance));
      }
      
      public override void CancelFindGame(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.CancelFindGameRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void GameEnded(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.GameEndedNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void PlayerLeft(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.PlayerLeftNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void RegisterServer(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.RegisterServerRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnregisterServer(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.UnregisterServerRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void RegisterUtilities(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.RegisterUtilitiesRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnregisterUtilities(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.UnregisterUtilitiesRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.SubscribeRequest request,
          global::System.Action<global::bnet.protocol.game_master.SubscribeResponse> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bnet.protocol.game_master.SubscribeResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.game_master.SubscribeResponse, global::bnet.protocol.game_master.SubscribeResponse.Builder>(done, global::bnet.protocol.game_master.SubscribeResponse.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.UnsubscribeRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[11],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void ChangeGame(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.ChangeGameRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[12],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void GetFactoryInfo(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.GetFactoryInfoRequest request,
          global::System.Action<global::bnet.protocol.game_master.GetFactoryInfoResponse> done) {
        channel.CallMethod(Descriptor.Methods[13],
            controller, request, global::bnet.protocol.game_master.GetFactoryInfoResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.game_master.GetFactoryInfoResponse, global::bnet.protocol.game_master.GetFactoryInfoResponse.Builder>(done, global::bnet.protocol.game_master.GetFactoryInfoResponse.DefaultInstance));
      }
      
      public override void GetGameStats(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.GetGameStatsRequest request,
          global::System.Action<global::bnet.protocol.game_master.GetGameStatsResponse> done) {
        channel.CallMethod(Descriptor.Methods[14],
            controller, request, global::bnet.protocol.game_master.GetGameStatsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.game_master.GetGameStatsResponse, global::bnet.protocol.game_master.GetGameStatsResponse.Builder>(done, global::bnet.protocol.game_master.GetGameStatsResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public abstract class GameMasterSubscriber : pb::IService {
    public abstract void NotifyFactoryUpdate(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.FactoryUpdateNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.GameMaster.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyFactoryUpdate(controller, (global::bnet.protocol.game_master.FactoryUpdateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.game_master.FactoryUpdateNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public class Stub : global::bnet.protocol.game_master.GameMasterSubscriber {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyFactoryUpdate(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.FactoryUpdateNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public abstract class GameFactorySubscriber : pb::IService {
    public abstract void NotifyGameFound(
        pb::IRpcController controller,
        global::bnet.protocol.game_master.GameFoundNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.GameMaster.Descriptor.Services[2]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyGameFound(controller, (global::bnet.protocol.game_master.GameFoundNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.game_master.GameFoundNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public class Stub : global::bnet.protocol.game_master.GameFactorySubscriber {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyGameFound(
          pb::IRpcController controller,
          global::bnet.protocol.game_master.GameFoundNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
