// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.exchange {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public static partial class ExchangeTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBook__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBook, global::bnet.protocol.exchange.OrderBook.Builder> internal__static_bnet_protocol_exchange_OrderBook__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBookHandle__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookHandle, global::bnet.protocol.exchange.OrderBookHandle.Builder> internal__static_bnet_protocol_exchange_OrderBookHandle__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBookNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookNotification, global::bnet.protocol.exchange.OrderBookNotification.Builder> internal__static_bnet_protocol_exchange_OrderBookNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBookSummary__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookSummary, global::bnet.protocol.exchange.OrderBookSummary.Builder> internal__static_bnet_protocol_exchange_OrderBookSummary__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Order__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Order, global::bnet.protocol.exchange.Order.Builder> internal__static_bnet_protocol_exchange_Order__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Extension__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Extension, global::bnet.protocol.exchange.Extension.Builder> internal__static_bnet_protocol_exchange_Extension__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Offer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Offer, global::bnet.protocol.exchange.Offer.Builder> internal__static_bnet_protocol_exchange_Offer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OfferExtended__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferExtended, global::bnet.protocol.exchange.OfferExtended.Builder> internal__static_bnet_protocol_exchange_OfferExtended__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OfferCreation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferCreation, global::bnet.protocol.exchange.OfferCreation.Builder> internal__static_bnet_protocol_exchange_OfferCreation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Bid__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Bid, global::bnet.protocol.exchange.Bid.Builder> internal__static_bnet_protocol_exchange_Bid__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_BidExtended__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidExtended, global::bnet.protocol.exchange.BidExtended.Builder> internal__static_bnet_protocol_exchange_BidExtended__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_BidCreation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidCreation, global::bnet.protocol.exchange.BidCreation.Builder> internal__static_bnet_protocol_exchange_BidCreation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryFilterByOrderId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryFilterByOrderId, global::bnet.protocol.exchange.QueryFilterByOrderId.Builder> internal__static_bnet_protocol_exchange_QueryFilterByOrderId__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryFilterByCreatedTime, global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder> internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Settlement__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Settlement, global::bnet.protocol.exchange.Settlement.Builder> internal__static_bnet_protocol_exchange_Settlement__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CurrencyConfig__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CurrencyConfig, global::bnet.protocol.exchange.CurrencyConfig.Builder> internal__static_bnet_protocol_exchange_CurrencyConfig__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_SpecialistConfig__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SpecialistConfig, global::bnet.protocol.exchange.SpecialistConfig.Builder> internal__static_bnet_protocol_exchange_SpecialistConfig__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_BillingAddress__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BillingAddress, global::bnet.protocol.exchange.BillingAddress.Builder> internal__static_bnet_protocol_exchange_BillingAddress__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_FeeEstimationData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.FeeEstimationData, global::bnet.protocol.exchange.FeeEstimationData.Builder> internal__static_bnet_protocol_exchange_FeeEstimationData__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ExchangeTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiVzZXJ2aWNlL2V4Y2hhbmdlL2V4Y2hhbmdlX3R5cGVzLnByb3RvEhZibmV0" + 
          "LnByb3RvY29sLmV4Y2hhbmdlGhlsaWIvcHJvdG9jb2wvZW50aXR5LnByb3Rv" + 
          "GhtsaWIvcHJvdG9jb2wvZXhjaGFuZ2UucHJvdG8ipAEKCU9yZGVyQm9vaxIy" + 
          "CgZvYmplY3QYASACKAsyIi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkJsb2JP" + 
          "ZlR5cGUSDwoHcHJvZ3JhbRgCIAIoBxIVCg1jb21wYXRpYmlsaXR5GAMgAigN" + 
          "EhAKCGN1cnJlbmN5GAQgAigJEhIKCnNwZWNpYWxpc3QYBSACKAUSFQoNYWxs" + 
          "b3dlZF9yZWFsbRgGIAIoDSJjCg9PcmRlckJvb2tIYW5kbGUSOQoMcGFydGl0" + 
          "aW9uX2lkGAEgAigLMiMuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QYXJ0aXRp" + 
          "b25JZBIVCg1vcmRlcl9ib29rX2lkGAIgAigEIt4BChVPcmRlckJvb2tOb3Rp" + 
          "ZmljYXRpb24SNQoKb3JkZXJfYm9vaxgBIAIoCzIhLmJuZXQucHJvdG9jb2wu" + 
          "ZXhjaGFuZ2UuT3JkZXJCb29rEjkKDHBhcnRpdGlvbl9pZBgCIAIoCzIjLmJu" + 
          "ZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQSFQoNb3JkZXJfYm9v" + 
          "a19pZBgDIAIoBBIXCg90cmFkZV9ub3dfcHJpY2UYBCABKAQSDgoGc3RhdHVz" + 
          "GAUgAigNEhMKC3VwZGF0ZV90aW1lGAYgAigEIvsCChBPcmRlckJvb2tTdW1t" + 
          "YXJ5EjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhj" + 
          "aGFuZ2UuUGFydGl0aW9uSWQSFQoNb3JkZXJfYm9va19pZBgCIAIoBBIOCgZy" + 
          "ZXN1bHQYAyACKA0SNQoKb3JkZXJfYm9vaxgEIAEoCzIhLmJuZXQucHJvdG9j" + 
          "b2wuZXhjaGFuZ2UuT3JkZXJCb29rEg4KBmFtb3VudBgFIAEoBBIYChBiZXN0" + 
          "X29mZmVyX3ByaWNlGAYgASgEEhYKDmJlc3RfYmlkX3ByaWNlGAcgASgEEhAK" + 
          "CGVuZF90aW1lGAggASgEEg4KBnN0YXR1cxgJIAEoBRIUCgxjcmVhdGVkX3Rp" + 
          "bWUYCiABKAQSEwoLYWN0aXZlX3RpbWUYCyABKAQSEwoLY2xvc2VkX3RpbWUY" + 
          "DCABKAQSDgoGcmVhc29uGA0gASgNEhoKEm91dF9iaWRfdW5pdF9wcmljZRgO" + 
          "IAEoBCK7AgoFT3JkZXISDgoGYW1vdW50GAEgAigNEhIKCnN0YXJ0X3RpbWUY" + 
          "AiABKAQSEAoIZW5kX3RpbWUYAyABKAQSOwoRYWNjb3VudF9mb3JfbW9uZXkY" + 
          "BCABKAsyIC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkJsb2JGcm9tEjoKEGFj" + 
          "Y291bnRfZm9yX2l0ZW0YBSABKAsyIC5ibmV0LnByb3RvY29sLmV4Y2hhbmdl" + 
          "LkJsb2JGcm9tEi0KDGJuZXRfYWNjb3VudBgGIAEoCzIXLmJuZXQucHJvdG9j" + 
          "b2wuRW50aXR5SWQSLQoMZ2FtZV9hY2NvdW50GAcgASgLMhcuYm5ldC5wcm90" + 
          "b2NvbC5FbnRpdHlJZBIlCgR0b29uGAggASgLMhcuYm5ldC5wcm90b2NvbC5F" + 
          "bnRpdHlJZCLyAgoJRXh0ZW5zaW9uEjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIj" + 
          "LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQSFQoNb3JkZXJf" + 
          "Ym9va19pZBgCIAIoBBIQCghvcmRlcl9pZBgDIAIoBBIVCg1maWxsZWRfYW1v" + 
          "dW50GAQgASgEEhQKDG9yZGVyX3N0YXR1cxgFIAEoBRIXCg9hdXRob3JpemVk" + 
          "X3RpbWUYBiABKAQSFAoMY3JlYXRlZF90aW1lGAcgASgEEhMKC2Nsb3NlZF90" + 
          "aW1lGAggASgEEg4KBnJlYXNvbhgJIAEoDRI1CgpvcmRlcl9ib29rGAogASgL" + 
          "MiEuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5PcmRlckJvb2sSGQoRb3JkZXJf" + 
          "Ym9va19zdGF0dXMYCyABKAQSFgoObW9uZXlfdG9fY2xhaW0YDCABKAQSFgoO" + 
          "aXRlbXNfdG9fY2xhaW0YDSABKAQifAoFT2ZmZXISLAoFb3JkZXIYASACKAsy" + 
          "HS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLk9yZGVyEhcKD3RyYWRlX25vd19w" + 
          "cmljZRgCIAEoBBIVCg1yZXNlcnZlX3ByaWNlGAMgASgEEhUKDW91dF9iaWRf" + 
          "cHJpY2UYBCABKAQikgEKDU9mZmVyRXh0ZW5kZWQSLAoFb2ZmZXIYASACKAsy" + 
          "HS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLk9mZmVyEjQKCWV4dGVuc2lvbhgC" + 
          "IAIoCzIhLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuRXh0ZW5zaW9uEh0KFWN1" + 
          "cnJlbnRfd2lubmluZ19wcmljZRgDIAEoBCK1AQoNT2ZmZXJDcmVhdGlvbhIs" + 
          "CgVvZmZlchgBIAIoCzIdLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT2ZmZXIS" + 
          "GAoQYXVjdGlvbl9kdXJhdGlvbhgCIAEoBBIbChNhdWN0aW9uX3N0YXJ0X2Rl" + 
          "bGF5GAMgASgEEj8KD2JpbGxpbmdfYWRkcmVzcxgEIAEoCzImLmJuZXQucHJv" + 
          "dG9jb2wuZXhjaGFuZ2UuQmlsbGluZ0FkZHJlc3MiZwoDQmlkEiwKBW9yZGVy" + 
          "GAEgAigLMh0uYm5ldC5wcm90b2NvbC5leGNoYW5nZS5PcmRlchIaChJjdXJy" + 
          "ZW50X3VuaXRfcHJpY2UYAiABKAQSFgoObWF4X3VuaXRfcHJpY2UYAyABKAQi" + 
          "zgEKC0JpZEV4dGVuZGVkEigKA2JpZBgBIAIoCzIbLmJuZXQucHJvdG9jb2wu" + 
          "ZXhjaGFuZ2UuQmlkEjQKCWV4dGVuc2lvbhgCIAIoCzIhLmJuZXQucHJvdG9j" + 
          "b2wuZXhjaGFuZ2UuRXh0ZW5zaW9uEhsKE29mZmVyX291dF9iaWRfcHJpY2UY" + 
          "AyABKAQSHQoVb2ZmZXJfdHJhZGVfbm93X3ByaWNlGAQgASgEEiMKG29mZmVy" + 
          "X2N1cnJlbnRfd2lubmluZ19wcmljZRgFIAEoBCKvAQoLQmlkQ3JlYXRpb24S" + 
          "KAoDYmlkGAEgAigLMhsuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5CaWQSGAoQ" + 
          "YXVjdGlvbl9kdXJhdGlvbhgCIAEoBBIbChNhdWN0aW9uX3N0YXJ0X2RlbGF5" + 
          "GAMgASgEEj8KD2JpbGxpbmdfYWRkcmVzcxgEIAEoCzImLmJuZXQucHJvdG9j" + 
          "b2wuZXhjaGFuZ2UuQmlsbGluZ0FkZHJlc3MiQAoUUXVlcnlGaWx0ZXJCeU9y" + 
          "ZGVySWQSEgoKbWF4X3Jlc3VsdBgBIAIoDRIUCgxyZWZfb3JkZXJfaWQYAiAB" + 
          "KAQiSAoYUXVlcnlGaWx0ZXJCeUNyZWF0ZWRUaW1lEhIKCm1heF9yZXN1bHQY" + 
          "ASACKA0SGAoQcmVmX2NyZWF0ZWRfdGltZRgCIAEoBCJoCgpTZXR0bGVtZW50" + 
          "EhUKDW9yZGVyX2Jvb2tfaWQYASACKAQSFAoMbW9uZXlfYW1vdW50GAIgAigE" + 
          "EhQKDGl0ZW1zX2Ftb3VudBgDIAIoBBIXCg9vZmZlcl9zZXR0bGVfaWQYBCAC" + 
          "KAQi8wEKDkN1cnJlbmN5Q29uZmlnEhAKCGN1cnJlbmN5GAEgAigJEhEKCXRp" + 
          "Y2tfc2l6ZRgCIAIoBBIYChBmbGF0X291dGJpZF9pbmNyGAMgAigEEhkKEXNj" + 
          "YWxlX291dGJpZF9pbmNyGAQgAigEEh8KF21pbl9zdGFydGluZ191bml0X3By" + 
          "aWNlGAUgAigEEh8KF21heF9zdGFydGluZ191bml0X3ByaWNlGAYgAigEEhYK" + 
          "Dm1heF91bml0X3ByaWNlGAcgAigEEhgKEG1heF90b3RhbF9hbW91bnQYCCAC" + 
          "KAQSEwoLYnV5b3V0X3J1bGUYCSACKAUixgEKEFNwZWNpYWxpc3RDb25maWcS" + 
          "EgoKc3BlY2lhbGlzdBgBIAIoBRIZChFhdWN0aW9uX2R1cmF0aW9ucxgCIAMo" + 
          "BBIcChRhdWN0aW9uX3N0YXJ0X2RlbGF5cxgDIAMoBBIkChxhbnRpX3NuaXBp" + 
          "bmdfZXh0ZW5zaW9uX2RlbGF5GAQgAigEEj8KD2N1cnJlbmN5X2NvbmZpZxgF" + 
          "IAMoCzImLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQ3VycmVuY3lDb25maWci" + 
          "VgoOQmlsbGluZ0FkZHJlc3MSEgoKY291bnRyeV9pZBgBIAIoBRIMCgRjaXR5" + 
          "GAIgAigJEg0KBXN0YXRlGAMgASgJEhMKC3Bvc3RhbF9jb2RlGAQgASgJItoB" + 
          "ChFGZWVFc3RpbWF0aW9uRGF0YRIPCgdwcm9ncmFtGAEgAigHEhIKCnNwZWNp" + 
          "YWxpc3QYAiACKAUSEAoIY3VycmVuY3kYAyACKAkSDgoGc291cmNlGAQgAigH" + 
          "Eg4KBmFtb3VudBgFIAIoBBItCgxibmV0X2FjY291bnQYBiABKAsyFy5ibmV0" + 
          "LnByb3RvY29sLkVudGl0eUlkEj8KD2JpbGxpbmdfYWRkcmVzcxgHIAEoCzIm" + 
          "LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQmlsbGluZ0FkZHJlc3M=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_exchange_OrderBook__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_exchange_OrderBook__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBook, global::bnet.protocol.exchange.OrderBook.Builder>(internal__static_bnet_protocol_exchange_OrderBook__Descriptor,
                new string[] { "Object", "Program", "Compatibility", "Currency", "Specialist", "AllowedRealm", });
        internal__static_bnet_protocol_exchange_OrderBookHandle__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_exchange_OrderBookHandle__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookHandle, global::bnet.protocol.exchange.OrderBookHandle.Builder>(internal__static_bnet_protocol_exchange_OrderBookHandle__Descriptor,
                new string[] { "PartitionId", "OrderBookId", });
        internal__static_bnet_protocol_exchange_OrderBookNotification__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_exchange_OrderBookNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookNotification, global::bnet.protocol.exchange.OrderBookNotification.Builder>(internal__static_bnet_protocol_exchange_OrderBookNotification__Descriptor,
                new string[] { "OrderBook", "PartitionId", "OrderBookId", "TradeNowPrice", "Status", "UpdateTime", });
        internal__static_bnet_protocol_exchange_OrderBookSummary__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_exchange_OrderBookSummary__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookSummary, global::bnet.protocol.exchange.OrderBookSummary.Builder>(internal__static_bnet_protocol_exchange_OrderBookSummary__Descriptor,
                new string[] { "PartitionId", "OrderBookId", "Result", "OrderBook", "Amount", "BestOfferPrice", "BestBidPrice", "EndTime", "Status", "CreatedTime", "ActiveTime", "ClosedTime", "Reason", "OutBidUnitPrice", });
        internal__static_bnet_protocol_exchange_Order__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_exchange_Order__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Order, global::bnet.protocol.exchange.Order.Builder>(internal__static_bnet_protocol_exchange_Order__Descriptor,
                new string[] { "Amount", "StartTime", "EndTime", "AccountForMoney", "AccountForItem", "BnetAccount", "GameAccount", "Toon", });
        internal__static_bnet_protocol_exchange_Extension__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bnet_protocol_exchange_Extension__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Extension, global::bnet.protocol.exchange.Extension.Builder>(internal__static_bnet_protocol_exchange_Extension__Descriptor,
                new string[] { "PartitionId", "OrderBookId", "OrderId", "FilledAmount", "OrderStatus", "AuthorizedTime", "CreatedTime", "ClosedTime", "Reason", "OrderBook", "OrderBookStatus", "MoneyToClaim", "ItemsToClaim", });
        internal__static_bnet_protocol_exchange_Offer__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bnet_protocol_exchange_Offer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Offer, global::bnet.protocol.exchange.Offer.Builder>(internal__static_bnet_protocol_exchange_Offer__Descriptor,
                new string[] { "Order", "TradeNowPrice", "ReservePrice", "OutBidPrice", });
        internal__static_bnet_protocol_exchange_OfferExtended__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bnet_protocol_exchange_OfferExtended__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferExtended, global::bnet.protocol.exchange.OfferExtended.Builder>(internal__static_bnet_protocol_exchange_OfferExtended__Descriptor,
                new string[] { "Offer", "Extension", "CurrentWinningPrice", });
        internal__static_bnet_protocol_exchange_OfferCreation__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bnet_protocol_exchange_OfferCreation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferCreation, global::bnet.protocol.exchange.OfferCreation.Builder>(internal__static_bnet_protocol_exchange_OfferCreation__Descriptor,
                new string[] { "Offer", "AuctionDuration", "AuctionStartDelay", "BillingAddress", });
        internal__static_bnet_protocol_exchange_Bid__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bnet_protocol_exchange_Bid__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Bid, global::bnet.protocol.exchange.Bid.Builder>(internal__static_bnet_protocol_exchange_Bid__Descriptor,
                new string[] { "Order", "CurrentUnitPrice", "MaxUnitPrice", });
        internal__static_bnet_protocol_exchange_BidExtended__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bnet_protocol_exchange_BidExtended__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidExtended, global::bnet.protocol.exchange.BidExtended.Builder>(internal__static_bnet_protocol_exchange_BidExtended__Descriptor,
                new string[] { "Bid", "Extension", "OfferOutBidPrice", "OfferTradeNowPrice", "OfferCurrentWinningPrice", });
        internal__static_bnet_protocol_exchange_BidCreation__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bnet_protocol_exchange_BidCreation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidCreation, global::bnet.protocol.exchange.BidCreation.Builder>(internal__static_bnet_protocol_exchange_BidCreation__Descriptor,
                new string[] { "Bid", "AuctionDuration", "AuctionStartDelay", "BillingAddress", });
        internal__static_bnet_protocol_exchange_QueryFilterByOrderId__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bnet_protocol_exchange_QueryFilterByOrderId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryFilterByOrderId, global::bnet.protocol.exchange.QueryFilterByOrderId.Builder>(internal__static_bnet_protocol_exchange_QueryFilterByOrderId__Descriptor,
                new string[] { "MaxResult", "RefOrderId", });
        internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__Descriptor = Descriptor.MessageTypes[13];
        internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryFilterByCreatedTime, global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder>(internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__Descriptor,
                new string[] { "MaxResult", "RefCreatedTime", });
        internal__static_bnet_protocol_exchange_Settlement__Descriptor = Descriptor.MessageTypes[14];
        internal__static_bnet_protocol_exchange_Settlement__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Settlement, global::bnet.protocol.exchange.Settlement.Builder>(internal__static_bnet_protocol_exchange_Settlement__Descriptor,
                new string[] { "OrderBookId", "MoneyAmount", "ItemsAmount", "OfferSettleId", });
        internal__static_bnet_protocol_exchange_CurrencyConfig__Descriptor = Descriptor.MessageTypes[15];
        internal__static_bnet_protocol_exchange_CurrencyConfig__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CurrencyConfig, global::bnet.protocol.exchange.CurrencyConfig.Builder>(internal__static_bnet_protocol_exchange_CurrencyConfig__Descriptor,
                new string[] { "Currency", "TickSize", "FlatOutbidIncr", "ScaleOutbidIncr", "MinStartingUnitPrice", "MaxStartingUnitPrice", "MaxUnitPrice", "MaxTotalAmount", "BuyoutRule", });
        internal__static_bnet_protocol_exchange_SpecialistConfig__Descriptor = Descriptor.MessageTypes[16];
        internal__static_bnet_protocol_exchange_SpecialistConfig__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SpecialistConfig, global::bnet.protocol.exchange.SpecialistConfig.Builder>(internal__static_bnet_protocol_exchange_SpecialistConfig__Descriptor,
                new string[] { "Specialist", "AuctionDurations", "AuctionStartDelays", "AntiSnipingExtensionDelay", "CurrencyConfig", });
        internal__static_bnet_protocol_exchange_BillingAddress__Descriptor = Descriptor.MessageTypes[17];
        internal__static_bnet_protocol_exchange_BillingAddress__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BillingAddress, global::bnet.protocol.exchange.BillingAddress.Builder>(internal__static_bnet_protocol_exchange_BillingAddress__Descriptor,
                new string[] { "CountryId", "City", "State", "PostalCode", });
        internal__static_bnet_protocol_exchange_FeeEstimationData__Descriptor = Descriptor.MessageTypes[18];
        internal__static_bnet_protocol_exchange_FeeEstimationData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.FeeEstimationData, global::bnet.protocol.exchange.FeeEstimationData.Builder>(internal__static_bnet_protocol_exchange_FeeEstimationData__Descriptor,
                new string[] { "Program", "Specialist", "Currency", "Source", "Amount", "BnetAccount", "BillingAddress", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.Entity.Descriptor, 
          global::bnet.protocol.exchange.Exchange.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class OrderBook : pb::GeneratedMessage<OrderBook, OrderBook.Builder> {
    private static readonly OrderBook defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _orderBookFieldNames = new string[] { "allowed_realm", "compatibility", "currency", "object", "program", "specialist" };
    private static readonly uint[] _orderBookFieldTags = new uint[] { 48, 24, 34, 10, 21, 40 };
    public static OrderBook DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBook DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override OrderBook ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBook__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBook, OrderBook.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBook__FieldAccessorTable; }
    }
    
    public const int ObjectFieldNumber = 1;
    private bool hasObject;
    private global::bnet.protocol.exchange.BlobOfType object_ = global::bnet.protocol.exchange.BlobOfType.DefaultInstance;
    public bool HasObject {
      get { return hasObject; }
    }
    public global::bnet.protocol.exchange.BlobOfType Object {
      get { return object_; }
    }
    
    public const int ProgramFieldNumber = 2;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int CompatibilityFieldNumber = 3;
    private bool hasCompatibility;
    private uint compatibility_;
    public bool HasCompatibility {
      get { return hasCompatibility; }
    }
    public uint Compatibility {
      get { return compatibility_; }
    }
    
    public const int CurrencyFieldNumber = 4;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SpecialistFieldNumber = 5;
    private bool hasSpecialist;
    private int specialist_;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public int Specialist {
      get { return specialist_; }
    }
    
    public const int AllowedRealmFieldNumber = 6;
    private bool hasAllowedRealm;
    private uint allowedRealm_;
    public bool HasAllowedRealm {
      get { return hasAllowedRealm; }
    }
    public uint AllowedRealm {
      get { return allowedRealm_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObject) return false;
        if (!hasProgram) return false;
        if (!hasCompatibility) return false;
        if (!hasCurrency) return false;
        if (!hasSpecialist) return false;
        if (!hasAllowedRealm) return false;
        if (!Object.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookFieldNames;
      if (hasObject) {
        output.WriteMessage(1, field_names[3], Object);
      }
      if (hasProgram) {
        output.WriteFixed32(2, field_names[4], Program);
      }
      if (hasCompatibility) {
        output.WriteUInt32(3, field_names[1], Compatibility);
      }
      if (hasCurrency) {
        output.WriteString(4, field_names[2], Currency);
      }
      if (hasSpecialist) {
        output.WriteInt32(5, field_names[5], Specialist);
      }
      if (hasAllowedRealm) {
        output.WriteUInt32(6, field_names[0], AllowedRealm);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObject) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Object);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(2, Program);
        }
        if (hasCompatibility) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Compatibility);
        }
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Currency);
        }
        if (hasSpecialist) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Specialist);
        }
        if (hasAllowedRealm) {
          size += pb::CodedOutputStream.ComputeUInt32Size(6, AllowedRealm);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBook ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBook ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBook ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBook ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBook ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBook ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBook ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBook ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBook ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBook ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBook prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBook, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      OrderBook result = new OrderBook();
      
      protected override OrderBook MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new OrderBook();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBook.Descriptor; }
      }
      
      public override OrderBook DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
      }
      
      public override OrderBook BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        OrderBook returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBook) {
          return MergeFrom((OrderBook) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBook other) {
        if (other == global::bnet.protocol.exchange.OrderBook.DefaultInstance) return this;
        if (other.HasObject) {
          MergeObject(other.Object);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasCompatibility) {
          Compatibility = other.Compatibility;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.HasAllowedRealm) {
          AllowedRealm = other.AllowedRealm;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BlobOfType.Builder subBuilder = global::bnet.protocol.exchange.BlobOfType.CreateBuilder();
              if (result.hasObject) {
                subBuilder.MergeFrom(Object);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Object = subBuilder.BuildPartial();
              break;
            }
            case 21: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 24: {
              result.hasCompatibility = input.ReadUInt32(ref result.compatibility_);
              break;
            }
            case 34: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 40: {
              result.hasSpecialist = input.ReadInt32(ref result.specialist_);
              break;
            }
            case 48: {
              result.hasAllowedRealm = input.ReadUInt32(ref result.allowedRealm_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObject {
       get { return result.hasObject; }
      }
      public global::bnet.protocol.exchange.BlobOfType Object {
        get { return result.Object; }
        set { SetObject(value); }
      }
      public Builder SetObject(global::bnet.protocol.exchange.BlobOfType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasObject = true;
        result.object_ = value;
        return this;
      }
      public Builder SetObject(global::bnet.protocol.exchange.BlobOfType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasObject = true;
        result.object_ = builderForValue.Build();
        return this;
      }
      public Builder MergeObject(global::bnet.protocol.exchange.BlobOfType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasObject &&
            result.object_ != global::bnet.protocol.exchange.BlobOfType.DefaultInstance) {
            result.object_ = global::bnet.protocol.exchange.BlobOfType.CreateBuilder(result.object_).MergeFrom(value).BuildPartial();
        } else {
          result.object_ = value;
        }
        result.hasObject = true;
        return this;
      }
      public Builder ClearObject() {
        result.hasObject = false;
        result.object_ = global::bnet.protocol.exchange.BlobOfType.DefaultInstance;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasCompatibility {
        get { return result.hasCompatibility; }
      }
      public uint Compatibility {
        get { return result.Compatibility; }
        set { SetCompatibility(value); }
      }
      public Builder SetCompatibility(uint value) {
        result.hasCompatibility = true;
        result.compatibility_ = value;
        return this;
      }
      public Builder ClearCompatibility() {
        result.hasCompatibility = false;
        result.compatibility_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSpecialist {
        get { return result.hasSpecialist; }
      }
      public int Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(int value) {
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public bool HasAllowedRealm {
        get { return result.hasAllowedRealm; }
      }
      public uint AllowedRealm {
        get { return result.AllowedRealm; }
        set { SetAllowedRealm(value); }
      }
      public Builder SetAllowedRealm(uint value) {
        result.hasAllowedRealm = true;
        result.allowedRealm_ = value;
        return this;
      }
      public Builder ClearAllowedRealm() {
        result.hasAllowedRealm = false;
        result.allowedRealm_ = 0;
        return this;
      }
    }
    static OrderBook() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class OrderBookHandle : pb::GeneratedMessage<OrderBookHandle, OrderBookHandle.Builder> {
    private static readonly OrderBookHandle defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _orderBookHandleFieldNames = new string[] { "order_book_id", "partition_id" };
    private static readonly uint[] _orderBookHandleFieldTags = new uint[] { 16, 10 };
    public static OrderBookHandle DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBookHandle DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override OrderBookHandle ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookHandle__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBookHandle, OrderBookHandle.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookHandle__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderBookIdFieldNumber = 2;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBookId) return false;
        if (!PartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookHandleFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasOrderBookId) {
        output.WriteUInt64(2, field_names[0], OrderBookId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderBookId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBookHandle ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBookHandle ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBookHandle ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBookHandle prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBookHandle, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      OrderBookHandle result = new OrderBookHandle();
      
      protected override OrderBookHandle MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new OrderBookHandle();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBookHandle.Descriptor; }
      }
      
      public override OrderBookHandle DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBookHandle.DefaultInstance; }
      }
      
      public override OrderBookHandle BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        OrderBookHandle returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBookHandle) {
          return MergeFrom((OrderBookHandle) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBookHandle other) {
        if (other == global::bnet.protocol.exchange.OrderBookHandle.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookHandleFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookHandleFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
    }
    static OrderBookHandle() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class OrderBookNotification : pb::GeneratedMessage<OrderBookNotification, OrderBookNotification.Builder> {
    private static readonly OrderBookNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _orderBookNotificationFieldNames = new string[] { "order_book", "order_book_id", "partition_id", "status", "trade_now_price", "update_time" };
    private static readonly uint[] _orderBookNotificationFieldTags = new uint[] { 10, 24, 18, 40, 32, 48 };
    public static OrderBookNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBookNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override OrderBookNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBookNotification, OrderBookNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookNotification__FieldAccessorTable; }
    }
    
    public const int OrderBookFieldNumber = 1;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_; }
    }
    
    public const int PartitionIdFieldNumber = 2;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderBookIdFieldNumber = 3;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int TradeNowPriceFieldNumber = 4;
    private bool hasTradeNowPrice;
    private ulong tradeNowPrice_;
    public bool HasTradeNowPrice {
      get { return hasTradeNowPrice; }
    }
    public ulong TradeNowPrice {
      get { return tradeNowPrice_; }
    }
    
    public const int StatusFieldNumber = 5;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public uint Status {
      get { return status_; }
    }
    
    public const int UpdateTimeFieldNumber = 6;
    private bool hasUpdateTime;
    private ulong updateTime_;
    public bool HasUpdateTime {
      get { return hasUpdateTime; }
    }
    public ulong UpdateTime {
      get { return updateTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderBook) return false;
        if (!hasPartitionId) return false;
        if (!hasOrderBookId) return false;
        if (!hasStatus) return false;
        if (!hasUpdateTime) return false;
        if (!OrderBook.IsInitialized) return false;
        if (!PartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookNotificationFieldNames;
      if (hasOrderBook) {
        output.WriteMessage(1, field_names[0], OrderBook);
      }
      if (hasPartitionId) {
        output.WriteMessage(2, field_names[2], PartitionId);
      }
      if (hasOrderBookId) {
        output.WriteUInt64(3, field_names[1], OrderBookId);
      }
      if (hasTradeNowPrice) {
        output.WriteUInt64(4, field_names[4], TradeNowPrice);
      }
      if (hasStatus) {
        output.WriteUInt32(5, field_names[3], Status);
      }
      if (hasUpdateTime) {
        output.WriteUInt64(6, field_names[5], UpdateTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, OrderBook);
        }
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, PartitionId);
        }
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, OrderBookId);
        }
        if (hasTradeNowPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, TradeNowPrice);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, Status);
        }
        if (hasUpdateTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, UpdateTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBookNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBookNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBookNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBookNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      OrderBookNotification result = new OrderBookNotification();
      
      protected override OrderBookNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new OrderBookNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBookNotification.Descriptor; }
      }
      
      public override OrderBookNotification DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBookNotification.DefaultInstance; }
      }
      
      public override OrderBookNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        OrderBookNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBookNotification) {
          return MergeFrom((OrderBookNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBookNotification other) {
        if (other == global::bnet.protocol.exchange.OrderBookNotification.DefaultInstance) return this;
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasTradeNowPrice) {
          TradeNowPrice = other.TradeNowPrice;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasUpdateTime) {
          UpdateTime = other.UpdateTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 32: {
              result.hasTradeNowPrice = input.ReadUInt64(ref result.tradeNowPrice_);
              break;
            }
            case 40: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
            case 48: {
              result.hasUpdateTime = input.ReadUInt64(ref result.updateTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        result.hasOrderBook = false;
        result.orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
        return this;
      }
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasTradeNowPrice {
        get { return result.hasTradeNowPrice; }
      }
      public ulong TradeNowPrice {
        get { return result.TradeNowPrice; }
        set { SetTradeNowPrice(value); }
      }
      public Builder SetTradeNowPrice(ulong value) {
        result.hasTradeNowPrice = true;
        result.tradeNowPrice_ = value;
        return this;
      }
      public Builder ClearTradeNowPrice() {
        result.hasTradeNowPrice = false;
        result.tradeNowPrice_ = 0UL;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(uint value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasUpdateTime {
        get { return result.hasUpdateTime; }
      }
      public ulong UpdateTime {
        get { return result.UpdateTime; }
        set { SetUpdateTime(value); }
      }
      public Builder SetUpdateTime(ulong value) {
        result.hasUpdateTime = true;
        result.updateTime_ = value;
        return this;
      }
      public Builder ClearUpdateTime() {
        result.hasUpdateTime = false;
        result.updateTime_ = 0UL;
        return this;
      }
    }
    static OrderBookNotification() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class OrderBookSummary : pb::GeneratedMessage<OrderBookSummary, OrderBookSummary.Builder> {
    private static readonly OrderBookSummary defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _orderBookSummaryFieldNames = new string[] { "active_time", "amount", "best_bid_price", "best_offer_price", "closed_time", "created_time", "end_time", "order_book", "order_book_id", "out_bid_unit_price", "partition_id", "reason", "result", "status" };
    private static readonly uint[] _orderBookSummaryFieldTags = new uint[] { 88, 40, 56, 48, 96, 80, 64, 34, 16, 112, 10, 104, 24, 72 };
    public static OrderBookSummary DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBookSummary DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override OrderBookSummary ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookSummary__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBookSummary, OrderBookSummary.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookSummary__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderBookIdFieldNumber = 2;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int ResultFieldNumber = 3;
    private bool hasResult;
    private uint result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public uint Result {
      get { return result_; }
    }
    
    public const int OrderBookFieldNumber = 4;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_; }
    }
    
    public const int AmountFieldNumber = 5;
    private bool hasAmount;
    private ulong amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public ulong Amount {
      get { return amount_; }
    }
    
    public const int BestOfferPriceFieldNumber = 6;
    private bool hasBestOfferPrice;
    private ulong bestOfferPrice_;
    public bool HasBestOfferPrice {
      get { return hasBestOfferPrice; }
    }
    public ulong BestOfferPrice {
      get { return bestOfferPrice_; }
    }
    
    public const int BestBidPriceFieldNumber = 7;
    private bool hasBestBidPrice;
    private ulong bestBidPrice_;
    public bool HasBestBidPrice {
      get { return hasBestBidPrice; }
    }
    public ulong BestBidPrice {
      get { return bestBidPrice_; }
    }
    
    public const int EndTimeFieldNumber = 8;
    private bool hasEndTime;
    private ulong endTime_;
    public bool HasEndTime {
      get { return hasEndTime; }
    }
    public ulong EndTime {
      get { return endTime_; }
    }
    
    public const int StatusFieldNumber = 9;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public const int CreatedTimeFieldNumber = 10;
    private bool hasCreatedTime;
    private ulong createdTime_;
    public bool HasCreatedTime {
      get { return hasCreatedTime; }
    }
    public ulong CreatedTime {
      get { return createdTime_; }
    }
    
    public const int ActiveTimeFieldNumber = 11;
    private bool hasActiveTime;
    private ulong activeTime_;
    public bool HasActiveTime {
      get { return hasActiveTime; }
    }
    public ulong ActiveTime {
      get { return activeTime_; }
    }
    
    public const int ClosedTimeFieldNumber = 12;
    private bool hasClosedTime;
    private ulong closedTime_;
    public bool HasClosedTime {
      get { return hasClosedTime; }
    }
    public ulong ClosedTime {
      get { return closedTime_; }
    }
    
    public const int ReasonFieldNumber = 13;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int OutBidUnitPriceFieldNumber = 14;
    private bool hasOutBidUnitPrice;
    private ulong outBidUnitPrice_;
    public bool HasOutBidUnitPrice {
      get { return hasOutBidUnitPrice; }
    }
    public ulong OutBidUnitPrice {
      get { return outBidUnitPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBookId) return false;
        if (!hasResult) return false;
        if (!PartitionId.IsInitialized) return false;
        if (HasOrderBook) {
          if (!OrderBook.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookSummaryFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[10], PartitionId);
      }
      if (hasOrderBookId) {
        output.WriteUInt64(2, field_names[8], OrderBookId);
      }
      if (hasResult) {
        output.WriteUInt32(3, field_names[12], Result);
      }
      if (hasOrderBook) {
        output.WriteMessage(4, field_names[7], OrderBook);
      }
      if (hasAmount) {
        output.WriteUInt64(5, field_names[1], Amount);
      }
      if (hasBestOfferPrice) {
        output.WriteUInt64(6, field_names[3], BestOfferPrice);
      }
      if (hasBestBidPrice) {
        output.WriteUInt64(7, field_names[2], BestBidPrice);
      }
      if (hasEndTime) {
        output.WriteUInt64(8, field_names[6], EndTime);
      }
      if (hasStatus) {
        output.WriteInt32(9, field_names[13], Status);
      }
      if (hasCreatedTime) {
        output.WriteUInt64(10, field_names[5], CreatedTime);
      }
      if (hasActiveTime) {
        output.WriteUInt64(11, field_names[0], ActiveTime);
      }
      if (hasClosedTime) {
        output.WriteUInt64(12, field_names[4], ClosedTime);
      }
      if (hasReason) {
        output.WriteUInt32(13, field_names[11], Reason);
      }
      if (hasOutBidUnitPrice) {
        output.WriteUInt64(14, field_names[9], OutBidUnitPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderBookId);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Result);
        }
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, OrderBook);
        }
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, Amount);
        }
        if (hasBestOfferPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, BestOfferPrice);
        }
        if (hasBestBidPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, BestBidPrice);
        }
        if (hasEndTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, EndTime);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, Status);
        }
        if (hasCreatedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(10, CreatedTime);
        }
        if (hasActiveTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(11, ActiveTime);
        }
        if (hasClosedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(12, ClosedTime);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(13, Reason);
        }
        if (hasOutBidUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(14, OutBidUnitPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBookSummary ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBookSummary ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBookSummary ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBookSummary prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBookSummary, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      OrderBookSummary result = new OrderBookSummary();
      
      protected override OrderBookSummary MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new OrderBookSummary();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBookSummary.Descriptor; }
      }
      
      public override OrderBookSummary DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBookSummary.DefaultInstance; }
      }
      
      public override OrderBookSummary BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        OrderBookSummary returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBookSummary) {
          return MergeFrom((OrderBookSummary) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBookSummary other) {
        if (other == global::bnet.protocol.exchange.OrderBookSummary.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        if (other.HasBestOfferPrice) {
          BestOfferPrice = other.BestOfferPrice;
        }
        if (other.HasBestBidPrice) {
          BestBidPrice = other.BestBidPrice;
        }
        if (other.HasEndTime) {
          EndTime = other.EndTime;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasCreatedTime) {
          CreatedTime = other.CreatedTime;
        }
        if (other.HasActiveTime) {
          ActiveTime = other.ActiveTime;
        }
        if (other.HasClosedTime) {
          ClosedTime = other.ClosedTime;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        if (other.HasOutBidUnitPrice) {
          OutBidUnitPrice = other.OutBidUnitPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookSummaryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookSummaryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 24: {
              result.hasResult = input.ReadUInt32(ref result.result_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasAmount = input.ReadUInt64(ref result.amount_);
              break;
            }
            case 48: {
              result.hasBestOfferPrice = input.ReadUInt64(ref result.bestOfferPrice_);
              break;
            }
            case 56: {
              result.hasBestBidPrice = input.ReadUInt64(ref result.bestBidPrice_);
              break;
            }
            case 64: {
              result.hasEndTime = input.ReadUInt64(ref result.endTime_);
              break;
            }
            case 72: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
            case 80: {
              result.hasCreatedTime = input.ReadUInt64(ref result.createdTime_);
              break;
            }
            case 88: {
              result.hasActiveTime = input.ReadUInt64(ref result.activeTime_);
              break;
            }
            case 96: {
              result.hasClosedTime = input.ReadUInt64(ref result.closedTime_);
              break;
            }
            case 104: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
            case 112: {
              result.hasOutBidUnitPrice = input.ReadUInt64(ref result.outBidUnitPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public uint Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(uint value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        result.hasOrderBook = false;
        result.orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
        return this;
      }
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public ulong Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(ulong value) {
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        result.hasAmount = false;
        result.amount_ = 0UL;
        return this;
      }
      
      public bool HasBestOfferPrice {
        get { return result.hasBestOfferPrice; }
      }
      public ulong BestOfferPrice {
        get { return result.BestOfferPrice; }
        set { SetBestOfferPrice(value); }
      }
      public Builder SetBestOfferPrice(ulong value) {
        result.hasBestOfferPrice = true;
        result.bestOfferPrice_ = value;
        return this;
      }
      public Builder ClearBestOfferPrice() {
        result.hasBestOfferPrice = false;
        result.bestOfferPrice_ = 0UL;
        return this;
      }
      
      public bool HasBestBidPrice {
        get { return result.hasBestBidPrice; }
      }
      public ulong BestBidPrice {
        get { return result.BestBidPrice; }
        set { SetBestBidPrice(value); }
      }
      public Builder SetBestBidPrice(ulong value) {
        result.hasBestBidPrice = true;
        result.bestBidPrice_ = value;
        return this;
      }
      public Builder ClearBestBidPrice() {
        result.hasBestBidPrice = false;
        result.bestBidPrice_ = 0UL;
        return this;
      }
      
      public bool HasEndTime {
        get { return result.hasEndTime; }
      }
      public ulong EndTime {
        get { return result.EndTime; }
        set { SetEndTime(value); }
      }
      public Builder SetEndTime(ulong value) {
        result.hasEndTime = true;
        result.endTime_ = value;
        return this;
      }
      public Builder ClearEndTime() {
        result.hasEndTime = false;
        result.endTime_ = 0UL;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasCreatedTime {
        get { return result.hasCreatedTime; }
      }
      public ulong CreatedTime {
        get { return result.CreatedTime; }
        set { SetCreatedTime(value); }
      }
      public Builder SetCreatedTime(ulong value) {
        result.hasCreatedTime = true;
        result.createdTime_ = value;
        return this;
      }
      public Builder ClearCreatedTime() {
        result.hasCreatedTime = false;
        result.createdTime_ = 0UL;
        return this;
      }
      
      public bool HasActiveTime {
        get { return result.hasActiveTime; }
      }
      public ulong ActiveTime {
        get { return result.ActiveTime; }
        set { SetActiveTime(value); }
      }
      public Builder SetActiveTime(ulong value) {
        result.hasActiveTime = true;
        result.activeTime_ = value;
        return this;
      }
      public Builder ClearActiveTime() {
        result.hasActiveTime = false;
        result.activeTime_ = 0UL;
        return this;
      }
      
      public bool HasClosedTime {
        get { return result.hasClosedTime; }
      }
      public ulong ClosedTime {
        get { return result.ClosedTime; }
        set { SetClosedTime(value); }
      }
      public Builder SetClosedTime(ulong value) {
        result.hasClosedTime = true;
        result.closedTime_ = value;
        return this;
      }
      public Builder ClearClosedTime() {
        result.hasClosedTime = false;
        result.closedTime_ = 0UL;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasOutBidUnitPrice {
        get { return result.hasOutBidUnitPrice; }
      }
      public ulong OutBidUnitPrice {
        get { return result.OutBidUnitPrice; }
        set { SetOutBidUnitPrice(value); }
      }
      public Builder SetOutBidUnitPrice(ulong value) {
        result.hasOutBidUnitPrice = true;
        result.outBidUnitPrice_ = value;
        return this;
      }
      public Builder ClearOutBidUnitPrice() {
        result.hasOutBidUnitPrice = false;
        result.outBidUnitPrice_ = 0UL;
        return this;
      }
    }
    static OrderBookSummary() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class Order : pb::GeneratedMessage<Order, Order.Builder> {
    private static readonly Order defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _orderFieldNames = new string[] { "account_for_item", "account_for_money", "amount", "bnet_account", "end_time", "game_account", "start_time", "toon" };
    private static readonly uint[] _orderFieldTags = new uint[] { 42, 34, 8, 50, 24, 58, 16, 66 };
    public static Order DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Order DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Order ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Order__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Order, Order.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Order__FieldAccessorTable; }
    }
    
    public const int AmountFieldNumber = 1;
    private bool hasAmount;
    private uint amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public uint Amount {
      get { return amount_; }
    }
    
    public const int StartTimeFieldNumber = 2;
    private bool hasStartTime;
    private ulong startTime_;
    public bool HasStartTime {
      get { return hasStartTime; }
    }
    public ulong StartTime {
      get { return startTime_; }
    }
    
    public const int EndTimeFieldNumber = 3;
    private bool hasEndTime;
    private ulong endTime_;
    public bool HasEndTime {
      get { return hasEndTime; }
    }
    public ulong EndTime {
      get { return endTime_; }
    }
    
    public const int AccountForMoneyFieldNumber = 4;
    private bool hasAccountForMoney;
    private global::bnet.protocol.exchange.BlobFrom accountForMoney_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
    public bool HasAccountForMoney {
      get { return hasAccountForMoney; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForMoney {
      get { return accountForMoney_; }
    }
    
    public const int AccountForItemFieldNumber = 5;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_; }
    }
    
    public const int BnetAccountFieldNumber = 6;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_; }
    }
    
    public const int GameAccountFieldNumber = 7;
    private bool hasGameAccount;
    private global::bnet.protocol.EntityId gameAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bnet.protocol.EntityId GameAccount {
      get { return gameAccount_; }
    }
    
    public const int ToonFieldNumber = 8;
    private bool hasToon;
    private global::bnet.protocol.EntityId toon_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasToon {
      get { return hasToon; }
    }
    public global::bnet.protocol.EntityId Toon {
      get { return toon_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAmount) return false;
        if (HasAccountForMoney) {
          if (!AccountForMoney.IsInitialized) return false;
        }
        if (HasAccountForItem) {
          if (!AccountForItem.IsInitialized) return false;
        }
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        if (HasGameAccount) {
          if (!GameAccount.IsInitialized) return false;
        }
        if (HasToon) {
          if (!Toon.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderFieldNames;
      if (hasAmount) {
        output.WriteUInt32(1, field_names[2], Amount);
      }
      if (hasStartTime) {
        output.WriteUInt64(2, field_names[6], StartTime);
      }
      if (hasEndTime) {
        output.WriteUInt64(3, field_names[4], EndTime);
      }
      if (hasAccountForMoney) {
        output.WriteMessage(4, field_names[1], AccountForMoney);
      }
      if (hasAccountForItem) {
        output.WriteMessage(5, field_names[0], AccountForItem);
      }
      if (hasBnetAccount) {
        output.WriteMessage(6, field_names[3], BnetAccount);
      }
      if (hasGameAccount) {
        output.WriteMessage(7, field_names[5], GameAccount);
      }
      if (hasToon) {
        output.WriteMessage(8, field_names[7], Toon);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Amount);
        }
        if (hasStartTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, StartTime);
        }
        if (hasEndTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, EndTime);
        }
        if (hasAccountForMoney) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, AccountForMoney);
        }
        if (hasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, AccountForItem);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, BnetAccount);
        }
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, GameAccount);
        }
        if (hasToon) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, Toon);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Order ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Order ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Order ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Order ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Order ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Order ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Order ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Order ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Order ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Order ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Order prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<Order, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Order result = new Order();
      
      protected override Order MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Order();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Order.Descriptor; }
      }
      
      public override Order DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Order.DefaultInstance; }
      }
      
      public override Order BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Order returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Order) {
          return MergeFrom((Order) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Order other) {
        if (other == global::bnet.protocol.exchange.Order.DefaultInstance) return this;
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        if (other.HasStartTime) {
          StartTime = other.StartTime;
        }
        if (other.HasEndTime) {
          EndTime = other.EndTime;
        }
        if (other.HasAccountForMoney) {
          MergeAccountForMoney(other.AccountForMoney);
        }
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        if (other.HasToon) {
          MergeToon(other.Toon);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAmount = input.ReadUInt32(ref result.amount_);
              break;
            }
            case 16: {
              result.hasStartTime = input.ReadUInt64(ref result.startTime_);
              break;
            }
            case 24: {
              result.hasEndTime = input.ReadUInt64(ref result.endTime_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForMoney) {
                subBuilder.MergeFrom(AccountForMoney);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForMoney = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasToon) {
                subBuilder.MergeFrom(Toon);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Toon = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public uint Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(uint value) {
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        result.hasAmount = false;
        result.amount_ = 0;
        return this;
      }
      
      public bool HasStartTime {
        get { return result.hasStartTime; }
      }
      public ulong StartTime {
        get { return result.StartTime; }
        set { SetStartTime(value); }
      }
      public Builder SetStartTime(ulong value) {
        result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder ClearStartTime() {
        result.hasStartTime = false;
        result.startTime_ = 0UL;
        return this;
      }
      
      public bool HasEndTime {
        get { return result.hasEndTime; }
      }
      public ulong EndTime {
        get { return result.EndTime; }
        set { SetEndTime(value); }
      }
      public Builder SetEndTime(ulong value) {
        result.hasEndTime = true;
        result.endTime_ = value;
        return this;
      }
      public Builder ClearEndTime() {
        result.hasEndTime = false;
        result.endTime_ = 0UL;
        return this;
      }
      
      public bool HasAccountForMoney {
       get { return result.hasAccountForMoney; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForMoney {
        get { return result.AccountForMoney; }
        set { SetAccountForMoney(value); }
      }
      public Builder SetAccountForMoney(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAccountForMoney = true;
        result.accountForMoney_ = value;
        return this;
      }
      public Builder SetAccountForMoney(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAccountForMoney = true;
        result.accountForMoney_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForMoney(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAccountForMoney &&
            result.accountForMoney_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForMoney_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForMoney_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForMoney_ = value;
        }
        result.hasAccountForMoney = true;
        return this;
      }
      public Builder ClearAccountForMoney() {
        result.hasAccountForMoney = false;
        result.accountForMoney_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
        return this;
      }
      
      public bool HasAccountForItem {
       get { return result.hasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        result.hasAccountForItem = false;
        result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        result.hasBnetAccount = false;
        result.bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bnet.protocol.EntityId GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        result.hasGameAccount = false;
        result.gameAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasToon {
       get { return result.hasToon; }
      }
      public global::bnet.protocol.EntityId Toon {
        get { return result.Toon; }
        set { SetToon(value); }
      }
      public Builder SetToon(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasToon = true;
        result.toon_ = value;
        return this;
      }
      public Builder SetToon(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasToon = true;
        result.toon_ = builderForValue.Build();
        return this;
      }
      public Builder MergeToon(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasToon &&
            result.toon_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.toon_ = global::bnet.protocol.EntityId.CreateBuilder(result.toon_).MergeFrom(value).BuildPartial();
        } else {
          result.toon_ = value;
        }
        result.hasToon = true;
        return this;
      }
      public Builder ClearToon() {
        result.hasToon = false;
        result.toon_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static Order() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class Extension : pb::GeneratedMessage<Extension, Extension.Builder> {
    private static readonly Extension defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _extensionFieldNames = new string[] { "authorized_time", "closed_time", "created_time", "filled_amount", "items_to_claim", "money_to_claim", "order_book", "order_book_id", "order_book_status", "order_id", "order_status", "partition_id", "reason" };
    private static readonly uint[] _extensionFieldTags = new uint[] { 48, 64, 56, 32, 104, 96, 82, 16, 88, 24, 40, 10, 72 };
    public static Extension DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Extension DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Extension ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Extension__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Extension, Extension.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Extension__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderBookIdFieldNumber = 2;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int OrderIdFieldNumber = 3;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int FilledAmountFieldNumber = 4;
    private bool hasFilledAmount;
    private ulong filledAmount_;
    public bool HasFilledAmount {
      get { return hasFilledAmount; }
    }
    public ulong FilledAmount {
      get { return filledAmount_; }
    }
    
    public const int OrderStatusFieldNumber = 5;
    private bool hasOrderStatus;
    private int orderStatus_;
    public bool HasOrderStatus {
      get { return hasOrderStatus; }
    }
    public int OrderStatus {
      get { return orderStatus_; }
    }
    
    public const int AuthorizedTimeFieldNumber = 6;
    private bool hasAuthorizedTime;
    private ulong authorizedTime_;
    public bool HasAuthorizedTime {
      get { return hasAuthorizedTime; }
    }
    public ulong AuthorizedTime {
      get { return authorizedTime_; }
    }
    
    public const int CreatedTimeFieldNumber = 7;
    private bool hasCreatedTime;
    private ulong createdTime_;
    public bool HasCreatedTime {
      get { return hasCreatedTime; }
    }
    public ulong CreatedTime {
      get { return createdTime_; }
    }
    
    public const int ClosedTimeFieldNumber = 8;
    private bool hasClosedTime;
    private ulong closedTime_;
    public bool HasClosedTime {
      get { return hasClosedTime; }
    }
    public ulong ClosedTime {
      get { return closedTime_; }
    }
    
    public const int ReasonFieldNumber = 9;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int OrderBookFieldNumber = 10;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_; }
    }
    
    public const int OrderBookStatusFieldNumber = 11;
    private bool hasOrderBookStatus;
    private ulong orderBookStatus_;
    public bool HasOrderBookStatus {
      get { return hasOrderBookStatus; }
    }
    public ulong OrderBookStatus {
      get { return orderBookStatus_; }
    }
    
    public const int MoneyToClaimFieldNumber = 12;
    private bool hasMoneyToClaim;
    private ulong moneyToClaim_;
    public bool HasMoneyToClaim {
      get { return hasMoneyToClaim; }
    }
    public ulong MoneyToClaim {
      get { return moneyToClaim_; }
    }
    
    public const int ItemsToClaimFieldNumber = 13;
    private bool hasItemsToClaim;
    private ulong itemsToClaim_;
    public bool HasItemsToClaim {
      get { return hasItemsToClaim; }
    }
    public ulong ItemsToClaim {
      get { return itemsToClaim_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBookId) return false;
        if (!hasOrderId) return false;
        if (!PartitionId.IsInitialized) return false;
        if (HasOrderBook) {
          if (!OrderBook.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _extensionFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[11], PartitionId);
      }
      if (hasOrderBookId) {
        output.WriteUInt64(2, field_names[7], OrderBookId);
      }
      if (hasOrderId) {
        output.WriteUInt64(3, field_names[9], OrderId);
      }
      if (hasFilledAmount) {
        output.WriteUInt64(4, field_names[3], FilledAmount);
      }
      if (hasOrderStatus) {
        output.WriteInt32(5, field_names[10], OrderStatus);
      }
      if (hasAuthorizedTime) {
        output.WriteUInt64(6, field_names[0], AuthorizedTime);
      }
      if (hasCreatedTime) {
        output.WriteUInt64(7, field_names[2], CreatedTime);
      }
      if (hasClosedTime) {
        output.WriteUInt64(8, field_names[1], ClosedTime);
      }
      if (hasReason) {
        output.WriteUInt32(9, field_names[12], Reason);
      }
      if (hasOrderBook) {
        output.WriteMessage(10, field_names[6], OrderBook);
      }
      if (hasOrderBookStatus) {
        output.WriteUInt64(11, field_names[8], OrderBookStatus);
      }
      if (hasMoneyToClaim) {
        output.WriteUInt64(12, field_names[5], MoneyToClaim);
      }
      if (hasItemsToClaim) {
        output.WriteUInt64(13, field_names[4], ItemsToClaim);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderBookId);
        }
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, OrderId);
        }
        if (hasFilledAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, FilledAmount);
        }
        if (hasOrderStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, OrderStatus);
        }
        if (hasAuthorizedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, AuthorizedTime);
        }
        if (hasCreatedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, CreatedTime);
        }
        if (hasClosedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, ClosedTime);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(9, Reason);
        }
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, OrderBook);
        }
        if (hasOrderBookStatus) {
          size += pb::CodedOutputStream.ComputeUInt64Size(11, OrderBookStatus);
        }
        if (hasMoneyToClaim) {
          size += pb::CodedOutputStream.ComputeUInt64Size(12, MoneyToClaim);
        }
        if (hasItemsToClaim) {
          size += pb::CodedOutputStream.ComputeUInt64Size(13, ItemsToClaim);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Extension ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Extension ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Extension ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Extension ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Extension ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Extension ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Extension ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Extension ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Extension ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Extension ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Extension prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<Extension, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Extension result = new Extension();
      
      protected override Extension MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Extension();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Extension.Descriptor; }
      }
      
      public override Extension DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Extension.DefaultInstance; }
      }
      
      public override Extension BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Extension returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Extension) {
          return MergeFrom((Extension) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Extension other) {
        if (other == global::bnet.protocol.exchange.Extension.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasFilledAmount) {
          FilledAmount = other.FilledAmount;
        }
        if (other.HasOrderStatus) {
          OrderStatus = other.OrderStatus;
        }
        if (other.HasAuthorizedTime) {
          AuthorizedTime = other.AuthorizedTime;
        }
        if (other.HasCreatedTime) {
          CreatedTime = other.CreatedTime;
        }
        if (other.HasClosedTime) {
          ClosedTime = other.ClosedTime;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasOrderBookStatus) {
          OrderBookStatus = other.OrderBookStatus;
        }
        if (other.HasMoneyToClaim) {
          MoneyToClaim = other.MoneyToClaim;
        }
        if (other.HasItemsToClaim) {
          ItemsToClaim = other.ItemsToClaim;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_extensionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _extensionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 24: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 32: {
              result.hasFilledAmount = input.ReadUInt64(ref result.filledAmount_);
              break;
            }
            case 40: {
              result.hasOrderStatus = input.ReadInt32(ref result.orderStatus_);
              break;
            }
            case 48: {
              result.hasAuthorizedTime = input.ReadUInt64(ref result.authorizedTime_);
              break;
            }
            case 56: {
              result.hasCreatedTime = input.ReadUInt64(ref result.createdTime_);
              break;
            }
            case 64: {
              result.hasClosedTime = input.ReadUInt64(ref result.closedTime_);
              break;
            }
            case 72: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
            case 82: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 88: {
              result.hasOrderBookStatus = input.ReadUInt64(ref result.orderBookStatus_);
              break;
            }
            case 96: {
              result.hasMoneyToClaim = input.ReadUInt64(ref result.moneyToClaim_);
              break;
            }
            case 104: {
              result.hasItemsToClaim = input.ReadUInt64(ref result.itemsToClaim_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasFilledAmount {
        get { return result.hasFilledAmount; }
      }
      public ulong FilledAmount {
        get { return result.FilledAmount; }
        set { SetFilledAmount(value); }
      }
      public Builder SetFilledAmount(ulong value) {
        result.hasFilledAmount = true;
        result.filledAmount_ = value;
        return this;
      }
      public Builder ClearFilledAmount() {
        result.hasFilledAmount = false;
        result.filledAmount_ = 0UL;
        return this;
      }
      
      public bool HasOrderStatus {
        get { return result.hasOrderStatus; }
      }
      public int OrderStatus {
        get { return result.OrderStatus; }
        set { SetOrderStatus(value); }
      }
      public Builder SetOrderStatus(int value) {
        result.hasOrderStatus = true;
        result.orderStatus_ = value;
        return this;
      }
      public Builder ClearOrderStatus() {
        result.hasOrderStatus = false;
        result.orderStatus_ = 0;
        return this;
      }
      
      public bool HasAuthorizedTime {
        get { return result.hasAuthorizedTime; }
      }
      public ulong AuthorizedTime {
        get { return result.AuthorizedTime; }
        set { SetAuthorizedTime(value); }
      }
      public Builder SetAuthorizedTime(ulong value) {
        result.hasAuthorizedTime = true;
        result.authorizedTime_ = value;
        return this;
      }
      public Builder ClearAuthorizedTime() {
        result.hasAuthorizedTime = false;
        result.authorizedTime_ = 0UL;
        return this;
      }
      
      public bool HasCreatedTime {
        get { return result.hasCreatedTime; }
      }
      public ulong CreatedTime {
        get { return result.CreatedTime; }
        set { SetCreatedTime(value); }
      }
      public Builder SetCreatedTime(ulong value) {
        result.hasCreatedTime = true;
        result.createdTime_ = value;
        return this;
      }
      public Builder ClearCreatedTime() {
        result.hasCreatedTime = false;
        result.createdTime_ = 0UL;
        return this;
      }
      
      public bool HasClosedTime {
        get { return result.hasClosedTime; }
      }
      public ulong ClosedTime {
        get { return result.ClosedTime; }
        set { SetClosedTime(value); }
      }
      public Builder SetClosedTime(ulong value) {
        result.hasClosedTime = true;
        result.closedTime_ = value;
        return this;
      }
      public Builder ClearClosedTime() {
        result.hasClosedTime = false;
        result.closedTime_ = 0UL;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        result.hasOrderBook = false;
        result.orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
        return this;
      }
      
      public bool HasOrderBookStatus {
        get { return result.hasOrderBookStatus; }
      }
      public ulong OrderBookStatus {
        get { return result.OrderBookStatus; }
        set { SetOrderBookStatus(value); }
      }
      public Builder SetOrderBookStatus(ulong value) {
        result.hasOrderBookStatus = true;
        result.orderBookStatus_ = value;
        return this;
      }
      public Builder ClearOrderBookStatus() {
        result.hasOrderBookStatus = false;
        result.orderBookStatus_ = 0UL;
        return this;
      }
      
      public bool HasMoneyToClaim {
        get { return result.hasMoneyToClaim; }
      }
      public ulong MoneyToClaim {
        get { return result.MoneyToClaim; }
        set { SetMoneyToClaim(value); }
      }
      public Builder SetMoneyToClaim(ulong value) {
        result.hasMoneyToClaim = true;
        result.moneyToClaim_ = value;
        return this;
      }
      public Builder ClearMoneyToClaim() {
        result.hasMoneyToClaim = false;
        result.moneyToClaim_ = 0UL;
        return this;
      }
      
      public bool HasItemsToClaim {
        get { return result.hasItemsToClaim; }
      }
      public ulong ItemsToClaim {
        get { return result.ItemsToClaim; }
        set { SetItemsToClaim(value); }
      }
      public Builder SetItemsToClaim(ulong value) {
        result.hasItemsToClaim = true;
        result.itemsToClaim_ = value;
        return this;
      }
      public Builder ClearItemsToClaim() {
        result.hasItemsToClaim = false;
        result.itemsToClaim_ = 0UL;
        return this;
      }
    }
    static Extension() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class Offer : pb::GeneratedMessage<Offer, Offer.Builder> {
    private static readonly Offer defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _offerFieldNames = new string[] { "order", "out_bid_price", "reserve_price", "trade_now_price" };
    private static readonly uint[] _offerFieldTags = new uint[] { 10, 32, 24, 16 };
    public static Offer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Offer DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Offer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Offer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Offer, Offer.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Offer__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::bnet.protocol.exchange.Order order_ = global::bnet.protocol.exchange.Order.DefaultInstance;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::bnet.protocol.exchange.Order Order {
      get { return order_; }
    }
    
    public const int TradeNowPriceFieldNumber = 2;
    private bool hasTradeNowPrice;
    private ulong tradeNowPrice_;
    public bool HasTradeNowPrice {
      get { return hasTradeNowPrice; }
    }
    public ulong TradeNowPrice {
      get { return tradeNowPrice_; }
    }
    
    public const int ReservePriceFieldNumber = 3;
    private bool hasReservePrice;
    private ulong reservePrice_;
    public bool HasReservePrice {
      get { return hasReservePrice; }
    }
    public ulong ReservePrice {
      get { return reservePrice_; }
    }
    
    public const int OutBidPriceFieldNumber = 4;
    private bool hasOutBidPrice;
    private ulong outBidPrice_;
    public bool HasOutBidPrice {
      get { return hasOutBidPrice; }
    }
    public ulong OutBidPrice {
      get { return outBidPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrder) return false;
        if (!Order.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _offerFieldNames;
      if (hasOrder) {
        output.WriteMessage(1, field_names[0], Order);
      }
      if (hasTradeNowPrice) {
        output.WriteUInt64(2, field_names[3], TradeNowPrice);
      }
      if (hasReservePrice) {
        output.WriteUInt64(3, field_names[2], ReservePrice);
      }
      if (hasOutBidPrice) {
        output.WriteUInt64(4, field_names[1], OutBidPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrder) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Order);
        }
        if (hasTradeNowPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, TradeNowPrice);
        }
        if (hasReservePrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ReservePrice);
        }
        if (hasOutBidPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, OutBidPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Offer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Offer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Offer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Offer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Offer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Offer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Offer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Offer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Offer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Offer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Offer prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<Offer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Offer result = new Offer();
      
      protected override Offer MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Offer();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Offer.Descriptor; }
      }
      
      public override Offer DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Offer.DefaultInstance; }
      }
      
      public override Offer BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Offer returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Offer) {
          return MergeFrom((Offer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Offer other) {
        if (other == global::bnet.protocol.exchange.Offer.DefaultInstance) return this;
        if (other.HasOrder) {
          MergeOrder(other.Order);
        }
        if (other.HasTradeNowPrice) {
          TradeNowPrice = other.TradeNowPrice;
        }
        if (other.HasReservePrice) {
          ReservePrice = other.ReservePrice;
        }
        if (other.HasOutBidPrice) {
          OutBidPrice = other.OutBidPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_offerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _offerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Order.Builder subBuilder = global::bnet.protocol.exchange.Order.CreateBuilder();
              if (result.hasOrder) {
                subBuilder.MergeFrom(Order);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Order = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasTradeNowPrice = input.ReadUInt64(ref result.tradeNowPrice_);
              break;
            }
            case 24: {
              result.hasReservePrice = input.ReadUInt64(ref result.reservePrice_);
              break;
            }
            case 32: {
              result.hasOutBidPrice = input.ReadUInt64(ref result.outBidPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::bnet.protocol.exchange.Order Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::bnet.protocol.exchange.Order value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder SetOrder(global::bnet.protocol.exchange.Order.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOrder = true;
        result.order_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrder(global::bnet.protocol.exchange.Order value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasOrder &&
            result.order_ != global::bnet.protocol.exchange.Order.DefaultInstance) {
            result.order_ = global::bnet.protocol.exchange.Order.CreateBuilder(result.order_).MergeFrom(value).BuildPartial();
        } else {
          result.order_ = value;
        }
        result.hasOrder = true;
        return this;
      }
      public Builder ClearOrder() {
        result.hasOrder = false;
        result.order_ = global::bnet.protocol.exchange.Order.DefaultInstance;
        return this;
      }
      
      public bool HasTradeNowPrice {
        get { return result.hasTradeNowPrice; }
      }
      public ulong TradeNowPrice {
        get { return result.TradeNowPrice; }
        set { SetTradeNowPrice(value); }
      }
      public Builder SetTradeNowPrice(ulong value) {
        result.hasTradeNowPrice = true;
        result.tradeNowPrice_ = value;
        return this;
      }
      public Builder ClearTradeNowPrice() {
        result.hasTradeNowPrice = false;
        result.tradeNowPrice_ = 0UL;
        return this;
      }
      
      public bool HasReservePrice {
        get { return result.hasReservePrice; }
      }
      public ulong ReservePrice {
        get { return result.ReservePrice; }
        set { SetReservePrice(value); }
      }
      public Builder SetReservePrice(ulong value) {
        result.hasReservePrice = true;
        result.reservePrice_ = value;
        return this;
      }
      public Builder ClearReservePrice() {
        result.hasReservePrice = false;
        result.reservePrice_ = 0UL;
        return this;
      }
      
      public bool HasOutBidPrice {
        get { return result.hasOutBidPrice; }
      }
      public ulong OutBidPrice {
        get { return result.OutBidPrice; }
        set { SetOutBidPrice(value); }
      }
      public Builder SetOutBidPrice(ulong value) {
        result.hasOutBidPrice = true;
        result.outBidPrice_ = value;
        return this;
      }
      public Builder ClearOutBidPrice() {
        result.hasOutBidPrice = false;
        result.outBidPrice_ = 0UL;
        return this;
      }
    }
    static Offer() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class OfferExtended : pb::GeneratedMessage<OfferExtended, OfferExtended.Builder> {
    private static readonly OfferExtended defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _offerExtendedFieldNames = new string[] { "current_winning_price", "extension", "offer" };
    private static readonly uint[] _offerExtendedFieldTags = new uint[] { 24, 18, 10 };
    public static OfferExtended DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OfferExtended DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override OfferExtended ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OfferExtended__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OfferExtended, OfferExtended.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OfferExtended__FieldAccessorTable; }
    }
    
    public const int OfferFieldNumber = 1;
    private bool hasOffer;
    private global::bnet.protocol.exchange.Offer offer_ = global::bnet.protocol.exchange.Offer.DefaultInstance;
    public bool HasOffer {
      get { return hasOffer; }
    }
    public global::bnet.protocol.exchange.Offer Offer {
      get { return offer_; }
    }
    
    public const int ExtensionFieldNumber = 2;
    private bool hasExtension;
    private global::bnet.protocol.exchange.Extension extension_ = global::bnet.protocol.exchange.Extension.DefaultInstance;
    public bool HasExtension {
      get { return hasExtension; }
    }
    public global::bnet.protocol.exchange.Extension Extension {
      get { return extension_; }
    }
    
    public const int CurrentWinningPriceFieldNumber = 3;
    private bool hasCurrentWinningPrice;
    private ulong currentWinningPrice_;
    public bool HasCurrentWinningPrice {
      get { return hasCurrentWinningPrice; }
    }
    public ulong CurrentWinningPrice {
      get { return currentWinningPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOffer) return false;
        if (!hasExtension) return false;
        if (!Offer.IsInitialized) return false;
        if (!Extension.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _offerExtendedFieldNames;
      if (hasOffer) {
        output.WriteMessage(1, field_names[2], Offer);
      }
      if (hasExtension) {
        output.WriteMessage(2, field_names[1], Extension);
      }
      if (hasCurrentWinningPrice) {
        output.WriteUInt64(3, field_names[0], CurrentWinningPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOffer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Offer);
        }
        if (hasExtension) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Extension);
        }
        if (hasCurrentWinningPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, CurrentWinningPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OfferExtended ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferExtended ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferExtended ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferExtended ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferExtended ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferExtended ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OfferExtended ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OfferExtended ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OfferExtended ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferExtended ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OfferExtended prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<OfferExtended, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      OfferExtended result = new OfferExtended();
      
      protected override OfferExtended MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new OfferExtended();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OfferExtended.Descriptor; }
      }
      
      public override OfferExtended DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OfferExtended.DefaultInstance; }
      }
      
      public override OfferExtended BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        OfferExtended returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OfferExtended) {
          return MergeFrom((OfferExtended) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OfferExtended other) {
        if (other == global::bnet.protocol.exchange.OfferExtended.DefaultInstance) return this;
        if (other.HasOffer) {
          MergeOffer(other.Offer);
        }
        if (other.HasExtension) {
          MergeExtension(other.Extension);
        }
        if (other.HasCurrentWinningPrice) {
          CurrentWinningPrice = other.CurrentWinningPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_offerExtendedFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _offerExtendedFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Offer.Builder subBuilder = global::bnet.protocol.exchange.Offer.CreateBuilder();
              if (result.hasOffer) {
                subBuilder.MergeFrom(Offer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Offer = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.Extension.Builder subBuilder = global::bnet.protocol.exchange.Extension.CreateBuilder();
              if (result.hasExtension) {
                subBuilder.MergeFrom(Extension);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Extension = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasCurrentWinningPrice = input.ReadUInt64(ref result.currentWinningPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffer {
       get { return result.hasOffer; }
      }
      public global::bnet.protocol.exchange.Offer Offer {
        get { return result.Offer; }
        set { SetOffer(value); }
      }
      public Builder SetOffer(global::bnet.protocol.exchange.Offer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOffer = true;
        result.offer_ = value;
        return this;
      }
      public Builder SetOffer(global::bnet.protocol.exchange.Offer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOffer = true;
        result.offer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOffer(global::bnet.protocol.exchange.Offer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasOffer &&
            result.offer_ != global::bnet.protocol.exchange.Offer.DefaultInstance) {
            result.offer_ = global::bnet.protocol.exchange.Offer.CreateBuilder(result.offer_).MergeFrom(value).BuildPartial();
        } else {
          result.offer_ = value;
        }
        result.hasOffer = true;
        return this;
      }
      public Builder ClearOffer() {
        result.hasOffer = false;
        result.offer_ = global::bnet.protocol.exchange.Offer.DefaultInstance;
        return this;
      }
      
      public bool HasExtension {
       get { return result.hasExtension; }
      }
      public global::bnet.protocol.exchange.Extension Extension {
        get { return result.Extension; }
        set { SetExtension(value); }
      }
      public Builder SetExtension(global::bnet.protocol.exchange.Extension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasExtension = true;
        result.extension_ = value;
        return this;
      }
      public Builder SetExtension(global::bnet.protocol.exchange.Extension.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasExtension = true;
        result.extension_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExtension(global::bnet.protocol.exchange.Extension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasExtension &&
            result.extension_ != global::bnet.protocol.exchange.Extension.DefaultInstance) {
            result.extension_ = global::bnet.protocol.exchange.Extension.CreateBuilder(result.extension_).MergeFrom(value).BuildPartial();
        } else {
          result.extension_ = value;
        }
        result.hasExtension = true;
        return this;
      }
      public Builder ClearExtension() {
        result.hasExtension = false;
        result.extension_ = global::bnet.protocol.exchange.Extension.DefaultInstance;
        return this;
      }
      
      public bool HasCurrentWinningPrice {
        get { return result.hasCurrentWinningPrice; }
      }
      public ulong CurrentWinningPrice {
        get { return result.CurrentWinningPrice; }
        set { SetCurrentWinningPrice(value); }
      }
      public Builder SetCurrentWinningPrice(ulong value) {
        result.hasCurrentWinningPrice = true;
        result.currentWinningPrice_ = value;
        return this;
      }
      public Builder ClearCurrentWinningPrice() {
        result.hasCurrentWinningPrice = false;
        result.currentWinningPrice_ = 0UL;
        return this;
      }
    }
    static OfferExtended() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class OfferCreation : pb::GeneratedMessage<OfferCreation, OfferCreation.Builder> {
    private static readonly OfferCreation defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _offerCreationFieldNames = new string[] { "auction_duration", "auction_start_delay", "billing_address", "offer" };
    private static readonly uint[] _offerCreationFieldTags = new uint[] { 16, 24, 34, 10 };
    public static OfferCreation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OfferCreation DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override OfferCreation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OfferCreation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OfferCreation, OfferCreation.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OfferCreation__FieldAccessorTable; }
    }
    
    public const int OfferFieldNumber = 1;
    private bool hasOffer;
    private global::bnet.protocol.exchange.Offer offer_ = global::bnet.protocol.exchange.Offer.DefaultInstance;
    public bool HasOffer {
      get { return hasOffer; }
    }
    public global::bnet.protocol.exchange.Offer Offer {
      get { return offer_; }
    }
    
    public const int AuctionDurationFieldNumber = 2;
    private bool hasAuctionDuration;
    private ulong auctionDuration_;
    public bool HasAuctionDuration {
      get { return hasAuctionDuration; }
    }
    public ulong AuctionDuration {
      get { return auctionDuration_; }
    }
    
    public const int AuctionStartDelayFieldNumber = 3;
    private bool hasAuctionStartDelay;
    private ulong auctionStartDelay_;
    public bool HasAuctionStartDelay {
      get { return hasAuctionStartDelay; }
    }
    public ulong AuctionStartDelay {
      get { return auctionStartDelay_; }
    }
    
    public const int BillingAddressFieldNumber = 4;
    private bool hasBillingAddress;
    private global::bnet.protocol.exchange.BillingAddress billingAddress_ = global::bnet.protocol.exchange.BillingAddress.DefaultInstance;
    public bool HasBillingAddress {
      get { return hasBillingAddress; }
    }
    public global::bnet.protocol.exchange.BillingAddress BillingAddress {
      get { return billingAddress_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOffer) return false;
        if (!Offer.IsInitialized) return false;
        if (HasBillingAddress) {
          if (!BillingAddress.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _offerCreationFieldNames;
      if (hasOffer) {
        output.WriteMessage(1, field_names[3], Offer);
      }
      if (hasAuctionDuration) {
        output.WriteUInt64(2, field_names[0], AuctionDuration);
      }
      if (hasAuctionStartDelay) {
        output.WriteUInt64(3, field_names[1], AuctionStartDelay);
      }
      if (hasBillingAddress) {
        output.WriteMessage(4, field_names[2], BillingAddress);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOffer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Offer);
        }
        if (hasAuctionDuration) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, AuctionDuration);
        }
        if (hasAuctionStartDelay) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, AuctionStartDelay);
        }
        if (hasBillingAddress) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BillingAddress);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OfferCreation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferCreation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferCreation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferCreation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferCreation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferCreation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OfferCreation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OfferCreation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OfferCreation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferCreation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OfferCreation prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<OfferCreation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      OfferCreation result = new OfferCreation();
      
      protected override OfferCreation MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new OfferCreation();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OfferCreation.Descriptor; }
      }
      
      public override OfferCreation DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OfferCreation.DefaultInstance; }
      }
      
      public override OfferCreation BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        OfferCreation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OfferCreation) {
          return MergeFrom((OfferCreation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OfferCreation other) {
        if (other == global::bnet.protocol.exchange.OfferCreation.DefaultInstance) return this;
        if (other.HasOffer) {
          MergeOffer(other.Offer);
        }
        if (other.HasAuctionDuration) {
          AuctionDuration = other.AuctionDuration;
        }
        if (other.HasAuctionStartDelay) {
          AuctionStartDelay = other.AuctionStartDelay;
        }
        if (other.HasBillingAddress) {
          MergeBillingAddress(other.BillingAddress);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_offerCreationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _offerCreationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Offer.Builder subBuilder = global::bnet.protocol.exchange.Offer.CreateBuilder();
              if (result.hasOffer) {
                subBuilder.MergeFrom(Offer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Offer = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasAuctionDuration = input.ReadUInt64(ref result.auctionDuration_);
              break;
            }
            case 24: {
              result.hasAuctionStartDelay = input.ReadUInt64(ref result.auctionStartDelay_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.BillingAddress.Builder subBuilder = global::bnet.protocol.exchange.BillingAddress.CreateBuilder();
              if (result.hasBillingAddress) {
                subBuilder.MergeFrom(BillingAddress);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BillingAddress = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffer {
       get { return result.hasOffer; }
      }
      public global::bnet.protocol.exchange.Offer Offer {
        get { return result.Offer; }
        set { SetOffer(value); }
      }
      public Builder SetOffer(global::bnet.protocol.exchange.Offer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOffer = true;
        result.offer_ = value;
        return this;
      }
      public Builder SetOffer(global::bnet.protocol.exchange.Offer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOffer = true;
        result.offer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOffer(global::bnet.protocol.exchange.Offer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasOffer &&
            result.offer_ != global::bnet.protocol.exchange.Offer.DefaultInstance) {
            result.offer_ = global::bnet.protocol.exchange.Offer.CreateBuilder(result.offer_).MergeFrom(value).BuildPartial();
        } else {
          result.offer_ = value;
        }
        result.hasOffer = true;
        return this;
      }
      public Builder ClearOffer() {
        result.hasOffer = false;
        result.offer_ = global::bnet.protocol.exchange.Offer.DefaultInstance;
        return this;
      }
      
      public bool HasAuctionDuration {
        get { return result.hasAuctionDuration; }
      }
      public ulong AuctionDuration {
        get { return result.AuctionDuration; }
        set { SetAuctionDuration(value); }
      }
      public Builder SetAuctionDuration(ulong value) {
        result.hasAuctionDuration = true;
        result.auctionDuration_ = value;
        return this;
      }
      public Builder ClearAuctionDuration() {
        result.hasAuctionDuration = false;
        result.auctionDuration_ = 0UL;
        return this;
      }
      
      public bool HasAuctionStartDelay {
        get { return result.hasAuctionStartDelay; }
      }
      public ulong AuctionStartDelay {
        get { return result.AuctionStartDelay; }
        set { SetAuctionStartDelay(value); }
      }
      public Builder SetAuctionStartDelay(ulong value) {
        result.hasAuctionStartDelay = true;
        result.auctionStartDelay_ = value;
        return this;
      }
      public Builder ClearAuctionStartDelay() {
        result.hasAuctionStartDelay = false;
        result.auctionStartDelay_ = 0UL;
        return this;
      }
      
      public bool HasBillingAddress {
       get { return result.hasBillingAddress; }
      }
      public global::bnet.protocol.exchange.BillingAddress BillingAddress {
        get { return result.BillingAddress; }
        set { SetBillingAddress(value); }
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBillingAddress = true;
        result.billingAddress_ = value;
        return this;
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBillingAddress = true;
        result.billingAddress_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBillingAddress &&
            result.billingAddress_ != global::bnet.protocol.exchange.BillingAddress.DefaultInstance) {
            result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.CreateBuilder(result.billingAddress_).MergeFrom(value).BuildPartial();
        } else {
          result.billingAddress_ = value;
        }
        result.hasBillingAddress = true;
        return this;
      }
      public Builder ClearBillingAddress() {
        result.hasBillingAddress = false;
        result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.DefaultInstance;
        return this;
      }
    }
    static OfferCreation() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class Bid : pb::GeneratedMessage<Bid, Bid.Builder> {
    private static readonly Bid defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _bidFieldNames = new string[] { "current_unit_price", "max_unit_price", "order" };
    private static readonly uint[] _bidFieldTags = new uint[] { 16, 24, 10 };
    public static Bid DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Bid DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Bid ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Bid__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Bid, Bid.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Bid__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::bnet.protocol.exchange.Order order_ = global::bnet.protocol.exchange.Order.DefaultInstance;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::bnet.protocol.exchange.Order Order {
      get { return order_; }
    }
    
    public const int CurrentUnitPriceFieldNumber = 2;
    private bool hasCurrentUnitPrice;
    private ulong currentUnitPrice_;
    public bool HasCurrentUnitPrice {
      get { return hasCurrentUnitPrice; }
    }
    public ulong CurrentUnitPrice {
      get { return currentUnitPrice_; }
    }
    
    public const int MaxUnitPriceFieldNumber = 3;
    private bool hasMaxUnitPrice;
    private ulong maxUnitPrice_;
    public bool HasMaxUnitPrice {
      get { return hasMaxUnitPrice; }
    }
    public ulong MaxUnitPrice {
      get { return maxUnitPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrder) return false;
        if (!Order.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bidFieldNames;
      if (hasOrder) {
        output.WriteMessage(1, field_names[2], Order);
      }
      if (hasCurrentUnitPrice) {
        output.WriteUInt64(2, field_names[0], CurrentUnitPrice);
      }
      if (hasMaxUnitPrice) {
        output.WriteUInt64(3, field_names[1], MaxUnitPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrder) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Order);
        }
        if (hasCurrentUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, CurrentUnitPrice);
        }
        if (hasMaxUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, MaxUnitPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Bid ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Bid ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Bid ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Bid ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Bid ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Bid ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Bid ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Bid ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Bid ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Bid ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Bid prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<Bid, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Bid result = new Bid();
      
      protected override Bid MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Bid();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Bid.Descriptor; }
      }
      
      public override Bid DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Bid.DefaultInstance; }
      }
      
      public override Bid BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Bid returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Bid) {
          return MergeFrom((Bid) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Bid other) {
        if (other == global::bnet.protocol.exchange.Bid.DefaultInstance) return this;
        if (other.HasOrder) {
          MergeOrder(other.Order);
        }
        if (other.HasCurrentUnitPrice) {
          CurrentUnitPrice = other.CurrentUnitPrice;
        }
        if (other.HasMaxUnitPrice) {
          MaxUnitPrice = other.MaxUnitPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bidFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bidFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Order.Builder subBuilder = global::bnet.protocol.exchange.Order.CreateBuilder();
              if (result.hasOrder) {
                subBuilder.MergeFrom(Order);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Order = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasCurrentUnitPrice = input.ReadUInt64(ref result.currentUnitPrice_);
              break;
            }
            case 24: {
              result.hasMaxUnitPrice = input.ReadUInt64(ref result.maxUnitPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::bnet.protocol.exchange.Order Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::bnet.protocol.exchange.Order value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder SetOrder(global::bnet.protocol.exchange.Order.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOrder = true;
        result.order_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrder(global::bnet.protocol.exchange.Order value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasOrder &&
            result.order_ != global::bnet.protocol.exchange.Order.DefaultInstance) {
            result.order_ = global::bnet.protocol.exchange.Order.CreateBuilder(result.order_).MergeFrom(value).BuildPartial();
        } else {
          result.order_ = value;
        }
        result.hasOrder = true;
        return this;
      }
      public Builder ClearOrder() {
        result.hasOrder = false;
        result.order_ = global::bnet.protocol.exchange.Order.DefaultInstance;
        return this;
      }
      
      public bool HasCurrentUnitPrice {
        get { return result.hasCurrentUnitPrice; }
      }
      public ulong CurrentUnitPrice {
        get { return result.CurrentUnitPrice; }
        set { SetCurrentUnitPrice(value); }
      }
      public Builder SetCurrentUnitPrice(ulong value) {
        result.hasCurrentUnitPrice = true;
        result.currentUnitPrice_ = value;
        return this;
      }
      public Builder ClearCurrentUnitPrice() {
        result.hasCurrentUnitPrice = false;
        result.currentUnitPrice_ = 0UL;
        return this;
      }
      
      public bool HasMaxUnitPrice {
        get { return result.hasMaxUnitPrice; }
      }
      public ulong MaxUnitPrice {
        get { return result.MaxUnitPrice; }
        set { SetMaxUnitPrice(value); }
      }
      public Builder SetMaxUnitPrice(ulong value) {
        result.hasMaxUnitPrice = true;
        result.maxUnitPrice_ = value;
        return this;
      }
      public Builder ClearMaxUnitPrice() {
        result.hasMaxUnitPrice = false;
        result.maxUnitPrice_ = 0UL;
        return this;
      }
    }
    static Bid() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class BidExtended : pb::GeneratedMessage<BidExtended, BidExtended.Builder> {
    private static readonly BidExtended defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _bidExtendedFieldNames = new string[] { "bid", "extension", "offer_current_winning_price", "offer_out_bid_price", "offer_trade_now_price" };
    private static readonly uint[] _bidExtendedFieldTags = new uint[] { 10, 18, 40, 24, 32 };
    public static BidExtended DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BidExtended DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override BidExtended ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BidExtended__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BidExtended, BidExtended.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BidExtended__FieldAccessorTable; }
    }
    
    public const int BidFieldNumber = 1;
    private bool hasBid;
    private global::bnet.protocol.exchange.Bid bid_ = global::bnet.protocol.exchange.Bid.DefaultInstance;
    public bool HasBid {
      get { return hasBid; }
    }
    public global::bnet.protocol.exchange.Bid Bid {
      get { return bid_; }
    }
    
    public const int ExtensionFieldNumber = 2;
    private bool hasExtension;
    private global::bnet.protocol.exchange.Extension extension_ = global::bnet.protocol.exchange.Extension.DefaultInstance;
    public bool HasExtension {
      get { return hasExtension; }
    }
    public global::bnet.protocol.exchange.Extension Extension {
      get { return extension_; }
    }
    
    public const int OfferOutBidPriceFieldNumber = 3;
    private bool hasOfferOutBidPrice;
    private ulong offerOutBidPrice_;
    public bool HasOfferOutBidPrice {
      get { return hasOfferOutBidPrice; }
    }
    public ulong OfferOutBidPrice {
      get { return offerOutBidPrice_; }
    }
    
    public const int OfferTradeNowPriceFieldNumber = 4;
    private bool hasOfferTradeNowPrice;
    private ulong offerTradeNowPrice_;
    public bool HasOfferTradeNowPrice {
      get { return hasOfferTradeNowPrice; }
    }
    public ulong OfferTradeNowPrice {
      get { return offerTradeNowPrice_; }
    }
    
    public const int OfferCurrentWinningPriceFieldNumber = 5;
    private bool hasOfferCurrentWinningPrice;
    private ulong offerCurrentWinningPrice_;
    public bool HasOfferCurrentWinningPrice {
      get { return hasOfferCurrentWinningPrice; }
    }
    public ulong OfferCurrentWinningPrice {
      get { return offerCurrentWinningPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBid) return false;
        if (!hasExtension) return false;
        if (!Bid.IsInitialized) return false;
        if (!Extension.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bidExtendedFieldNames;
      if (hasBid) {
        output.WriteMessage(1, field_names[0], Bid);
      }
      if (hasExtension) {
        output.WriteMessage(2, field_names[1], Extension);
      }
      if (hasOfferOutBidPrice) {
        output.WriteUInt64(3, field_names[3], OfferOutBidPrice);
      }
      if (hasOfferTradeNowPrice) {
        output.WriteUInt64(4, field_names[4], OfferTradeNowPrice);
      }
      if (hasOfferCurrentWinningPrice) {
        output.WriteUInt64(5, field_names[2], OfferCurrentWinningPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBid) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Bid);
        }
        if (hasExtension) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Extension);
        }
        if (hasOfferOutBidPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, OfferOutBidPrice);
        }
        if (hasOfferTradeNowPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, OfferTradeNowPrice);
        }
        if (hasOfferCurrentWinningPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, OfferCurrentWinningPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BidExtended ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidExtended ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidExtended ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidExtended ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidExtended ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidExtended ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BidExtended ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BidExtended ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BidExtended ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidExtended ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BidExtended prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<BidExtended, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      BidExtended result = new BidExtended();
      
      protected override BidExtended MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new BidExtended();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.BidExtended.Descriptor; }
      }
      
      public override BidExtended DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.BidExtended.DefaultInstance; }
      }
      
      public override BidExtended BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        BidExtended returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BidExtended) {
          return MergeFrom((BidExtended) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BidExtended other) {
        if (other == global::bnet.protocol.exchange.BidExtended.DefaultInstance) return this;
        if (other.HasBid) {
          MergeBid(other.Bid);
        }
        if (other.HasExtension) {
          MergeExtension(other.Extension);
        }
        if (other.HasOfferOutBidPrice) {
          OfferOutBidPrice = other.OfferOutBidPrice;
        }
        if (other.HasOfferTradeNowPrice) {
          OfferTradeNowPrice = other.OfferTradeNowPrice;
        }
        if (other.HasOfferCurrentWinningPrice) {
          OfferCurrentWinningPrice = other.OfferCurrentWinningPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bidExtendedFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bidExtendedFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Bid.Builder subBuilder = global::bnet.protocol.exchange.Bid.CreateBuilder();
              if (result.hasBid) {
                subBuilder.MergeFrom(Bid);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Bid = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.Extension.Builder subBuilder = global::bnet.protocol.exchange.Extension.CreateBuilder();
              if (result.hasExtension) {
                subBuilder.MergeFrom(Extension);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Extension = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasOfferOutBidPrice = input.ReadUInt64(ref result.offerOutBidPrice_);
              break;
            }
            case 32: {
              result.hasOfferTradeNowPrice = input.ReadUInt64(ref result.offerTradeNowPrice_);
              break;
            }
            case 40: {
              result.hasOfferCurrentWinningPrice = input.ReadUInt64(ref result.offerCurrentWinningPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBid {
       get { return result.hasBid; }
      }
      public global::bnet.protocol.exchange.Bid Bid {
        get { return result.Bid; }
        set { SetBid(value); }
      }
      public Builder SetBid(global::bnet.protocol.exchange.Bid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBid = true;
        result.bid_ = value;
        return this;
      }
      public Builder SetBid(global::bnet.protocol.exchange.Bid.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBid = true;
        result.bid_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBid(global::bnet.protocol.exchange.Bid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBid &&
            result.bid_ != global::bnet.protocol.exchange.Bid.DefaultInstance) {
            result.bid_ = global::bnet.protocol.exchange.Bid.CreateBuilder(result.bid_).MergeFrom(value).BuildPartial();
        } else {
          result.bid_ = value;
        }
        result.hasBid = true;
        return this;
      }
      public Builder ClearBid() {
        result.hasBid = false;
        result.bid_ = global::bnet.protocol.exchange.Bid.DefaultInstance;
        return this;
      }
      
      public bool HasExtension {
       get { return result.hasExtension; }
      }
      public global::bnet.protocol.exchange.Extension Extension {
        get { return result.Extension; }
        set { SetExtension(value); }
      }
      public Builder SetExtension(global::bnet.protocol.exchange.Extension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasExtension = true;
        result.extension_ = value;
        return this;
      }
      public Builder SetExtension(global::bnet.protocol.exchange.Extension.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasExtension = true;
        result.extension_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExtension(global::bnet.protocol.exchange.Extension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasExtension &&
            result.extension_ != global::bnet.protocol.exchange.Extension.DefaultInstance) {
            result.extension_ = global::bnet.protocol.exchange.Extension.CreateBuilder(result.extension_).MergeFrom(value).BuildPartial();
        } else {
          result.extension_ = value;
        }
        result.hasExtension = true;
        return this;
      }
      public Builder ClearExtension() {
        result.hasExtension = false;
        result.extension_ = global::bnet.protocol.exchange.Extension.DefaultInstance;
        return this;
      }
      
      public bool HasOfferOutBidPrice {
        get { return result.hasOfferOutBidPrice; }
      }
      public ulong OfferOutBidPrice {
        get { return result.OfferOutBidPrice; }
        set { SetOfferOutBidPrice(value); }
      }
      public Builder SetOfferOutBidPrice(ulong value) {
        result.hasOfferOutBidPrice = true;
        result.offerOutBidPrice_ = value;
        return this;
      }
      public Builder ClearOfferOutBidPrice() {
        result.hasOfferOutBidPrice = false;
        result.offerOutBidPrice_ = 0UL;
        return this;
      }
      
      public bool HasOfferTradeNowPrice {
        get { return result.hasOfferTradeNowPrice; }
      }
      public ulong OfferTradeNowPrice {
        get { return result.OfferTradeNowPrice; }
        set { SetOfferTradeNowPrice(value); }
      }
      public Builder SetOfferTradeNowPrice(ulong value) {
        result.hasOfferTradeNowPrice = true;
        result.offerTradeNowPrice_ = value;
        return this;
      }
      public Builder ClearOfferTradeNowPrice() {
        result.hasOfferTradeNowPrice = false;
        result.offerTradeNowPrice_ = 0UL;
        return this;
      }
      
      public bool HasOfferCurrentWinningPrice {
        get { return result.hasOfferCurrentWinningPrice; }
      }
      public ulong OfferCurrentWinningPrice {
        get { return result.OfferCurrentWinningPrice; }
        set { SetOfferCurrentWinningPrice(value); }
      }
      public Builder SetOfferCurrentWinningPrice(ulong value) {
        result.hasOfferCurrentWinningPrice = true;
        result.offerCurrentWinningPrice_ = value;
        return this;
      }
      public Builder ClearOfferCurrentWinningPrice() {
        result.hasOfferCurrentWinningPrice = false;
        result.offerCurrentWinningPrice_ = 0UL;
        return this;
      }
    }
    static BidExtended() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class BidCreation : pb::GeneratedMessage<BidCreation, BidCreation.Builder> {
    private static readonly BidCreation defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _bidCreationFieldNames = new string[] { "auction_duration", "auction_start_delay", "bid", "billing_address" };
    private static readonly uint[] _bidCreationFieldTags = new uint[] { 16, 24, 10, 34 };
    public static BidCreation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BidCreation DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override BidCreation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BidCreation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BidCreation, BidCreation.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BidCreation__FieldAccessorTable; }
    }
    
    public const int BidFieldNumber = 1;
    private bool hasBid;
    private global::bnet.protocol.exchange.Bid bid_ = global::bnet.protocol.exchange.Bid.DefaultInstance;
    public bool HasBid {
      get { return hasBid; }
    }
    public global::bnet.protocol.exchange.Bid Bid {
      get { return bid_; }
    }
    
    public const int AuctionDurationFieldNumber = 2;
    private bool hasAuctionDuration;
    private ulong auctionDuration_;
    public bool HasAuctionDuration {
      get { return hasAuctionDuration; }
    }
    public ulong AuctionDuration {
      get { return auctionDuration_; }
    }
    
    public const int AuctionStartDelayFieldNumber = 3;
    private bool hasAuctionStartDelay;
    private ulong auctionStartDelay_;
    public bool HasAuctionStartDelay {
      get { return hasAuctionStartDelay; }
    }
    public ulong AuctionStartDelay {
      get { return auctionStartDelay_; }
    }
    
    public const int BillingAddressFieldNumber = 4;
    private bool hasBillingAddress;
    private global::bnet.protocol.exchange.BillingAddress billingAddress_ = global::bnet.protocol.exchange.BillingAddress.DefaultInstance;
    public bool HasBillingAddress {
      get { return hasBillingAddress; }
    }
    public global::bnet.protocol.exchange.BillingAddress BillingAddress {
      get { return billingAddress_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBid) return false;
        if (!Bid.IsInitialized) return false;
        if (HasBillingAddress) {
          if (!BillingAddress.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bidCreationFieldNames;
      if (hasBid) {
        output.WriteMessage(1, field_names[2], Bid);
      }
      if (hasAuctionDuration) {
        output.WriteUInt64(2, field_names[0], AuctionDuration);
      }
      if (hasAuctionStartDelay) {
        output.WriteUInt64(3, field_names[1], AuctionStartDelay);
      }
      if (hasBillingAddress) {
        output.WriteMessage(4, field_names[3], BillingAddress);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBid) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Bid);
        }
        if (hasAuctionDuration) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, AuctionDuration);
        }
        if (hasAuctionStartDelay) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, AuctionStartDelay);
        }
        if (hasBillingAddress) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BillingAddress);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BidCreation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidCreation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidCreation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidCreation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidCreation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidCreation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BidCreation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BidCreation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BidCreation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidCreation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BidCreation prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<BidCreation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      BidCreation result = new BidCreation();
      
      protected override BidCreation MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new BidCreation();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.BidCreation.Descriptor; }
      }
      
      public override BidCreation DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.BidCreation.DefaultInstance; }
      }
      
      public override BidCreation BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        BidCreation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BidCreation) {
          return MergeFrom((BidCreation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BidCreation other) {
        if (other == global::bnet.protocol.exchange.BidCreation.DefaultInstance) return this;
        if (other.HasBid) {
          MergeBid(other.Bid);
        }
        if (other.HasAuctionDuration) {
          AuctionDuration = other.AuctionDuration;
        }
        if (other.HasAuctionStartDelay) {
          AuctionStartDelay = other.AuctionStartDelay;
        }
        if (other.HasBillingAddress) {
          MergeBillingAddress(other.BillingAddress);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bidCreationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bidCreationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Bid.Builder subBuilder = global::bnet.protocol.exchange.Bid.CreateBuilder();
              if (result.hasBid) {
                subBuilder.MergeFrom(Bid);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Bid = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasAuctionDuration = input.ReadUInt64(ref result.auctionDuration_);
              break;
            }
            case 24: {
              result.hasAuctionStartDelay = input.ReadUInt64(ref result.auctionStartDelay_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.BillingAddress.Builder subBuilder = global::bnet.protocol.exchange.BillingAddress.CreateBuilder();
              if (result.hasBillingAddress) {
                subBuilder.MergeFrom(BillingAddress);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BillingAddress = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBid {
       get { return result.hasBid; }
      }
      public global::bnet.protocol.exchange.Bid Bid {
        get { return result.Bid; }
        set { SetBid(value); }
      }
      public Builder SetBid(global::bnet.protocol.exchange.Bid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBid = true;
        result.bid_ = value;
        return this;
      }
      public Builder SetBid(global::bnet.protocol.exchange.Bid.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBid = true;
        result.bid_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBid(global::bnet.protocol.exchange.Bid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBid &&
            result.bid_ != global::bnet.protocol.exchange.Bid.DefaultInstance) {
            result.bid_ = global::bnet.protocol.exchange.Bid.CreateBuilder(result.bid_).MergeFrom(value).BuildPartial();
        } else {
          result.bid_ = value;
        }
        result.hasBid = true;
        return this;
      }
      public Builder ClearBid() {
        result.hasBid = false;
        result.bid_ = global::bnet.protocol.exchange.Bid.DefaultInstance;
        return this;
      }
      
      public bool HasAuctionDuration {
        get { return result.hasAuctionDuration; }
      }
      public ulong AuctionDuration {
        get { return result.AuctionDuration; }
        set { SetAuctionDuration(value); }
      }
      public Builder SetAuctionDuration(ulong value) {
        result.hasAuctionDuration = true;
        result.auctionDuration_ = value;
        return this;
      }
      public Builder ClearAuctionDuration() {
        result.hasAuctionDuration = false;
        result.auctionDuration_ = 0UL;
        return this;
      }
      
      public bool HasAuctionStartDelay {
        get { return result.hasAuctionStartDelay; }
      }
      public ulong AuctionStartDelay {
        get { return result.AuctionStartDelay; }
        set { SetAuctionStartDelay(value); }
      }
      public Builder SetAuctionStartDelay(ulong value) {
        result.hasAuctionStartDelay = true;
        result.auctionStartDelay_ = value;
        return this;
      }
      public Builder ClearAuctionStartDelay() {
        result.hasAuctionStartDelay = false;
        result.auctionStartDelay_ = 0UL;
        return this;
      }
      
      public bool HasBillingAddress {
       get { return result.hasBillingAddress; }
      }
      public global::bnet.protocol.exchange.BillingAddress BillingAddress {
        get { return result.BillingAddress; }
        set { SetBillingAddress(value); }
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBillingAddress = true;
        result.billingAddress_ = value;
        return this;
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBillingAddress = true;
        result.billingAddress_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBillingAddress &&
            result.billingAddress_ != global::bnet.protocol.exchange.BillingAddress.DefaultInstance) {
            result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.CreateBuilder(result.billingAddress_).MergeFrom(value).BuildPartial();
        } else {
          result.billingAddress_ = value;
        }
        result.hasBillingAddress = true;
        return this;
      }
      public Builder ClearBillingAddress() {
        result.hasBillingAddress = false;
        result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.DefaultInstance;
        return this;
      }
    }
    static BidCreation() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class QueryFilterByOrderId : pb::GeneratedMessage<QueryFilterByOrderId, QueryFilterByOrderId.Builder> {
    private static readonly QueryFilterByOrderId defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _queryFilterByOrderIdFieldNames = new string[] { "max_result", "ref_order_id" };
    private static readonly uint[] _queryFilterByOrderIdFieldTags = new uint[] { 8, 16 };
    public static QueryFilterByOrderId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryFilterByOrderId DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryFilterByOrderId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryFilterByOrderId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryFilterByOrderId, QueryFilterByOrderId.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryFilterByOrderId__FieldAccessorTable; }
    }
    
    public const int MaxResultFieldNumber = 1;
    private bool hasMaxResult;
    private uint maxResult_;
    public bool HasMaxResult {
      get { return hasMaxResult; }
    }
    public uint MaxResult {
      get { return maxResult_; }
    }
    
    public const int RefOrderIdFieldNumber = 2;
    private bool hasRefOrderId;
    private ulong refOrderId_;
    public bool HasRefOrderId {
      get { return hasRefOrderId; }
    }
    public ulong RefOrderId {
      get { return refOrderId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMaxResult) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryFilterByOrderIdFieldNames;
      if (hasMaxResult) {
        output.WriteUInt32(1, field_names[0], MaxResult);
      }
      if (hasRefOrderId) {
        output.WriteUInt64(2, field_names[1], RefOrderId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMaxResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, MaxResult);
        }
        if (hasRefOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RefOrderId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryFilterByOrderId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryFilterByOrderId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryFilterByOrderId prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryFilterByOrderId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryFilterByOrderId result = new QueryFilterByOrderId();
      
      protected override QueryFilterByOrderId MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryFilterByOrderId();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryFilterByOrderId.Descriptor; }
      }
      
      public override QueryFilterByOrderId DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance; }
      }
      
      public override QueryFilterByOrderId BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        QueryFilterByOrderId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryFilterByOrderId) {
          return MergeFrom((QueryFilterByOrderId) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryFilterByOrderId other) {
        if (other == global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance) return this;
        if (other.HasMaxResult) {
          MaxResult = other.MaxResult;
        }
        if (other.HasRefOrderId) {
          RefOrderId = other.RefOrderId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryFilterByOrderIdFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryFilterByOrderIdFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMaxResult = input.ReadUInt32(ref result.maxResult_);
              break;
            }
            case 16: {
              result.hasRefOrderId = input.ReadUInt64(ref result.refOrderId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMaxResult {
        get { return result.hasMaxResult; }
      }
      public uint MaxResult {
        get { return result.MaxResult; }
        set { SetMaxResult(value); }
      }
      public Builder SetMaxResult(uint value) {
        result.hasMaxResult = true;
        result.maxResult_ = value;
        return this;
      }
      public Builder ClearMaxResult() {
        result.hasMaxResult = false;
        result.maxResult_ = 0;
        return this;
      }
      
      public bool HasRefOrderId {
        get { return result.hasRefOrderId; }
      }
      public ulong RefOrderId {
        get { return result.RefOrderId; }
        set { SetRefOrderId(value); }
      }
      public Builder SetRefOrderId(ulong value) {
        result.hasRefOrderId = true;
        result.refOrderId_ = value;
        return this;
      }
      public Builder ClearRefOrderId() {
        result.hasRefOrderId = false;
        result.refOrderId_ = 0UL;
        return this;
      }
    }
    static QueryFilterByOrderId() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class QueryFilterByCreatedTime : pb::GeneratedMessage<QueryFilterByCreatedTime, QueryFilterByCreatedTime.Builder> {
    private static readonly QueryFilterByCreatedTime defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _queryFilterByCreatedTimeFieldNames = new string[] { "max_result", "ref_created_time" };
    private static readonly uint[] _queryFilterByCreatedTimeFieldTags = new uint[] { 8, 16 };
    public static QueryFilterByCreatedTime DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryFilterByCreatedTime DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryFilterByCreatedTime ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryFilterByCreatedTime, QueryFilterByCreatedTime.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__FieldAccessorTable; }
    }
    
    public const int MaxResultFieldNumber = 1;
    private bool hasMaxResult;
    private uint maxResult_;
    public bool HasMaxResult {
      get { return hasMaxResult; }
    }
    public uint MaxResult {
      get { return maxResult_; }
    }
    
    public const int RefCreatedTimeFieldNumber = 2;
    private bool hasRefCreatedTime;
    private ulong refCreatedTime_;
    public bool HasRefCreatedTime {
      get { return hasRefCreatedTime; }
    }
    public ulong RefCreatedTime {
      get { return refCreatedTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMaxResult) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryFilterByCreatedTimeFieldNames;
      if (hasMaxResult) {
        output.WriteUInt32(1, field_names[0], MaxResult);
      }
      if (hasRefCreatedTime) {
        output.WriteUInt64(2, field_names[1], RefCreatedTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMaxResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, MaxResult);
        }
        if (hasRefCreatedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RefCreatedTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryFilterByCreatedTime ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryFilterByCreatedTime prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryFilterByCreatedTime, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryFilterByCreatedTime result = new QueryFilterByCreatedTime();
      
      protected override QueryFilterByCreatedTime MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryFilterByCreatedTime();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryFilterByCreatedTime.Descriptor; }
      }
      
      public override QueryFilterByCreatedTime DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance; }
      }
      
      public override QueryFilterByCreatedTime BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        QueryFilterByCreatedTime returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryFilterByCreatedTime) {
          return MergeFrom((QueryFilterByCreatedTime) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryFilterByCreatedTime other) {
        if (other == global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance) return this;
        if (other.HasMaxResult) {
          MaxResult = other.MaxResult;
        }
        if (other.HasRefCreatedTime) {
          RefCreatedTime = other.RefCreatedTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryFilterByCreatedTimeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryFilterByCreatedTimeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMaxResult = input.ReadUInt32(ref result.maxResult_);
              break;
            }
            case 16: {
              result.hasRefCreatedTime = input.ReadUInt64(ref result.refCreatedTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMaxResult {
        get { return result.hasMaxResult; }
      }
      public uint MaxResult {
        get { return result.MaxResult; }
        set { SetMaxResult(value); }
      }
      public Builder SetMaxResult(uint value) {
        result.hasMaxResult = true;
        result.maxResult_ = value;
        return this;
      }
      public Builder ClearMaxResult() {
        result.hasMaxResult = false;
        result.maxResult_ = 0;
        return this;
      }
      
      public bool HasRefCreatedTime {
        get { return result.hasRefCreatedTime; }
      }
      public ulong RefCreatedTime {
        get { return result.RefCreatedTime; }
        set { SetRefCreatedTime(value); }
      }
      public Builder SetRefCreatedTime(ulong value) {
        result.hasRefCreatedTime = true;
        result.refCreatedTime_ = value;
        return this;
      }
      public Builder ClearRefCreatedTime() {
        result.hasRefCreatedTime = false;
        result.refCreatedTime_ = 0UL;
        return this;
      }
    }
    static QueryFilterByCreatedTime() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class Settlement : pb::GeneratedMessage<Settlement, Settlement.Builder> {
    private static readonly Settlement defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _settlementFieldNames = new string[] { "items_amount", "money_amount", "offer_settle_id", "order_book_id" };
    private static readonly uint[] _settlementFieldTags = new uint[] { 24, 16, 32, 8 };
    public static Settlement DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Settlement DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Settlement ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Settlement__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Settlement, Settlement.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Settlement__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int MoneyAmountFieldNumber = 2;
    private bool hasMoneyAmount;
    private ulong moneyAmount_;
    public bool HasMoneyAmount {
      get { return hasMoneyAmount; }
    }
    public ulong MoneyAmount {
      get { return moneyAmount_; }
    }
    
    public const int ItemsAmountFieldNumber = 3;
    private bool hasItemsAmount;
    private ulong itemsAmount_;
    public bool HasItemsAmount {
      get { return hasItemsAmount; }
    }
    public ulong ItemsAmount {
      get { return itemsAmount_; }
    }
    
    public const int OfferSettleIdFieldNumber = 4;
    private bool hasOfferSettleId;
    private ulong offerSettleId_;
    public bool HasOfferSettleId {
      get { return hasOfferSettleId; }
    }
    public ulong OfferSettleId {
      get { return offerSettleId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderBookId) return false;
        if (!hasMoneyAmount) return false;
        if (!hasItemsAmount) return false;
        if (!hasOfferSettleId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _settlementFieldNames;
      if (hasOrderBookId) {
        output.WriteUInt64(1, field_names[3], OrderBookId);
      }
      if (hasMoneyAmount) {
        output.WriteUInt64(2, field_names[1], MoneyAmount);
      }
      if (hasItemsAmount) {
        output.WriteUInt64(3, field_names[0], ItemsAmount);
      }
      if (hasOfferSettleId) {
        output.WriteUInt64(4, field_names[2], OfferSettleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (hasMoneyAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, MoneyAmount);
        }
        if (hasItemsAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ItemsAmount);
        }
        if (hasOfferSettleId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, OfferSettleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Settlement ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Settlement ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Settlement ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Settlement ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Settlement ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Settlement ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Settlement ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Settlement ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Settlement ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Settlement ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Settlement prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<Settlement, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Settlement result = new Settlement();
      
      protected override Settlement MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Settlement();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Settlement.Descriptor; }
      }
      
      public override Settlement DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Settlement.DefaultInstance; }
      }
      
      public override Settlement BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Settlement returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Settlement) {
          return MergeFrom((Settlement) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Settlement other) {
        if (other == global::bnet.protocol.exchange.Settlement.DefaultInstance) return this;
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasMoneyAmount) {
          MoneyAmount = other.MoneyAmount;
        }
        if (other.HasItemsAmount) {
          ItemsAmount = other.ItemsAmount;
        }
        if (other.HasOfferSettleId) {
          OfferSettleId = other.OfferSettleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_settlementFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _settlementFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 16: {
              result.hasMoneyAmount = input.ReadUInt64(ref result.moneyAmount_);
              break;
            }
            case 24: {
              result.hasItemsAmount = input.ReadUInt64(ref result.itemsAmount_);
              break;
            }
            case 32: {
              result.hasOfferSettleId = input.ReadUInt64(ref result.offerSettleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasMoneyAmount {
        get { return result.hasMoneyAmount; }
      }
      public ulong MoneyAmount {
        get { return result.MoneyAmount; }
        set { SetMoneyAmount(value); }
      }
      public Builder SetMoneyAmount(ulong value) {
        result.hasMoneyAmount = true;
        result.moneyAmount_ = value;
        return this;
      }
      public Builder ClearMoneyAmount() {
        result.hasMoneyAmount = false;
        result.moneyAmount_ = 0UL;
        return this;
      }
      
      public bool HasItemsAmount {
        get { return result.hasItemsAmount; }
      }
      public ulong ItemsAmount {
        get { return result.ItemsAmount; }
        set { SetItemsAmount(value); }
      }
      public Builder SetItemsAmount(ulong value) {
        result.hasItemsAmount = true;
        result.itemsAmount_ = value;
        return this;
      }
      public Builder ClearItemsAmount() {
        result.hasItemsAmount = false;
        result.itemsAmount_ = 0UL;
        return this;
      }
      
      public bool HasOfferSettleId {
        get { return result.hasOfferSettleId; }
      }
      public ulong OfferSettleId {
        get { return result.OfferSettleId; }
        set { SetOfferSettleId(value); }
      }
      public Builder SetOfferSettleId(ulong value) {
        result.hasOfferSettleId = true;
        result.offerSettleId_ = value;
        return this;
      }
      public Builder ClearOfferSettleId() {
        result.hasOfferSettleId = false;
        result.offerSettleId_ = 0UL;
        return this;
      }
    }
    static Settlement() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class CurrencyConfig : pb::GeneratedMessage<CurrencyConfig, CurrencyConfig.Builder> {
    private static readonly CurrencyConfig defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _currencyConfigFieldNames = new string[] { "buyout_rule", "currency", "flat_outbid_incr", "max_starting_unit_price", "max_total_amount", "max_unit_price", "min_starting_unit_price", "scale_outbid_incr", "tick_size" };
    private static readonly uint[] _currencyConfigFieldTags = new uint[] { 72, 10, 24, 48, 64, 56, 40, 32, 16 };
    public static CurrencyConfig DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CurrencyConfig DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CurrencyConfig ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_CurrencyConfig__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CurrencyConfig, CurrencyConfig.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_CurrencyConfig__FieldAccessorTable; }
    }
    
    public const int CurrencyFieldNumber = 1;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int TickSizeFieldNumber = 2;
    private bool hasTickSize;
    private ulong tickSize_;
    public bool HasTickSize {
      get { return hasTickSize; }
    }
    public ulong TickSize {
      get { return tickSize_; }
    }
    
    public const int FlatOutbidIncrFieldNumber = 3;
    private bool hasFlatOutbidIncr;
    private ulong flatOutbidIncr_;
    public bool HasFlatOutbidIncr {
      get { return hasFlatOutbidIncr; }
    }
    public ulong FlatOutbidIncr {
      get { return flatOutbidIncr_; }
    }
    
    public const int ScaleOutbidIncrFieldNumber = 4;
    private bool hasScaleOutbidIncr;
    private ulong scaleOutbidIncr_;
    public bool HasScaleOutbidIncr {
      get { return hasScaleOutbidIncr; }
    }
    public ulong ScaleOutbidIncr {
      get { return scaleOutbidIncr_; }
    }
    
    public const int MinStartingUnitPriceFieldNumber = 5;
    private bool hasMinStartingUnitPrice;
    private ulong minStartingUnitPrice_;
    public bool HasMinStartingUnitPrice {
      get { return hasMinStartingUnitPrice; }
    }
    public ulong MinStartingUnitPrice {
      get { return minStartingUnitPrice_; }
    }
    
    public const int MaxStartingUnitPriceFieldNumber = 6;
    private bool hasMaxStartingUnitPrice;
    private ulong maxStartingUnitPrice_;
    public bool HasMaxStartingUnitPrice {
      get { return hasMaxStartingUnitPrice; }
    }
    public ulong MaxStartingUnitPrice {
      get { return maxStartingUnitPrice_; }
    }
    
    public const int MaxUnitPriceFieldNumber = 7;
    private bool hasMaxUnitPrice;
    private ulong maxUnitPrice_;
    public bool HasMaxUnitPrice {
      get { return hasMaxUnitPrice; }
    }
    public ulong MaxUnitPrice {
      get { return maxUnitPrice_; }
    }
    
    public const int MaxTotalAmountFieldNumber = 8;
    private bool hasMaxTotalAmount;
    private ulong maxTotalAmount_;
    public bool HasMaxTotalAmount {
      get { return hasMaxTotalAmount; }
    }
    public ulong MaxTotalAmount {
      get { return maxTotalAmount_; }
    }
    
    public const int BuyoutRuleFieldNumber = 9;
    private bool hasBuyoutRule;
    private int buyoutRule_;
    public bool HasBuyoutRule {
      get { return hasBuyoutRule; }
    }
    public int BuyoutRule {
      get { return buyoutRule_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCurrency) return false;
        if (!hasTickSize) return false;
        if (!hasFlatOutbidIncr) return false;
        if (!hasScaleOutbidIncr) return false;
        if (!hasMinStartingUnitPrice) return false;
        if (!hasMaxStartingUnitPrice) return false;
        if (!hasMaxUnitPrice) return false;
        if (!hasMaxTotalAmount) return false;
        if (!hasBuyoutRule) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _currencyConfigFieldNames;
      if (hasCurrency) {
        output.WriteString(1, field_names[1], Currency);
      }
      if (hasTickSize) {
        output.WriteUInt64(2, field_names[8], TickSize);
      }
      if (hasFlatOutbidIncr) {
        output.WriteUInt64(3, field_names[2], FlatOutbidIncr);
      }
      if (hasScaleOutbidIncr) {
        output.WriteUInt64(4, field_names[7], ScaleOutbidIncr);
      }
      if (hasMinStartingUnitPrice) {
        output.WriteUInt64(5, field_names[6], MinStartingUnitPrice);
      }
      if (hasMaxStartingUnitPrice) {
        output.WriteUInt64(6, field_names[3], MaxStartingUnitPrice);
      }
      if (hasMaxUnitPrice) {
        output.WriteUInt64(7, field_names[5], MaxUnitPrice);
      }
      if (hasMaxTotalAmount) {
        output.WriteUInt64(8, field_names[4], MaxTotalAmount);
      }
      if (hasBuyoutRule) {
        output.WriteInt32(9, field_names[0], BuyoutRule);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Currency);
        }
        if (hasTickSize) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, TickSize);
        }
        if (hasFlatOutbidIncr) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, FlatOutbidIncr);
        }
        if (hasScaleOutbidIncr) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ScaleOutbidIncr);
        }
        if (hasMinStartingUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, MinStartingUnitPrice);
        }
        if (hasMaxStartingUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, MaxStartingUnitPrice);
        }
        if (hasMaxUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, MaxUnitPrice);
        }
        if (hasMaxTotalAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, MaxTotalAmount);
        }
        if (hasBuyoutRule) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, BuyoutRule);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CurrencyConfig ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CurrencyConfig ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CurrencyConfig ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CurrencyConfig prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<CurrencyConfig, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CurrencyConfig result = new CurrencyConfig();
      
      protected override CurrencyConfig MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CurrencyConfig();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CurrencyConfig.Descriptor; }
      }
      
      public override CurrencyConfig DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CurrencyConfig.DefaultInstance; }
      }
      
      public override CurrencyConfig BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CurrencyConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CurrencyConfig) {
          return MergeFrom((CurrencyConfig) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CurrencyConfig other) {
        if (other == global::bnet.protocol.exchange.CurrencyConfig.DefaultInstance) return this;
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasTickSize) {
          TickSize = other.TickSize;
        }
        if (other.HasFlatOutbidIncr) {
          FlatOutbidIncr = other.FlatOutbidIncr;
        }
        if (other.HasScaleOutbidIncr) {
          ScaleOutbidIncr = other.ScaleOutbidIncr;
        }
        if (other.HasMinStartingUnitPrice) {
          MinStartingUnitPrice = other.MinStartingUnitPrice;
        }
        if (other.HasMaxStartingUnitPrice) {
          MaxStartingUnitPrice = other.MaxStartingUnitPrice;
        }
        if (other.HasMaxUnitPrice) {
          MaxUnitPrice = other.MaxUnitPrice;
        }
        if (other.HasMaxTotalAmount) {
          MaxTotalAmount = other.MaxTotalAmount;
        }
        if (other.HasBuyoutRule) {
          BuyoutRule = other.BuyoutRule;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_currencyConfigFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _currencyConfigFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 16: {
              result.hasTickSize = input.ReadUInt64(ref result.tickSize_);
              break;
            }
            case 24: {
              result.hasFlatOutbidIncr = input.ReadUInt64(ref result.flatOutbidIncr_);
              break;
            }
            case 32: {
              result.hasScaleOutbidIncr = input.ReadUInt64(ref result.scaleOutbidIncr_);
              break;
            }
            case 40: {
              result.hasMinStartingUnitPrice = input.ReadUInt64(ref result.minStartingUnitPrice_);
              break;
            }
            case 48: {
              result.hasMaxStartingUnitPrice = input.ReadUInt64(ref result.maxStartingUnitPrice_);
              break;
            }
            case 56: {
              result.hasMaxUnitPrice = input.ReadUInt64(ref result.maxUnitPrice_);
              break;
            }
            case 64: {
              result.hasMaxTotalAmount = input.ReadUInt64(ref result.maxTotalAmount_);
              break;
            }
            case 72: {
              result.hasBuyoutRule = input.ReadInt32(ref result.buyoutRule_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasTickSize {
        get { return result.hasTickSize; }
      }
      public ulong TickSize {
        get { return result.TickSize; }
        set { SetTickSize(value); }
      }
      public Builder SetTickSize(ulong value) {
        result.hasTickSize = true;
        result.tickSize_ = value;
        return this;
      }
      public Builder ClearTickSize() {
        result.hasTickSize = false;
        result.tickSize_ = 0UL;
        return this;
      }
      
      public bool HasFlatOutbidIncr {
        get { return result.hasFlatOutbidIncr; }
      }
      public ulong FlatOutbidIncr {
        get { return result.FlatOutbidIncr; }
        set { SetFlatOutbidIncr(value); }
      }
      public Builder SetFlatOutbidIncr(ulong value) {
        result.hasFlatOutbidIncr = true;
        result.flatOutbidIncr_ = value;
        return this;
      }
      public Builder ClearFlatOutbidIncr() {
        result.hasFlatOutbidIncr = false;
        result.flatOutbidIncr_ = 0UL;
        return this;
      }
      
      public bool HasScaleOutbidIncr {
        get { return result.hasScaleOutbidIncr; }
      }
      public ulong ScaleOutbidIncr {
        get { return result.ScaleOutbidIncr; }
        set { SetScaleOutbidIncr(value); }
      }
      public Builder SetScaleOutbidIncr(ulong value) {
        result.hasScaleOutbidIncr = true;
        result.scaleOutbidIncr_ = value;
        return this;
      }
      public Builder ClearScaleOutbidIncr() {
        result.hasScaleOutbidIncr = false;
        result.scaleOutbidIncr_ = 0UL;
        return this;
      }
      
      public bool HasMinStartingUnitPrice {
        get { return result.hasMinStartingUnitPrice; }
      }
      public ulong MinStartingUnitPrice {
        get { return result.MinStartingUnitPrice; }
        set { SetMinStartingUnitPrice(value); }
      }
      public Builder SetMinStartingUnitPrice(ulong value) {
        result.hasMinStartingUnitPrice = true;
        result.minStartingUnitPrice_ = value;
        return this;
      }
      public Builder ClearMinStartingUnitPrice() {
        result.hasMinStartingUnitPrice = false;
        result.minStartingUnitPrice_ = 0UL;
        return this;
      }
      
      public bool HasMaxStartingUnitPrice {
        get { return result.hasMaxStartingUnitPrice; }
      }
      public ulong MaxStartingUnitPrice {
        get { return result.MaxStartingUnitPrice; }
        set { SetMaxStartingUnitPrice(value); }
      }
      public Builder SetMaxStartingUnitPrice(ulong value) {
        result.hasMaxStartingUnitPrice = true;
        result.maxStartingUnitPrice_ = value;
        return this;
      }
      public Builder ClearMaxStartingUnitPrice() {
        result.hasMaxStartingUnitPrice = false;
        result.maxStartingUnitPrice_ = 0UL;
        return this;
      }
      
      public bool HasMaxUnitPrice {
        get { return result.hasMaxUnitPrice; }
      }
      public ulong MaxUnitPrice {
        get { return result.MaxUnitPrice; }
        set { SetMaxUnitPrice(value); }
      }
      public Builder SetMaxUnitPrice(ulong value) {
        result.hasMaxUnitPrice = true;
        result.maxUnitPrice_ = value;
        return this;
      }
      public Builder ClearMaxUnitPrice() {
        result.hasMaxUnitPrice = false;
        result.maxUnitPrice_ = 0UL;
        return this;
      }
      
      public bool HasMaxTotalAmount {
        get { return result.hasMaxTotalAmount; }
      }
      public ulong MaxTotalAmount {
        get { return result.MaxTotalAmount; }
        set { SetMaxTotalAmount(value); }
      }
      public Builder SetMaxTotalAmount(ulong value) {
        result.hasMaxTotalAmount = true;
        result.maxTotalAmount_ = value;
        return this;
      }
      public Builder ClearMaxTotalAmount() {
        result.hasMaxTotalAmount = false;
        result.maxTotalAmount_ = 0UL;
        return this;
      }
      
      public bool HasBuyoutRule {
        get { return result.hasBuyoutRule; }
      }
      public int BuyoutRule {
        get { return result.BuyoutRule; }
        set { SetBuyoutRule(value); }
      }
      public Builder SetBuyoutRule(int value) {
        result.hasBuyoutRule = true;
        result.buyoutRule_ = value;
        return this;
      }
      public Builder ClearBuyoutRule() {
        result.hasBuyoutRule = false;
        result.buyoutRule_ = 0;
        return this;
      }
    }
    static CurrencyConfig() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class SpecialistConfig : pb::GeneratedMessage<SpecialistConfig, SpecialistConfig.Builder> {
    private static readonly SpecialistConfig defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _specialistConfigFieldNames = new string[] { "anti_sniping_extension_delay", "auction_durations", "auction_start_delays", "currency_config", "specialist" };
    private static readonly uint[] _specialistConfigFieldTags = new uint[] { 32, 16, 24, 42, 8 };
    public static SpecialistConfig DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SpecialistConfig DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SpecialistConfig ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_SpecialistConfig__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SpecialistConfig, SpecialistConfig.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_SpecialistConfig__FieldAccessorTable; }
    }
    
    public const int SpecialistFieldNumber = 1;
    private bool hasSpecialist;
    private int specialist_;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public int Specialist {
      get { return specialist_; }
    }
    
    public const int AuctionDurationsFieldNumber = 2;
    private pbc::PopsicleList<ulong> auctionDurations_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> AuctionDurationsList {
      get { return pbc::Lists.AsReadOnly(auctionDurations_); }
    }
    public int AuctionDurationsCount {
      get { return auctionDurations_.Count; }
    }
    public ulong GetAuctionDurations(int index) {
      return auctionDurations_[index];
    }
    
    public const int AuctionStartDelaysFieldNumber = 3;
    private pbc::PopsicleList<ulong> auctionStartDelays_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> AuctionStartDelaysList {
      get { return pbc::Lists.AsReadOnly(auctionStartDelays_); }
    }
    public int AuctionStartDelaysCount {
      get { return auctionStartDelays_.Count; }
    }
    public ulong GetAuctionStartDelays(int index) {
      return auctionStartDelays_[index];
    }
    
    public const int AntiSnipingExtensionDelayFieldNumber = 4;
    private bool hasAntiSnipingExtensionDelay;
    private ulong antiSnipingExtensionDelay_;
    public bool HasAntiSnipingExtensionDelay {
      get { return hasAntiSnipingExtensionDelay; }
    }
    public ulong AntiSnipingExtensionDelay {
      get { return antiSnipingExtensionDelay_; }
    }
    
    public const int CurrencyConfigFieldNumber = 5;
    private pbc::PopsicleList<global::bnet.protocol.exchange.CurrencyConfig> currencyConfig_ = new pbc::PopsicleList<global::bnet.protocol.exchange.CurrencyConfig>();
    public scg::IList<global::bnet.protocol.exchange.CurrencyConfig> CurrencyConfigList {
      get { return currencyConfig_; }
    }
    public int CurrencyConfigCount {
      get { return currencyConfig_.Count; }
    }
    public global::bnet.protocol.exchange.CurrencyConfig GetCurrencyConfig(int index) {
      return currencyConfig_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSpecialist) return false;
        if (!hasAntiSnipingExtensionDelay) return false;
        foreach (global::bnet.protocol.exchange.CurrencyConfig element in CurrencyConfigList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _specialistConfigFieldNames;
      if (hasSpecialist) {
        output.WriteInt32(1, field_names[4], Specialist);
      }
      if (auctionDurations_.Count > 0) {
        output.WriteUInt64Array(2, field_names[1], auctionDurations_);
      }
      if (auctionStartDelays_.Count > 0) {
        output.WriteUInt64Array(3, field_names[2], auctionStartDelays_);
      }
      if (hasAntiSnipingExtensionDelay) {
        output.WriteUInt64(4, field_names[0], AntiSnipingExtensionDelay);
      }
      if (currencyConfig_.Count > 0) {
        output.WriteMessageArray(5, field_names[3], currencyConfig_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSpecialist) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Specialist);
        }
        {
          int dataSize = 0;
          foreach (ulong element in AuctionDurationsList) {
            dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * auctionDurations_.Count;
        }
        {
          int dataSize = 0;
          foreach (ulong element in AuctionStartDelaysList) {
            dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * auctionStartDelays_.Count;
        }
        if (hasAntiSnipingExtensionDelay) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, AntiSnipingExtensionDelay);
        }
        foreach (global::bnet.protocol.exchange.CurrencyConfig element in CurrencyConfigList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SpecialistConfig ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SpecialistConfig ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SpecialistConfig ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SpecialistConfig prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<SpecialistConfig, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SpecialistConfig result = new SpecialistConfig();
      
      protected override SpecialistConfig MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SpecialistConfig();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.SpecialistConfig.Descriptor; }
      }
      
      public override SpecialistConfig DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.SpecialistConfig.DefaultInstance; }
      }
      
      public override SpecialistConfig BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.auctionDurations_.MakeReadOnly();
        result.auctionStartDelays_.MakeReadOnly();
        result.currencyConfig_.MakeReadOnly();
        SpecialistConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SpecialistConfig) {
          return MergeFrom((SpecialistConfig) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SpecialistConfig other) {
        if (other == global::bnet.protocol.exchange.SpecialistConfig.DefaultInstance) return this;
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.auctionDurations_.Count != 0) {
          base.AddRange(other.auctionDurations_, result.auctionDurations_);
        }
        if (other.auctionStartDelays_.Count != 0) {
          base.AddRange(other.auctionStartDelays_, result.auctionStartDelays_);
        }
        if (other.HasAntiSnipingExtensionDelay) {
          AntiSnipingExtensionDelay = other.AntiSnipingExtensionDelay;
        }
        if (other.currencyConfig_.Count != 0) {
          base.AddRange(other.currencyConfig_, result.currencyConfig_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_specialistConfigFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _specialistConfigFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSpecialist = input.ReadInt32(ref result.specialist_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt64Array(tag, field_name, result.auctionDurations_);
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt64Array(tag, field_name, result.auctionStartDelays_);
              break;
            }
            case 32: {
              result.hasAntiSnipingExtensionDelay = input.ReadUInt64(ref result.antiSnipingExtensionDelay_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.currencyConfig_, global::bnet.protocol.exchange.CurrencyConfig.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSpecialist {
        get { return result.hasSpecialist; }
      }
      public int Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(int value) {
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<ulong> AuctionDurationsList {
        get { return result.auctionDurations_; }
      }
      public int AuctionDurationsCount {
        get { return result.AuctionDurationsCount; }
      }
      public ulong GetAuctionDurations(int index) {
        return result.GetAuctionDurations(index);
      }
      public Builder SetAuctionDurations(int index, ulong value) {
        result.auctionDurations_[index] = value;
        return this;
      }
      public Builder AddAuctionDurations(ulong value) {
        result.auctionDurations_.Add(value);
        return this;
      }
      public Builder AddRangeAuctionDurations(scg::IEnumerable<ulong> values) {
        base.AddRange(values, result.auctionDurations_);
        return this;
      }
      public Builder ClearAuctionDurations() {
        result.auctionDurations_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<ulong> AuctionStartDelaysList {
        get { return result.auctionStartDelays_; }
      }
      public int AuctionStartDelaysCount {
        get { return result.AuctionStartDelaysCount; }
      }
      public ulong GetAuctionStartDelays(int index) {
        return result.GetAuctionStartDelays(index);
      }
      public Builder SetAuctionStartDelays(int index, ulong value) {
        result.auctionStartDelays_[index] = value;
        return this;
      }
      public Builder AddAuctionStartDelays(ulong value) {
        result.auctionStartDelays_.Add(value);
        return this;
      }
      public Builder AddRangeAuctionStartDelays(scg::IEnumerable<ulong> values) {
        base.AddRange(values, result.auctionStartDelays_);
        return this;
      }
      public Builder ClearAuctionStartDelays() {
        result.auctionStartDelays_.Clear();
        return this;
      }
      
      public bool HasAntiSnipingExtensionDelay {
        get { return result.hasAntiSnipingExtensionDelay; }
      }
      public ulong AntiSnipingExtensionDelay {
        get { return result.AntiSnipingExtensionDelay; }
        set { SetAntiSnipingExtensionDelay(value); }
      }
      public Builder SetAntiSnipingExtensionDelay(ulong value) {
        result.hasAntiSnipingExtensionDelay = true;
        result.antiSnipingExtensionDelay_ = value;
        return this;
      }
      public Builder ClearAntiSnipingExtensionDelay() {
        result.hasAntiSnipingExtensionDelay = false;
        result.antiSnipingExtensionDelay_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.CurrencyConfig> CurrencyConfigList {
        get { return result.currencyConfig_; }
      }
      public int CurrencyConfigCount {
        get { return result.CurrencyConfigCount; }
      }
      public global::bnet.protocol.exchange.CurrencyConfig GetCurrencyConfig(int index) {
        return result.GetCurrencyConfig(index);
      }
      public Builder SetCurrencyConfig(int index, global::bnet.protocol.exchange.CurrencyConfig value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.currencyConfig_[index] = value;
        return this;
      }
      public Builder SetCurrencyConfig(int index, global::bnet.protocol.exchange.CurrencyConfig.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.currencyConfig_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCurrencyConfig(global::bnet.protocol.exchange.CurrencyConfig value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.currencyConfig_.Add(value);
        return this;
      }
      public Builder AddCurrencyConfig(global::bnet.protocol.exchange.CurrencyConfig.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.currencyConfig_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCurrencyConfig(scg::IEnumerable<global::bnet.protocol.exchange.CurrencyConfig> values) {
        base.AddRange(values, result.currencyConfig_);
        return this;
      }
      public Builder ClearCurrencyConfig() {
        result.currencyConfig_.Clear();
        return this;
      }
    }
    static SpecialistConfig() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class BillingAddress : pb::GeneratedMessage<BillingAddress, BillingAddress.Builder> {
    private static readonly BillingAddress defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _billingAddressFieldNames = new string[] { "city", "country_id", "postal_code", "state" };
    private static readonly uint[] _billingAddressFieldTags = new uint[] { 18, 8, 34, 26 };
    public static BillingAddress DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BillingAddress DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override BillingAddress ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BillingAddress__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BillingAddress, BillingAddress.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BillingAddress__FieldAccessorTable; }
    }
    
    public const int CountryIdFieldNumber = 1;
    private bool hasCountryId;
    private int countryId_;
    public bool HasCountryId {
      get { return hasCountryId; }
    }
    public int CountryId {
      get { return countryId_; }
    }
    
    public const int CityFieldNumber = 2;
    private bool hasCity;
    private string city_ = "";
    public bool HasCity {
      get { return hasCity; }
    }
    public string City {
      get { return city_; }
    }
    
    public const int StateFieldNumber = 3;
    private bool hasState;
    private string state_ = "";
    public bool HasState {
      get { return hasState; }
    }
    public string State {
      get { return state_; }
    }
    
    public const int PostalCodeFieldNumber = 4;
    private bool hasPostalCode;
    private string postalCode_ = "";
    public bool HasPostalCode {
      get { return hasPostalCode; }
    }
    public string PostalCode {
      get { return postalCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCountryId) return false;
        if (!hasCity) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _billingAddressFieldNames;
      if (hasCountryId) {
        output.WriteInt32(1, field_names[1], CountryId);
      }
      if (hasCity) {
        output.WriteString(2, field_names[0], City);
      }
      if (hasState) {
        output.WriteString(3, field_names[3], State);
      }
      if (hasPostalCode) {
        output.WriteString(4, field_names[2], PostalCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCountryId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, CountryId);
        }
        if (hasCity) {
          size += pb::CodedOutputStream.ComputeStringSize(2, City);
        }
        if (hasState) {
          size += pb::CodedOutputStream.ComputeStringSize(3, State);
        }
        if (hasPostalCode) {
          size += pb::CodedOutputStream.ComputeStringSize(4, PostalCode);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BillingAddress ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BillingAddress ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BillingAddress ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BillingAddress ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BillingAddress ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BillingAddress ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BillingAddress ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BillingAddress ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BillingAddress ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BillingAddress ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BillingAddress prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<BillingAddress, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      BillingAddress result = new BillingAddress();
      
      protected override BillingAddress MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new BillingAddress();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.BillingAddress.Descriptor; }
      }
      
      public override BillingAddress DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.BillingAddress.DefaultInstance; }
      }
      
      public override BillingAddress BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        BillingAddress returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BillingAddress) {
          return MergeFrom((BillingAddress) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BillingAddress other) {
        if (other == global::bnet.protocol.exchange.BillingAddress.DefaultInstance) return this;
        if (other.HasCountryId) {
          CountryId = other.CountryId;
        }
        if (other.HasCity) {
          City = other.City;
        }
        if (other.HasState) {
          State = other.State;
        }
        if (other.HasPostalCode) {
          PostalCode = other.PostalCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_billingAddressFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _billingAddressFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCountryId = input.ReadInt32(ref result.countryId_);
              break;
            }
            case 18: {
              result.hasCity = input.ReadString(ref result.city_);
              break;
            }
            case 26: {
              result.hasState = input.ReadString(ref result.state_);
              break;
            }
            case 34: {
              result.hasPostalCode = input.ReadString(ref result.postalCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCountryId {
        get { return result.hasCountryId; }
      }
      public int CountryId {
        get { return result.CountryId; }
        set { SetCountryId(value); }
      }
      public Builder SetCountryId(int value) {
        result.hasCountryId = true;
        result.countryId_ = value;
        return this;
      }
      public Builder ClearCountryId() {
        result.hasCountryId = false;
        result.countryId_ = 0;
        return this;
      }
      
      public bool HasCity {
        get { return result.hasCity; }
      }
      public string City {
        get { return result.City; }
        set { SetCity(value); }
      }
      public Builder SetCity(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCity = true;
        result.city_ = value;
        return this;
      }
      public Builder ClearCity() {
        result.hasCity = false;
        result.city_ = "";
        return this;
      }
      
      public bool HasState {
        get { return result.hasState; }
      }
      public string State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        result.hasState = false;
        result.state_ = "";
        return this;
      }
      
      public bool HasPostalCode {
        get { return result.hasPostalCode; }
      }
      public string PostalCode {
        get { return result.PostalCode; }
        set { SetPostalCode(value); }
      }
      public Builder SetPostalCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPostalCode = true;
        result.postalCode_ = value;
        return this;
      }
      public Builder ClearPostalCode() {
        result.hasPostalCode = false;
        result.postalCode_ = "";
        return this;
      }
    }
    static BillingAddress() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class FeeEstimationData : pb::GeneratedMessage<FeeEstimationData, FeeEstimationData.Builder> {
    private static readonly FeeEstimationData defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _feeEstimationDataFieldNames = new string[] { "amount", "billing_address", "bnet_account", "currency", "program", "source", "specialist" };
    private static readonly uint[] _feeEstimationDataFieldTags = new uint[] { 40, 58, 50, 26, 13, 37, 16 };
    public static FeeEstimationData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FeeEstimationData DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override FeeEstimationData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_FeeEstimationData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FeeEstimationData, FeeEstimationData.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_FeeEstimationData__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int SpecialistFieldNumber = 2;
    private bool hasSpecialist;
    private int specialist_;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public int Specialist {
      get { return specialist_; }
    }
    
    public const int CurrencyFieldNumber = 3;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SourceFieldNumber = 4;
    private bool hasSource;
    private uint source_;
    public bool HasSource {
      get { return hasSource; }
    }
    public uint Source {
      get { return source_; }
    }
    
    public const int AmountFieldNumber = 5;
    private bool hasAmount;
    private ulong amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public ulong Amount {
      get { return amount_; }
    }
    
    public const int BnetAccountFieldNumber = 6;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_; }
    }
    
    public const int BillingAddressFieldNumber = 7;
    private bool hasBillingAddress;
    private global::bnet.protocol.exchange.BillingAddress billingAddress_ = global::bnet.protocol.exchange.BillingAddress.DefaultInstance;
    public bool HasBillingAddress {
      get { return hasBillingAddress; }
    }
    public global::bnet.protocol.exchange.BillingAddress BillingAddress {
      get { return billingAddress_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        if (!hasSpecialist) return false;
        if (!hasCurrency) return false;
        if (!hasSource) return false;
        if (!hasAmount) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        if (HasBillingAddress) {
          if (!BillingAddress.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _feeEstimationDataFieldNames;
      if (hasProgram) {
        output.WriteFixed32(1, field_names[4], Program);
      }
      if (hasSpecialist) {
        output.WriteInt32(2, field_names[6], Specialist);
      }
      if (hasCurrency) {
        output.WriteString(3, field_names[3], Currency);
      }
      if (hasSource) {
        output.WriteFixed32(4, field_names[5], Source);
      }
      if (hasAmount) {
        output.WriteUInt64(5, field_names[0], Amount);
      }
      if (hasBnetAccount) {
        output.WriteMessage(6, field_names[2], BnetAccount);
      }
      if (hasBillingAddress) {
        output.WriteMessage(7, field_names[1], BillingAddress);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(1, Program);
        }
        if (hasSpecialist) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Specialist);
        }
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Currency);
        }
        if (hasSource) {
          size += pb::CodedOutputStream.ComputeFixed32Size(4, Source);
        }
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, Amount);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, BnetAccount);
        }
        if (hasBillingAddress) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, BillingAddress);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FeeEstimationData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FeeEstimationData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FeeEstimationData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FeeEstimationData prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<FeeEstimationData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      FeeEstimationData result = new FeeEstimationData();
      
      protected override FeeEstimationData MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new FeeEstimationData();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.FeeEstimationData.Descriptor; }
      }
      
      public override FeeEstimationData DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance; }
      }
      
      public override FeeEstimationData BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        FeeEstimationData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FeeEstimationData) {
          return MergeFrom((FeeEstimationData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FeeEstimationData other) {
        if (other == global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance) return this;
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSource) {
          Source = other.Source;
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasBillingAddress) {
          MergeBillingAddress(other.BillingAddress);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_feeEstimationDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _feeEstimationDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 16: {
              result.hasSpecialist = input.ReadInt32(ref result.specialist_);
              break;
            }
            case 26: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 37: {
              result.hasSource = input.ReadFixed32(ref result.source_);
              break;
            }
            case 40: {
              result.hasAmount = input.ReadUInt64(ref result.amount_);
              break;
            }
            case 50: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::bnet.protocol.exchange.BillingAddress.Builder subBuilder = global::bnet.protocol.exchange.BillingAddress.CreateBuilder();
              if (result.hasBillingAddress) {
                subBuilder.MergeFrom(BillingAddress);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BillingAddress = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasSpecialist {
        get { return result.hasSpecialist; }
      }
      public int Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(int value) {
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSource {
        get { return result.hasSource; }
      }
      public uint Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(uint value) {
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder ClearSource() {
        result.hasSource = false;
        result.source_ = 0;
        return this;
      }
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public ulong Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(ulong value) {
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        result.hasAmount = false;
        result.amount_ = 0UL;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        result.hasBnetAccount = false;
        result.bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasBillingAddress {
       get { return result.hasBillingAddress; }
      }
      public global::bnet.protocol.exchange.BillingAddress BillingAddress {
        get { return result.BillingAddress; }
        set { SetBillingAddress(value); }
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBillingAddress = true;
        result.billingAddress_ = value;
        return this;
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBillingAddress = true;
        result.billingAddress_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBillingAddress &&
            result.billingAddress_ != global::bnet.protocol.exchange.BillingAddress.DefaultInstance) {
            result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.CreateBuilder(result.billingAddress_).MergeFrom(value).BuildPartial();
        } else {
          result.billingAddress_ = value;
        }
        result.hasBillingAddress = true;
        return this;
      }
      public Builder ClearBillingAddress() {
        result.hasBillingAddress = false;
        result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.DefaultInstance;
        return this;
      }
    }
    static FeeEstimationData() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
