// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.exchange_object_provider {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public static partial class ExchangeObjectProvider {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_object_provider_ReportAuthorizeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest, global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest.Builder> internal__static_bnet_protocol_exchange_object_provider_ReportAuthorizeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_object_provider_ReportSettleRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.ReportSettleRequest, global::bnet.protocol.exchange_object_provider.ReportSettleRequest.Builder> internal__static_bnet_protocol_exchange_object_provider_ReportSettleRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_object_provider_ReportCancelRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.ReportCancelRequest, global::bnet.protocol.exchange_object_provider.ReportCancelRequest.Builder> internal__static_bnet_protocol_exchange_object_provider_ReportCancelRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest.Builder> internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_object_provider_PaymentMethod__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.PaymentMethod, global::bnet.protocol.exchange_object_provider.PaymentMethod.Builder> internal__static_bnet_protocol_exchange_object_provider_PaymentMethod__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.Builder> internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ExchangeObjectProvider() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CitsaWIvcHJvdG9jb2wvZXhjaGFuZ2Vfb2JqZWN0X3Byb3ZpZGVyLnByb3Rv" + 
          "EiZibmV0LnByb3RvY29sLmV4Y2hhbmdlX29iamVjdF9wcm92aWRlchoZbGli" + 
          "L3Byb3RvY29sL2VudGl0eS5wcm90bxobbGliL3Byb3RvY29sL2V4Y2hhbmdl" + 
          "LnByb3RvIp4CChZSZXBvcnRBdXRob3JpemVSZXF1ZXN0EjkKDHBhcnRpdGlv" + 
          "bl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9u" + 
          "SWQSMgoFdG9rZW4YAiACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBh" + 
          "cnRpdGlvbklkEg4KBnJlc3VsdBgDIAIoBBI7CgthdXRoX2hhbmRsZRgEIAEo" + 
          "CzImLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQmxvYkZyb21PZlR5cGUSFgoO" + 
          "ZGVmZXJfZGVsaXZlcnkYBSABKAgSMAoPYm5ldF9hY2NvdW50X2lkGAYgAigL" + 
          "MhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZCKUAQoTUmVwb3J0U2V0dGxlUmVx" + 
          "dWVzdBI5CgxwYXJ0aXRpb25faWQYASACKAsyIy5ibmV0LnByb3RvY29sLmV4" + 
          "Y2hhbmdlLlBhcnRpdGlvbklkEjIKBXRva2VuGAIgAigLMiMuYm5ldC5wcm90" + 
          "b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZBIOCgZyZXN1bHQYAyACKAQilAEK" + 
          "E1JlcG9ydENhbmNlbFJlcXVlc3QSOQoMcGFydGl0aW9uX2lkGAEgAigLMiMu" + 
          "Ym5ldC5wcm90b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZBIyCgV0b2tlbhgC" + 
          "IAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQSDgoG" + 
          "cmVzdWx0GAMgAigEIssBChhHZXRQYXltZW50TWV0aG9kc1JlcXVlc3QSLQoM" + 
          "Ym5ldF9hY2NvdW50GAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBIt" + 
          "CgxnYW1lX2FjY291bnQYAiABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlk" + 
          "EiUKBHRvb24YAyABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEhAKCGN1" + 
          "cnJlbmN5GAQgAigJEhgKEGNhc2hfaW5fb3V0X21hc2sYBSACKA0iZwoNUGF5" + 
          "bWVudE1ldGhvZBIxCgdhY2NvdW50GAEgAigLMiAuYm5ldC5wcm90b2NvbC5l" + 
          "eGNoYW5nZS5CbG9iRnJvbRITCgtkZXNjcmlwdGlvbhgCIAIoCRIOCgZhbW91" + 
          "bnQYAyABKAQiYwoZR2V0UGF5bWVudE1ldGhvZHNSZXNwb25zZRJGCgdtZXRo" + 
          "b2RzGAEgAygLMjUuYm5ldC5wcm90b2NvbC5leGNoYW5nZV9vYmplY3RfcHJv" + 
          "dmlkZXIuUGF5bWVudE1ldGhvZEIDgAEA");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_exchange_object_provider_ReportAuthorizeRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_exchange_object_provider_ReportAuthorizeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest, global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest.Builder>(internal__static_bnet_protocol_exchange_object_provider_ReportAuthorizeRequest__Descriptor,
                new string[] { "PartitionId", "Token", "Result", "AuthHandle", "DeferDelivery", "BnetAccountId", });
        internal__static_bnet_protocol_exchange_object_provider_ReportSettleRequest__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_exchange_object_provider_ReportSettleRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.ReportSettleRequest, global::bnet.protocol.exchange_object_provider.ReportSettleRequest.Builder>(internal__static_bnet_protocol_exchange_object_provider_ReportSettleRequest__Descriptor,
                new string[] { "PartitionId", "Token", "Result", });
        internal__static_bnet_protocol_exchange_object_provider_ReportCancelRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_exchange_object_provider_ReportCancelRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.ReportCancelRequest, global::bnet.protocol.exchange_object_provider.ReportCancelRequest.Builder>(internal__static_bnet_protocol_exchange_object_provider_ReportCancelRequest__Descriptor,
                new string[] { "PartitionId", "Token", "Result", });
        internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest.Builder>(internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsRequest__Descriptor,
                new string[] { "BnetAccount", "GameAccount", "Toon", "Currency", "CashInOutMask", });
        internal__static_bnet_protocol_exchange_object_provider_PaymentMethod__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_exchange_object_provider_PaymentMethod__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.PaymentMethod, global::bnet.protocol.exchange_object_provider.PaymentMethod.Builder>(internal__static_bnet_protocol_exchange_object_provider_PaymentMethod__Descriptor,
                new string[] { "Account", "Description", "Amount", });
        internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsResponse__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.Builder>(internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsResponse__Descriptor,
                new string[] { "Methods", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.Entity.Descriptor, 
          global::bnet.protocol.exchange.Exchange.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class ReportAuthorizeRequest : pb::GeneratedMessage<ReportAuthorizeRequest, ReportAuthorizeRequest.Builder> {
    private static readonly ReportAuthorizeRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _reportAuthorizeRequestFieldNames = new string[] { "auth_handle", "bnet_account_id", "defer_delivery", "partition_id", "result", "token" };
    private static readonly uint[] _reportAuthorizeRequestFieldTags = new uint[] { 34, 50, 40, 10, 24, 18 };
    public static ReportAuthorizeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportAuthorizeRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReportAuthorizeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_ReportAuthorizeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportAuthorizeRequest, ReportAuthorizeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_ReportAuthorizeRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int TokenFieldNumber = 2;
    private bool hasToken;
    private global::bnet.protocol.exchange.PartitionId token_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasToken {
      get { return hasToken; }
    }
    public global::bnet.protocol.exchange.PartitionId Token {
      get { return token_; }
    }
    
    public const int ResultFieldNumber = 3;
    private bool hasResult;
    private ulong result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public ulong Result {
      get { return result_; }
    }
    
    public const int AuthHandleFieldNumber = 4;
    private bool hasAuthHandle;
    private global::bnet.protocol.exchange.BlobFromOfType authHandle_ = global::bnet.protocol.exchange.BlobFromOfType.DefaultInstance;
    public bool HasAuthHandle {
      get { return hasAuthHandle; }
    }
    public global::bnet.protocol.exchange.BlobFromOfType AuthHandle {
      get { return authHandle_; }
    }
    
    public const int DeferDeliveryFieldNumber = 5;
    private bool hasDeferDelivery;
    private bool deferDelivery_;
    public bool HasDeferDelivery {
      get { return hasDeferDelivery; }
    }
    public bool DeferDelivery {
      get { return deferDelivery_; }
    }
    
    public const int BnetAccountIdFieldNumber = 6;
    private bool hasBnetAccountId;
    private global::bnet.protocol.EntityId bnetAccountId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBnetAccountId {
      get { return hasBnetAccountId; }
    }
    public global::bnet.protocol.EntityId BnetAccountId {
      get { return bnetAccountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasToken) return false;
        if (!hasResult) return false;
        if (!hasBnetAccountId) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Token.IsInitialized) return false;
        if (HasAuthHandle) {
          if (!AuthHandle.IsInitialized) return false;
        }
        if (!BnetAccountId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportAuthorizeRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[3], PartitionId);
      }
      if (hasToken) {
        output.WriteMessage(2, field_names[5], Token);
      }
      if (hasResult) {
        output.WriteUInt64(3, field_names[4], Result);
      }
      if (hasAuthHandle) {
        output.WriteMessage(4, field_names[0], AuthHandle);
      }
      if (hasDeferDelivery) {
        output.WriteBool(5, field_names[2], DeferDelivery);
      }
      if (hasBnetAccountId) {
        output.WriteMessage(6, field_names[1], BnetAccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasToken) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Token);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Result);
        }
        if (hasAuthHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, AuthHandle);
        }
        if (hasDeferDelivery) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, DeferDelivery);
        }
        if (hasBnetAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, BnetAccountId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportAuthorizeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportAuthorizeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportAuthorizeRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportAuthorizeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReportAuthorizeRequest result = new ReportAuthorizeRequest();
      
      protected override ReportAuthorizeRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReportAuthorizeRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest.Descriptor; }
      }
      
      public override ReportAuthorizeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest.DefaultInstance; }
      }
      
      public override ReportAuthorizeRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReportAuthorizeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportAuthorizeRequest) {
          return MergeFrom((ReportAuthorizeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportAuthorizeRequest other) {
        if (other == global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasToken) {
          MergeToken(other.Token);
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasAuthHandle) {
          MergeAuthHandle(other.AuthHandle);
        }
        if (other.HasDeferDelivery) {
          DeferDelivery = other.DeferDelivery;
        }
        if (other.HasBnetAccountId) {
          MergeBnetAccountId(other.BnetAccountId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportAuthorizeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportAuthorizeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasToken) {
                subBuilder.MergeFrom(Token);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Token = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasResult = input.ReadUInt64(ref result.result_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.BlobFromOfType.Builder subBuilder = global::bnet.protocol.exchange.BlobFromOfType.CreateBuilder();
              if (result.hasAuthHandle) {
                subBuilder.MergeFrom(AuthHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AuthHandle = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasDeferDelivery = input.ReadBool(ref result.deferDelivery_);
              break;
            }
            case 50: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccountId) {
                subBuilder.MergeFrom(BnetAccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccountId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasToken {
       get { return result.hasToken; }
      }
      public global::bnet.protocol.exchange.PartitionId Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder SetToken(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasToken = true;
        result.token_ = builderForValue.Build();
        return this;
      }
      public Builder MergeToken(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasToken &&
            result.token_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.token_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.token_).MergeFrom(value).BuildPartial();
        } else {
          result.token_ = value;
        }
        result.hasToken = true;
        return this;
      }
      public Builder ClearToken() {
        result.hasToken = false;
        result.token_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public ulong Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(ulong value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        result.hasResult = false;
        result.result_ = 0UL;
        return this;
      }
      
      public bool HasAuthHandle {
       get { return result.hasAuthHandle; }
      }
      public global::bnet.protocol.exchange.BlobFromOfType AuthHandle {
        get { return result.AuthHandle; }
        set { SetAuthHandle(value); }
      }
      public Builder SetAuthHandle(global::bnet.protocol.exchange.BlobFromOfType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAuthHandle = true;
        result.authHandle_ = value;
        return this;
      }
      public Builder SetAuthHandle(global::bnet.protocol.exchange.BlobFromOfType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAuthHandle = true;
        result.authHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAuthHandle(global::bnet.protocol.exchange.BlobFromOfType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAuthHandle &&
            result.authHandle_ != global::bnet.protocol.exchange.BlobFromOfType.DefaultInstance) {
            result.authHandle_ = global::bnet.protocol.exchange.BlobFromOfType.CreateBuilder(result.authHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.authHandle_ = value;
        }
        result.hasAuthHandle = true;
        return this;
      }
      public Builder ClearAuthHandle() {
        result.hasAuthHandle = false;
        result.authHandle_ = global::bnet.protocol.exchange.BlobFromOfType.DefaultInstance;
        return this;
      }
      
      public bool HasDeferDelivery {
        get { return result.hasDeferDelivery; }
      }
      public bool DeferDelivery {
        get { return result.DeferDelivery; }
        set { SetDeferDelivery(value); }
      }
      public Builder SetDeferDelivery(bool value) {
        result.hasDeferDelivery = true;
        result.deferDelivery_ = value;
        return this;
      }
      public Builder ClearDeferDelivery() {
        result.hasDeferDelivery = false;
        result.deferDelivery_ = false;
        return this;
      }
      
      public bool HasBnetAccountId {
       get { return result.hasBnetAccountId; }
      }
      public global::bnet.protocol.EntityId BnetAccountId {
        get { return result.BnetAccountId; }
        set { SetBnetAccountId(value); }
      }
      public Builder SetBnetAccountId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = value;
        return this;
      }
      public Builder SetBnetAccountId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccountId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBnetAccountId &&
            result.bnetAccountId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccountId_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccountId_ = value;
        }
        result.hasBnetAccountId = true;
        return this;
      }
      public Builder ClearBnetAccountId() {
        result.hasBnetAccountId = false;
        result.bnetAccountId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static ReportAuthorizeRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class ReportSettleRequest : pb::GeneratedMessage<ReportSettleRequest, ReportSettleRequest.Builder> {
    private static readonly ReportSettleRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _reportSettleRequestFieldNames = new string[] { "partition_id", "result", "token" };
    private static readonly uint[] _reportSettleRequestFieldTags = new uint[] { 10, 24, 18 };
    public static ReportSettleRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportSettleRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReportSettleRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_ReportSettleRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportSettleRequest, ReportSettleRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_ReportSettleRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int TokenFieldNumber = 2;
    private bool hasToken;
    private global::bnet.protocol.exchange.PartitionId token_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasToken {
      get { return hasToken; }
    }
    public global::bnet.protocol.exchange.PartitionId Token {
      get { return token_; }
    }
    
    public const int ResultFieldNumber = 3;
    private bool hasResult;
    private ulong result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public ulong Result {
      get { return result_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasToken) return false;
        if (!hasResult) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Token.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportSettleRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[0], PartitionId);
      }
      if (hasToken) {
        output.WriteMessage(2, field_names[2], Token);
      }
      if (hasResult) {
        output.WriteUInt64(3, field_names[1], Result);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasToken) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Token);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Result);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportSettleRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportSettleRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportSettleRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportSettleRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportSettleRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportSettleRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportSettleRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportSettleRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportSettleRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportSettleRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportSettleRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportSettleRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReportSettleRequest result = new ReportSettleRequest();
      
      protected override ReportSettleRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReportSettleRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange_object_provider.ReportSettleRequest.Descriptor; }
      }
      
      public override ReportSettleRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange_object_provider.ReportSettleRequest.DefaultInstance; }
      }
      
      public override ReportSettleRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReportSettleRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportSettleRequest) {
          return MergeFrom((ReportSettleRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportSettleRequest other) {
        if (other == global::bnet.protocol.exchange_object_provider.ReportSettleRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasToken) {
          MergeToken(other.Token);
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportSettleRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportSettleRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasToken) {
                subBuilder.MergeFrom(Token);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Token = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasResult = input.ReadUInt64(ref result.result_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasToken {
       get { return result.hasToken; }
      }
      public global::bnet.protocol.exchange.PartitionId Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder SetToken(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasToken = true;
        result.token_ = builderForValue.Build();
        return this;
      }
      public Builder MergeToken(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasToken &&
            result.token_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.token_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.token_).MergeFrom(value).BuildPartial();
        } else {
          result.token_ = value;
        }
        result.hasToken = true;
        return this;
      }
      public Builder ClearToken() {
        result.hasToken = false;
        result.token_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public ulong Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(ulong value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        result.hasResult = false;
        result.result_ = 0UL;
        return this;
      }
    }
    static ReportSettleRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class ReportCancelRequest : pb::GeneratedMessage<ReportCancelRequest, ReportCancelRequest.Builder> {
    private static readonly ReportCancelRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _reportCancelRequestFieldNames = new string[] { "partition_id", "result", "token" };
    private static readonly uint[] _reportCancelRequestFieldTags = new uint[] { 10, 24, 18 };
    public static ReportCancelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportCancelRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReportCancelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_ReportCancelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportCancelRequest, ReportCancelRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_ReportCancelRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int TokenFieldNumber = 2;
    private bool hasToken;
    private global::bnet.protocol.exchange.PartitionId token_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasToken {
      get { return hasToken; }
    }
    public global::bnet.protocol.exchange.PartitionId Token {
      get { return token_; }
    }
    
    public const int ResultFieldNumber = 3;
    private bool hasResult;
    private ulong result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public ulong Result {
      get { return result_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasToken) return false;
        if (!hasResult) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Token.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportCancelRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[0], PartitionId);
      }
      if (hasToken) {
        output.WriteMessage(2, field_names[2], Token);
      }
      if (hasResult) {
        output.WriteUInt64(3, field_names[1], Result);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasToken) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Token);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Result);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportCancelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportCancelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportCancelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportCancelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportCancelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportCancelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportCancelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportCancelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportCancelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportCancelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportCancelRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportCancelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReportCancelRequest result = new ReportCancelRequest();
      
      protected override ReportCancelRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReportCancelRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange_object_provider.ReportCancelRequest.Descriptor; }
      }
      
      public override ReportCancelRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange_object_provider.ReportCancelRequest.DefaultInstance; }
      }
      
      public override ReportCancelRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReportCancelRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportCancelRequest) {
          return MergeFrom((ReportCancelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportCancelRequest other) {
        if (other == global::bnet.protocol.exchange_object_provider.ReportCancelRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasToken) {
          MergeToken(other.Token);
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportCancelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportCancelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasToken) {
                subBuilder.MergeFrom(Token);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Token = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasResult = input.ReadUInt64(ref result.result_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasToken {
       get { return result.hasToken; }
      }
      public global::bnet.protocol.exchange.PartitionId Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder SetToken(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasToken = true;
        result.token_ = builderForValue.Build();
        return this;
      }
      public Builder MergeToken(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasToken &&
            result.token_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.token_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.token_).MergeFrom(value).BuildPartial();
        } else {
          result.token_ = value;
        }
        result.hasToken = true;
        return this;
      }
      public Builder ClearToken() {
        result.hasToken = false;
        result.token_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public ulong Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(ulong value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        result.hasResult = false;
        result.result_ = 0UL;
        return this;
      }
    }
    static ReportCancelRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class GetPaymentMethodsRequest : pb::GeneratedMessage<GetPaymentMethodsRequest, GetPaymentMethodsRequest.Builder> {
    private static readonly GetPaymentMethodsRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _getPaymentMethodsRequestFieldNames = new string[] { "bnet_account", "cash_in_out_mask", "currency", "game_account", "toon" };
    private static readonly uint[] _getPaymentMethodsRequestFieldTags = new uint[] { 10, 40, 34, 18, 26 };
    public static GetPaymentMethodsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetPaymentMethodsRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetPaymentMethodsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetPaymentMethodsRequest, GetPaymentMethodsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsRequest__FieldAccessorTable; }
    }
    
    public const int BnetAccountFieldNumber = 1;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_; }
    }
    
    public const int GameAccountFieldNumber = 2;
    private bool hasGameAccount;
    private global::bnet.protocol.EntityId gameAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bnet.protocol.EntityId GameAccount {
      get { return gameAccount_; }
    }
    
    public const int ToonFieldNumber = 3;
    private bool hasToon;
    private global::bnet.protocol.EntityId toon_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasToon {
      get { return hasToon; }
    }
    public global::bnet.protocol.EntityId Toon {
      get { return toon_; }
    }
    
    public const int CurrencyFieldNumber = 4;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int CashInOutMaskFieldNumber = 5;
    private bool hasCashInOutMask;
    private uint cashInOutMask_;
    public bool HasCashInOutMask {
      get { return hasCashInOutMask; }
    }
    public uint CashInOutMask {
      get { return cashInOutMask_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCurrency) return false;
        if (!hasCashInOutMask) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        if (HasGameAccount) {
          if (!GameAccount.IsInitialized) return false;
        }
        if (HasToon) {
          if (!Toon.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getPaymentMethodsRequestFieldNames;
      if (hasBnetAccount) {
        output.WriteMessage(1, field_names[0], BnetAccount);
      }
      if (hasGameAccount) {
        output.WriteMessage(2, field_names[3], GameAccount);
      }
      if (hasToon) {
        output.WriteMessage(3, field_names[4], Toon);
      }
      if (hasCurrency) {
        output.WriteString(4, field_names[2], Currency);
      }
      if (hasCashInOutMask) {
        output.WriteUInt32(5, field_names[1], CashInOutMask);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, BnetAccount);
        }
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccount);
        }
        if (hasToon) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Toon);
        }
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Currency);
        }
        if (hasCashInOutMask) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, CashInOutMask);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetPaymentMethodsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetPaymentMethodsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetPaymentMethodsRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetPaymentMethodsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetPaymentMethodsRequest result = new GetPaymentMethodsRequest();
      
      protected override GetPaymentMethodsRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetPaymentMethodsRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest.Descriptor; }
      }
      
      public override GetPaymentMethodsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest.DefaultInstance; }
      }
      
      public override GetPaymentMethodsRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GetPaymentMethodsRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetPaymentMethodsRequest) {
          return MergeFrom((GetPaymentMethodsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetPaymentMethodsRequest other) {
        if (other == global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest.DefaultInstance) return this;
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        if (other.HasToon) {
          MergeToon(other.Toon);
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasCashInOutMask) {
          CashInOutMask = other.CashInOutMask;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getPaymentMethodsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getPaymentMethodsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasToon) {
                subBuilder.MergeFrom(Toon);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Toon = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 40: {
              result.hasCashInOutMask = input.ReadUInt32(ref result.cashInOutMask_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        result.hasBnetAccount = false;
        result.bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bnet.protocol.EntityId GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        result.hasGameAccount = false;
        result.gameAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasToon {
       get { return result.hasToon; }
      }
      public global::bnet.protocol.EntityId Toon {
        get { return result.Toon; }
        set { SetToon(value); }
      }
      public Builder SetToon(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasToon = true;
        result.toon_ = value;
        return this;
      }
      public Builder SetToon(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasToon = true;
        result.toon_ = builderForValue.Build();
        return this;
      }
      public Builder MergeToon(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasToon &&
            result.toon_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.toon_ = global::bnet.protocol.EntityId.CreateBuilder(result.toon_).MergeFrom(value).BuildPartial();
        } else {
          result.toon_ = value;
        }
        result.hasToon = true;
        return this;
      }
      public Builder ClearToon() {
        result.hasToon = false;
        result.toon_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasCashInOutMask {
        get { return result.hasCashInOutMask; }
      }
      public uint CashInOutMask {
        get { return result.CashInOutMask; }
        set { SetCashInOutMask(value); }
      }
      public Builder SetCashInOutMask(uint value) {
        result.hasCashInOutMask = true;
        result.cashInOutMask_ = value;
        return this;
      }
      public Builder ClearCashInOutMask() {
        result.hasCashInOutMask = false;
        result.cashInOutMask_ = 0;
        return this;
      }
    }
    static GetPaymentMethodsRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class PaymentMethod : pb::GeneratedMessage<PaymentMethod, PaymentMethod.Builder> {
    private static readonly PaymentMethod defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _paymentMethodFieldNames = new string[] { "account", "amount", "description" };
    private static readonly uint[] _paymentMethodFieldTags = new uint[] { 10, 24, 18 };
    public static PaymentMethod DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PaymentMethod DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PaymentMethod ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_PaymentMethod__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PaymentMethod, PaymentMethod.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_PaymentMethod__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private global::bnet.protocol.exchange.BlobFrom account_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::bnet.protocol.exchange.BlobFrom Account {
      get { return account_; }
    }
    
    public const int DescriptionFieldNumber = 2;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int AmountFieldNumber = 3;
    private bool hasAmount;
    private ulong amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public ulong Amount {
      get { return amount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasDescription) return false;
        if (!Account.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _paymentMethodFieldNames;
      if (hasAccount) {
        output.WriteMessage(1, field_names[0], Account);
      }
      if (hasDescription) {
        output.WriteString(2, field_names[2], Description);
      }
      if (hasAmount) {
        output.WriteUInt64(3, field_names[1], Amount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Account);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Description);
        }
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Amount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PaymentMethod ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PaymentMethod ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PaymentMethod ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PaymentMethod ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PaymentMethod ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PaymentMethod ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PaymentMethod ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PaymentMethod ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PaymentMethod ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PaymentMethod ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PaymentMethod prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<PaymentMethod, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PaymentMethod result = new PaymentMethod();
      
      protected override PaymentMethod MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PaymentMethod();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange_object_provider.PaymentMethod.Descriptor; }
      }
      
      public override PaymentMethod DefaultInstanceForType {
        get { return global::bnet.protocol.exchange_object_provider.PaymentMethod.DefaultInstance; }
      }
      
      public override PaymentMethod BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PaymentMethod returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PaymentMethod) {
          return MergeFrom((PaymentMethod) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PaymentMethod other) {
        if (other == global::bnet.protocol.exchange_object_provider.PaymentMethod.DefaultInstance) return this;
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_paymentMethodFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _paymentMethodFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 24: {
              result.hasAmount = input.ReadUInt64(ref result.amount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::bnet.protocol.exchange.BlobFrom Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasAccount &&
            result.account_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.account_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        result.hasAccount = false;
        result.account_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public ulong Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(ulong value) {
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        result.hasAmount = false;
        result.amount_ = 0UL;
        return this;
      }
    }
    static PaymentMethod() {
      object.ReferenceEquals(global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class GetPaymentMethodsResponse : pb::GeneratedMessage<GetPaymentMethodsResponse, GetPaymentMethodsResponse.Builder> {
    private static readonly GetPaymentMethodsResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _getPaymentMethodsResponseFieldNames = new string[] { "methods" };
    private static readonly uint[] _getPaymentMethodsResponseFieldTags = new uint[] { 10 };
    public static GetPaymentMethodsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetPaymentMethodsResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetPaymentMethodsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetPaymentMethodsResponse, GetPaymentMethodsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.internal__static_bnet_protocol_exchange_object_provider_GetPaymentMethodsResponse__FieldAccessorTable; }
    }
    
    public const int MethodsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange_object_provider.PaymentMethod> methods_ = new pbc::PopsicleList<global::bnet.protocol.exchange_object_provider.PaymentMethod>();
    public scg::IList<global::bnet.protocol.exchange_object_provider.PaymentMethod> MethodsList {
      get { return methods_; }
    }
    public int MethodsCount {
      get { return methods_.Count; }
    }
    public global::bnet.protocol.exchange_object_provider.PaymentMethod GetMethods(int index) {
      return methods_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange_object_provider.PaymentMethod element in MethodsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getPaymentMethodsResponseFieldNames;
      if (methods_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], methods_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange_object_provider.PaymentMethod element in MethodsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetPaymentMethodsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetPaymentMethodsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetPaymentMethodsResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetPaymentMethodsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetPaymentMethodsResponse result = new GetPaymentMethodsResponse();
      
      protected override GetPaymentMethodsResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetPaymentMethodsResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.Descriptor; }
      }
      
      public override GetPaymentMethodsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.DefaultInstance; }
      }
      
      public override GetPaymentMethodsResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.methods_.MakeReadOnly();
        GetPaymentMethodsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetPaymentMethodsResponse) {
          return MergeFrom((GetPaymentMethodsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetPaymentMethodsResponse other) {
        if (other == global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.DefaultInstance) return this;
        if (other.methods_.Count != 0) {
          base.AddRange(other.methods_, result.methods_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getPaymentMethodsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getPaymentMethodsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.methods_, global::bnet.protocol.exchange_object_provider.PaymentMethod.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange_object_provider.PaymentMethod> MethodsList {
        get { return result.methods_; }
      }
      public int MethodsCount {
        get { return result.MethodsCount; }
      }
      public global::bnet.protocol.exchange_object_provider.PaymentMethod GetMethods(int index) {
        return result.GetMethods(index);
      }
      public Builder SetMethods(int index, global::bnet.protocol.exchange_object_provider.PaymentMethod value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.methods_[index] = value;
        return this;
      }
      public Builder SetMethods(int index, global::bnet.protocol.exchange_object_provider.PaymentMethod.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.methods_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMethods(global::bnet.protocol.exchange_object_provider.PaymentMethod value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.methods_.Add(value);
        return this;
      }
      public Builder AddMethods(global::bnet.protocol.exchange_object_provider.PaymentMethod.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.methods_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMethods(scg::IEnumerable<global::bnet.protocol.exchange_object_provider.PaymentMethod> values) {
        base.AddRange(values, result.methods_);
        return this;
      }
      public Builder ClearMethods() {
        result.methods_.Clear();
        return this;
      }
    }
    static GetPaymentMethodsResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
