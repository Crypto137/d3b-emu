// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.user_manager {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public static partial class UserManager {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_PlayerReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.PlayerReport, global::bnet.protocol.user_manager.PlayerReport.Builder> internal__static_bnet_protocol_user_manager_PlayerReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayer, global::bnet.protocol.user_manager.RecentPlayer.Builder> internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerRequest, global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Builder> internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder> internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_ReportPlayerRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportPlayerRequest, global::bnet.protocol.user_manager.ReportPlayerRequest.Builder> internal__static_bnet_protocol_user_manager_ReportPlayerRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_ReportPlayerResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportPlayerResponse, global::bnet.protocol.user_manager.ReportPlayerResponse.Builder> internal__static_bnet_protocol_user_manager_ReportPlayerResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_CheckPlayerBlockRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.CheckPlayerBlockRequest, global::bnet.protocol.user_manager.CheckPlayerBlockRequest.Builder> internal__static_bnet_protocol_user_manager_CheckPlayerBlockRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_CheckPlayerBlockResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.CheckPlayerBlockResponse, global::bnet.protocol.user_manager.CheckPlayerBlockResponse.Builder> internal__static_bnet_protocol_user_manager_CheckPlayerBlockResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_BlockPlayerRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockPlayerRequest, global::bnet.protocol.user_manager.BlockPlayerRequest.Builder> internal__static_bnet_protocol_user_manager_BlockPlayerRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_BlockPlayerResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockPlayerResponse, global::bnet.protocol.user_manager.BlockPlayerResponse.Builder> internal__static_bnet_protocol_user_manager_BlockPlayerResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RemovePlayerBlockRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemovePlayerBlockRequest, global::bnet.protocol.user_manager.RemovePlayerBlockRequest.Builder> internal__static_bnet_protocol_user_manager_RemovePlayerBlockRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RemovePlayerBlockResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemovePlayerBlockResponse, global::bnet.protocol.user_manager.RemovePlayerBlockResponse.Builder> internal__static_bnet_protocol_user_manager_RemovePlayerBlockResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersRequest, global::bnet.protocol.user_manager.AddRecentPlayersRequest.Builder> internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder> internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemoveRecentPlayersRequest, global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.Builder> internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.Builder> internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_BlockedPlayerNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockedPlayerNotification, global::bnet.protocol.user_manager.BlockedPlayerNotification.Builder> internal__static_bnet_protocol_user_manager_BlockedPlayerNotification__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static UserManager() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CidzZXJ2aWNlL3VzZXJfbWFuYWdlci91c2VyX21hbmFnZXIucHJvdG8SGmJu" + 
          "ZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyGhxsaWIvcHJvdG9jb2wvYXR0cmli" + 
          "dXRlLnByb3RvGhlsaWIvcHJvdG9jb2wvZW50aXR5LnByb3RvGhFsaWIvcnBj" + 
          "L3JwYy5wcm90byLIAgoMUGxheWVyUmVwb3J0ElIKDmNvbXBsYWludF9jb2Rl" + 
          "GAEgAigOMjouYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuUGxheWVyUmVw" + 
          "b3J0LlVzZXJDb21wbGFpbnRDb2RlEhYKDmNvbXBsYWludF9ub3RlGAIgAigJ" + 
          "IssBChFVc2VyQ29tcGxhaW50Q29kZRIXChNVU0VSX0NPTVBMQUlOVF9TUEFN" + 
          "EAASHQoZVVNFUl9DT01QTEFJTlRfSEFSQVNTTUVOVBABEiMKH1VTRVJfQ09N" + 
          "UExBSU5UX1JFQUxfTElGRV9USFJFQVQQAhIlCiFVU0VSX0NPTVBMQUlOVF9J" + 
          "TkFQUFJPUFJJQVRFX05BTUUQAxIaChZVU0VSX0NPTVBMQUlOVF9IQUNLSU5H" + 
          "EAQSFgoSVVNFUl9DT01QTEFJTlRfQU5ZEAUiiQEKDFJlY2VudFBsYXllchIn" + 
          "CgZwbGF5ZXIYASACKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEhgKEHRp" + 
          "bWVzdGFtcF9wbGF5ZWQYAiABKAYSNgoKYXR0cmlidXRlcxgDIAMoCzIiLmJu" + 
          "ZXQucHJvdG9jb2wuYXR0cmlidXRlLkF0dHJpYnV0ZSIyCh1TdWJzY3JpYmVU" + 
          "b1VzZXJNYW5hZ2VyUmVxdWVzdBIRCglvYmplY3RfaWQYASACKAQikgEKHlN1" + 
          "YnNjcmliZVRvVXNlck1hbmFnZXJSZXNwb25zZRIuCg1ibG9ja2VkX3VzZXJz" + 
          "GAEgAygLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBJACg5yZWNlbnRfcGxh" + 
          "eWVycxgCIAMoCzIoLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLlJlY2Vu" + 
          "dFBsYXllciJ7ChNSZXBvcnRQbGF5ZXJSZXF1ZXN0EioKCXRhcmdldF9pZBgB" + 
          "IAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSOAoGcmVwb3J0GAIgAigL" + 
          "MiguYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuUGxheWVyUmVwb3J0IkYK" + 
          "FFJlcG9ydFBsYXllclJlc3BvbnNlEi4KDXJlcG9ydGVkX3VzZXIYASABKAsy" + 
          "Fy5ibmV0LnByb3RvY29sLkVudGl0eUlkIkUKF0NoZWNrUGxheWVyQmxvY2tS" + 
          "ZXF1ZXN0EioKCXRhcmdldF9pZBgBIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50" + 
          "aXR5SWQiSQoYQ2hlY2tQbGF5ZXJCbG9ja1Jlc3BvbnNlEi0KDGJsb2NrZWRf" + 
          "dXNlchgBIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQiQAoSQmxvY2tQ" + 
          "bGF5ZXJSZXF1ZXN0EioKCXRhcmdldF9pZBgBIAIoCzIXLmJuZXQucHJvdG9j" + 
          "b2wuRW50aXR5SWQiRAoTQmxvY2tQbGF5ZXJSZXNwb25zZRItCgxibG9ja2Vk" + 
          "X3VzZXIYASABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkIkYKGFJlbW92" + 
          "ZVBsYXllckJsb2NrUmVxdWVzdBIqCgl0YXJnZXRfaWQYASACKAsyFy5ibmV0" + 
          "LnByb3RvY29sLkVudGl0eUlkIkoKGVJlbW92ZVBsYXllckJsb2NrUmVzcG9u" + 
          "c2USLQoMYmxvY2tlZF91c2VyGAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRp" + 
          "dHlJZCJUChdBZGRSZWNlbnRQbGF5ZXJzUmVxdWVzdBI5CgdwbGF5ZXJzGAEg" + 
          "AygLMiguYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuUmVjZW50UGxheWVy" + 
          "Ip4BChhBZGRSZWNlbnRQbGF5ZXJzUmVzcG9uc2USPwoNcGxheWVyc19hZGRl" + 
          "ZBgBIAMoCzIoLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLlJlY2VudFBs" + 
          "YXllchJBCg9wbGF5ZXJzX3JlbW92ZWQYAyADKAsyKC5ibmV0LnByb3RvY29s" + 
          "LnVzZXJfbWFuYWdlci5SZWNlbnRQbGF5ZXIiVwoaUmVtb3ZlUmVjZW50UGxh" + 
          "eWVyc1JlcXVlc3QSOQoHcGxheWVycxgCIAMoCzIoLmJuZXQucHJvdG9jb2wu" + 
          "dXNlcl9tYW5hZ2VyLlJlY2VudFBsYXllciJgChtSZW1vdmVSZWNlbnRQbGF5" + 
          "ZXJzUmVzcG9uc2USQQoPcGxheWVyc19yZW1vdmVkGAEgAygLMiguYm5ldC5w" + 
          "cm90b2NvbC51c2VyX21hbmFnZXIuUmVjZW50UGxheWVyIkUKGUJsb2NrZWRQ" + 
          "bGF5ZXJOb3RpZmljYXRpb24SKAoHcGxheWVycxgBIAMoCzIXLmJuZXQucHJv" + 
          "dG9jb2wuRW50aXR5SWQyuQYKElVzZXJNYW5hZ2VyU2VydmljZRKVAQoWU3Vi" + 
          "c2NyaWJlVG9Vc2VyTWFuYWdlchI5LmJuZXQucHJvdG9jb2wudXNlcl9tYW5h" + 
          "Z2VyLlN1YnNjcmliZVRvVXNlck1hbmFnZXJSZXF1ZXN0GjouYm5ldC5wcm90" + 
          "b2NvbC51c2VyX21hbmFnZXIuU3Vic2NyaWJlVG9Vc2VyTWFuYWdlclJlc3Bv" + 
          "bnNlIgSAtRgBEncKDFJlcG9ydFBsYXllchIvLmJuZXQucHJvdG9jb2wudXNl" + 
          "cl9tYW5hZ2VyLlJlcG9ydFBsYXllclJlcXVlc3QaMC5ibmV0LnByb3RvY29s" + 
          "LnVzZXJfbWFuYWdlci5SZXBvcnRQbGF5ZXJSZXNwb25zZSIEgLUYAhJ0CgtC" + 
          "bG9ja1BsYXllchIuLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLkJsb2Nr" + 
          "UGxheWVyUmVxdWVzdBovLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLkJs" + 
          "b2NrUGxheWVyUmVzcG9uc2UiBIC1GAMShgEKEVJlbW92ZVBsYXllckJsb2Nr" + 
          "EjQuYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuUmVtb3ZlUGxheWVyQmxv" + 
          "Y2tSZXF1ZXN0GjUuYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuUmVtb3Zl" + 
          "UGxheWVyQmxvY2tSZXNwb25zZSIEgLUYBBKDAQoQQWRkUmVjZW50UGxheWVy" + 
          "cxIzLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLkFkZFJlY2VudFBsYXll" + 
          "cnNSZXF1ZXN0GjQuYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuQWRkUmVj" + 
          "ZW50UGxheWVyc1Jlc3BvbnNlIgSAtRgFEowBChNSZW1vdmVSZWNlbnRQbGF5" + 
          "ZXJzEjYuYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuUmVtb3ZlUmVjZW50" + 
          "UGxheWVyc1JlcXVlc3QaNy5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdlci5S" + 
          "ZW1vdmVSZWNlbnRQbGF5ZXJzUmVzcG9uc2UiBIC1GAYy+AEKEVVzZXJNYW5h" + 
          "Z2VyTm90aWZ5Em4KE05vdGlmeVBsYXllckJsb2NrZWQSNS5ibmV0LnByb3Rv" + 
          "Y29sLnVzZXJfbWFuYWdlci5CbG9ja2VkUGxheWVyTm90aWZpY2F0aW9uGhou" + 
          "Ym5ldC5wcm90b2NvbC5OT19SRVNQT05TRSIEgLUYARJzChhOb3RpZnlQbGF5" + 
          "ZXJCbG9ja1JlbW92ZWQSNS5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdlci5C" + 
          "bG9ja2VkUGxheWVyTm90aWZpY2F0aW9uGhouYm5ldC5wcm90b2NvbC5OT19S" + 
          "RVNQT05TRSIEgLUYAkIDgAEA");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_user_manager_PlayerReport__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_user_manager_PlayerReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.PlayerReport, global::bnet.protocol.user_manager.PlayerReport.Builder>(internal__static_bnet_protocol_user_manager_PlayerReport__Descriptor,
                new string[] { "ComplaintCode", "ComplaintNote", });
        internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayer, global::bnet.protocol.user_manager.RecentPlayer.Builder>(internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor,
                new string[] { "Player", "TimestampPlayed", "Attributes", });
        internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerRequest, global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Builder>(internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor,
                new string[] { "ObjectId", });
        internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder>(internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor,
                new string[] { "BlockedUsers", "RecentPlayers", });
        internal__static_bnet_protocol_user_manager_ReportPlayerRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_user_manager_ReportPlayerRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportPlayerRequest, global::bnet.protocol.user_manager.ReportPlayerRequest.Builder>(internal__static_bnet_protocol_user_manager_ReportPlayerRequest__Descriptor,
                new string[] { "TargetId", "Report", });
        internal__static_bnet_protocol_user_manager_ReportPlayerResponse__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bnet_protocol_user_manager_ReportPlayerResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportPlayerResponse, global::bnet.protocol.user_manager.ReportPlayerResponse.Builder>(internal__static_bnet_protocol_user_manager_ReportPlayerResponse__Descriptor,
                new string[] { "ReportedUser", });
        internal__static_bnet_protocol_user_manager_CheckPlayerBlockRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bnet_protocol_user_manager_CheckPlayerBlockRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.CheckPlayerBlockRequest, global::bnet.protocol.user_manager.CheckPlayerBlockRequest.Builder>(internal__static_bnet_protocol_user_manager_CheckPlayerBlockRequest__Descriptor,
                new string[] { "TargetId", });
        internal__static_bnet_protocol_user_manager_CheckPlayerBlockResponse__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bnet_protocol_user_manager_CheckPlayerBlockResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.CheckPlayerBlockResponse, global::bnet.protocol.user_manager.CheckPlayerBlockResponse.Builder>(internal__static_bnet_protocol_user_manager_CheckPlayerBlockResponse__Descriptor,
                new string[] { "BlockedUser", });
        internal__static_bnet_protocol_user_manager_BlockPlayerRequest__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bnet_protocol_user_manager_BlockPlayerRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockPlayerRequest, global::bnet.protocol.user_manager.BlockPlayerRequest.Builder>(internal__static_bnet_protocol_user_manager_BlockPlayerRequest__Descriptor,
                new string[] { "TargetId", });
        internal__static_bnet_protocol_user_manager_BlockPlayerResponse__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bnet_protocol_user_manager_BlockPlayerResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockPlayerResponse, global::bnet.protocol.user_manager.BlockPlayerResponse.Builder>(internal__static_bnet_protocol_user_manager_BlockPlayerResponse__Descriptor,
                new string[] { "BlockedUser", });
        internal__static_bnet_protocol_user_manager_RemovePlayerBlockRequest__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bnet_protocol_user_manager_RemovePlayerBlockRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemovePlayerBlockRequest, global::bnet.protocol.user_manager.RemovePlayerBlockRequest.Builder>(internal__static_bnet_protocol_user_manager_RemovePlayerBlockRequest__Descriptor,
                new string[] { "TargetId", });
        internal__static_bnet_protocol_user_manager_RemovePlayerBlockResponse__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bnet_protocol_user_manager_RemovePlayerBlockResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemovePlayerBlockResponse, global::bnet.protocol.user_manager.RemovePlayerBlockResponse.Builder>(internal__static_bnet_protocol_user_manager_RemovePlayerBlockResponse__Descriptor,
                new string[] { "BlockedUser", });
        internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersRequest, global::bnet.protocol.user_manager.AddRecentPlayersRequest.Builder>(internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor,
                new string[] { "Players", });
        internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor = Descriptor.MessageTypes[13];
        internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder>(internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor,
                new string[] { "PlayersAdded", "PlayersRemoved", });
        internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__Descriptor = Descriptor.MessageTypes[14];
        internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemoveRecentPlayersRequest, global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.Builder>(internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__Descriptor,
                new string[] { "Players", });
        internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__Descriptor = Descriptor.MessageTypes[15];
        internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.Builder>(internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__Descriptor,
                new string[] { "PlayersRemoved", });
        internal__static_bnet_protocol_user_manager_BlockedPlayerNotification__Descriptor = Descriptor.MessageTypes[16];
        internal__static_bnet_protocol_user_manager_BlockedPlayerNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockedPlayerNotification, global::bnet.protocol.user_manager.BlockedPlayerNotification.Builder>(internal__static_bnet_protocol_user_manager_BlockedPlayerNotification__Descriptor,
                new string[] { "Players", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bnet.protocol.attribute.Proto.Attribute.RegisterAllExtensions(registry);
        global::bnet.protocol.Entity.RegisterAllExtensions(registry);
        global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
          global::bnet.protocol.Entity.Descriptor, 
          global::bnet.protocol.Rpc.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class PlayerReport : pb::GeneratedMessage<PlayerReport, PlayerReport.Builder> {
    private static readonly PlayerReport defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _playerReportFieldNames = new string[] { "complaint_code", "complaint_note" };
    private static readonly uint[] _playerReportFieldTags = new uint[] { 8, 18 };
    public static PlayerReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlayerReport DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlayerReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_PlayerReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlayerReport, PlayerReport.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_PlayerReport__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
      public enum UserComplaintCode {
        USER_COMPLAINT_SPAM = 0,
        USER_COMPLAINT_HARASSMENT = 1,
        USER_COMPLAINT_REAL_LIFE_THREAT = 2,
        USER_COMPLAINT_INAPPROPRIATE_NAME = 3,
        USER_COMPLAINT_HACKING = 4,
        USER_COMPLAINT_ANY = 5,
      }
      
    }
    #endregion
    
    public const int ComplaintCodeFieldNumber = 1;
    private bool hasComplaintCode;
    private global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode complaintCode_ = global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode.USER_COMPLAINT_SPAM;
    public bool HasComplaintCode {
      get { return hasComplaintCode; }
    }
    public global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode ComplaintCode {
      get { return complaintCode_; }
    }
    
    public const int ComplaintNoteFieldNumber = 2;
    private bool hasComplaintNote;
    private string complaintNote_ = "";
    public bool HasComplaintNote {
      get { return hasComplaintNote; }
    }
    public string ComplaintNote {
      get { return complaintNote_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasComplaintCode) return false;
        if (!hasComplaintNote) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerReportFieldNames;
      if (hasComplaintCode) {
        output.WriteEnum(1, field_names[0], (int) ComplaintCode, ComplaintCode);
      }
      if (hasComplaintNote) {
        output.WriteString(2, field_names[1], ComplaintNote);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasComplaintCode) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ComplaintCode);
        }
        if (hasComplaintNote) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ComplaintNote);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlayerReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlayerReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlayerReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlayerReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlayerReport prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlayerReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlayerReport result = new PlayerReport();
      
      protected override PlayerReport MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlayerReport();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.PlayerReport.Descriptor; }
      }
      
      public override PlayerReport DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.PlayerReport.DefaultInstance; }
      }
      
      public override PlayerReport BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlayerReport returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlayerReport) {
          return MergeFrom((PlayerReport) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerReport other) {
        if (other == global::bnet.protocol.user_manager.PlayerReport.DefaultInstance) return this;
        if (other.HasComplaintCode) {
          ComplaintCode = other.ComplaintCode;
        }
        if (other.HasComplaintNote) {
          ComplaintNote = other.ComplaintNote;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerReportFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerReportFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.complaintCode_, out unknown)) {
                result.hasComplaintCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasComplaintNote = input.ReadString(ref result.complaintNote_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasComplaintCode {
       get { return result.hasComplaintCode; }
      }
      public global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode ComplaintCode {
        get { return result.ComplaintCode; }
        set { SetComplaintCode(value); }
      }
      public Builder SetComplaintCode(global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode value) {
        result.hasComplaintCode = true;
        result.complaintCode_ = value;
        return this;
      }
      public Builder ClearComplaintCode() {
        result.hasComplaintCode = false;
        result.complaintCode_ = global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode.USER_COMPLAINT_SPAM;
        return this;
      }
      
      public bool HasComplaintNote {
        get { return result.hasComplaintNote; }
      }
      public string ComplaintNote {
        get { return result.ComplaintNote; }
        set { SetComplaintNote(value); }
      }
      public Builder SetComplaintNote(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasComplaintNote = true;
        result.complaintNote_ = value;
        return this;
      }
      public Builder ClearComplaintNote() {
        result.hasComplaintNote = false;
        result.complaintNote_ = "";
        return this;
      }
    }
    static PlayerReport() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RecentPlayer : pb::GeneratedMessage<RecentPlayer, RecentPlayer.Builder> {
    private static readonly RecentPlayer defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _recentPlayerFieldNames = new string[] { "attributes", "player", "timestamp_played" };
    private static readonly uint[] _recentPlayerFieldTags = new uint[] { 26, 10, 17 };
    public static RecentPlayer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RecentPlayer DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RecentPlayer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RecentPlayer, RecentPlayer.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable; }
    }
    
    public const int PlayerFieldNumber = 1;
    private bool hasPlayer;
    private global::bnet.protocol.EntityId player_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasPlayer {
      get { return hasPlayer; }
    }
    public global::bnet.protocol.EntityId Player {
      get { return player_; }
    }
    
    public const int TimestampPlayedFieldNumber = 2;
    private bool hasTimestampPlayed;
    private ulong timestampPlayed_;
    public bool HasTimestampPlayed {
      get { return hasTimestampPlayed; }
    }
    public ulong TimestampPlayed {
      get { return timestampPlayed_; }
    }
    
    public const int AttributesFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attributes_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributesList {
      get { return attributes_; }
    }
    public int AttributesCount {
      get { return attributes_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttributes(int index) {
      return attributes_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPlayer) return false;
        if (!Player.IsInitialized) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _recentPlayerFieldNames;
      if (hasPlayer) {
        output.WriteMessage(1, field_names[1], Player);
      }
      if (hasTimestampPlayed) {
        output.WriteFixed64(2, field_names[2], TimestampPlayed);
      }
      if (attributes_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attributes_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPlayer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Player);
        }
        if (hasTimestampPlayed) {
          size += pb::CodedOutputStream.ComputeFixed64Size(2, TimestampPlayed);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in AttributesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RecentPlayer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RecentPlayer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RecentPlayer prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RecentPlayer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RecentPlayer result = new RecentPlayer();
      
      protected override RecentPlayer MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RecentPlayer();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RecentPlayer.Descriptor; }
      }
      
      public override RecentPlayer DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance; }
      }
      
      public override RecentPlayer BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.attributes_.MakeReadOnly();
        RecentPlayer returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RecentPlayer) {
          return MergeFrom((RecentPlayer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RecentPlayer other) {
        if (other == global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance) return this;
        if (other.HasPlayer) {
          MergePlayer(other.Player);
        }
        if (other.HasTimestampPlayed) {
          TimestampPlayed = other.TimestampPlayed;
        }
        if (other.attributes_.Count != 0) {
          base.AddRange(other.attributes_, result.attributes_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_recentPlayerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _recentPlayerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasPlayer) {
                subBuilder.MergeFrom(Player);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Player = subBuilder.BuildPartial();
              break;
            }
            case 17: {
              result.hasTimestampPlayed = input.ReadFixed64(ref result.timestampPlayed_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attributes_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPlayer {
       get { return result.hasPlayer; }
      }
      public global::bnet.protocol.EntityId Player {
        get { return result.Player; }
        set { SetPlayer(value); }
      }
      public Builder SetPlayer(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPlayer = true;
        result.player_ = value;
        return this;
      }
      public Builder SetPlayer(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPlayer = true;
        result.player_ = builderForValue.Build();
        return this;
      }
      public Builder MergePlayer(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasPlayer &&
            result.player_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.player_ = global::bnet.protocol.EntityId.CreateBuilder(result.player_).MergeFrom(value).BuildPartial();
        } else {
          result.player_ = value;
        }
        result.hasPlayer = true;
        return this;
      }
      public Builder ClearPlayer() {
        result.hasPlayer = false;
        result.player_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasTimestampPlayed {
        get { return result.hasTimestampPlayed; }
      }
      public ulong TimestampPlayed {
        get { return result.TimestampPlayed; }
        set { SetTimestampPlayed(value); }
      }
      public Builder SetTimestampPlayed(ulong value) {
        result.hasTimestampPlayed = true;
        result.timestampPlayed_ = value;
        return this;
      }
      public Builder ClearTimestampPlayed() {
        result.hasTimestampPlayed = false;
        result.timestampPlayed_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributesList {
        get { return result.attributes_; }
      }
      public int AttributesCount {
        get { return result.AttributesCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttributes(int index) {
        return result.GetAttributes(index);
      }
      public Builder SetAttributes(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attributes_[index] = value;
        return this;
      }
      public Builder SetAttributes(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attributes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributes(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attributes_.Add(value);
        return this;
      }
      public Builder AddAttributes(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attributes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributes(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        base.AddRange(values, result.attributes_);
        return this;
      }
      public Builder ClearAttributes() {
        result.attributes_.Clear();
        return this;
      }
    }
    static RecentPlayer() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class SubscribeToUserManagerRequest : pb::GeneratedMessage<SubscribeToUserManagerRequest, SubscribeToUserManagerRequest.Builder> {
    private static readonly SubscribeToUserManagerRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _subscribeToUserManagerRequestFieldNames = new string[] { "object_id" };
    private static readonly uint[] _subscribeToUserManagerRequestFieldTags = new uint[] { 8 };
    public static SubscribeToUserManagerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeToUserManagerRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SubscribeToUserManagerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeToUserManagerRequest, SubscribeToUserManagerRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeToUserManagerRequestFieldNames;
      if (hasObjectId) {
        output.WriteUInt64(1, field_names[0], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeToUserManagerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeToUserManagerRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeToUserManagerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SubscribeToUserManagerRequest result = new SubscribeToUserManagerRequest();
      
      protected override SubscribeToUserManagerRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SubscribeToUserManagerRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Descriptor; }
      }
      
      public override SubscribeToUserManagerRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance; }
      }
      
      public override SubscribeToUserManagerRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SubscribeToUserManagerRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeToUserManagerRequest) {
          return MergeFrom((SubscribeToUserManagerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeToUserManagerRequest other) {
        if (other == global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance) return this;
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeToUserManagerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeToUserManagerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeToUserManagerRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class SubscribeToUserManagerResponse : pb::GeneratedMessage<SubscribeToUserManagerResponse, SubscribeToUserManagerResponse.Builder> {
    private static readonly SubscribeToUserManagerResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _subscribeToUserManagerResponseFieldNames = new string[] { "blocked_users", "recent_players" };
    private static readonly uint[] _subscribeToUserManagerResponseFieldTags = new uint[] { 10, 18 };
    public static SubscribeToUserManagerResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeToUserManagerResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SubscribeToUserManagerResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeToUserManagerResponse, SubscribeToUserManagerResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable; }
    }
    
    public const int BlockedUsersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> blockedUsers_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> BlockedUsersList {
      get { return blockedUsers_; }
    }
    public int BlockedUsersCount {
      get { return blockedUsers_.Count; }
    }
    public global::bnet.protocol.EntityId GetBlockedUsers(int index) {
      return blockedUsers_[index];
    }
    
    public const int RecentPlayersFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> recentPlayers_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> RecentPlayersList {
      get { return recentPlayers_; }
    }
    public int RecentPlayersCount {
      get { return recentPlayers_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetRecentPlayers(int index) {
      return recentPlayers_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in BlockedUsersList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in RecentPlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeToUserManagerResponseFieldNames;
      if (blockedUsers_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], blockedUsers_);
      }
      if (recentPlayers_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], recentPlayers_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in BlockedUsersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in RecentPlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeToUserManagerResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeToUserManagerResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeToUserManagerResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SubscribeToUserManagerResponse result = new SubscribeToUserManagerResponse();
      
      protected override SubscribeToUserManagerResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SubscribeToUserManagerResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Descriptor; }
      }
      
      public override SubscribeToUserManagerResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance; }
      }
      
      public override SubscribeToUserManagerResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.blockedUsers_.MakeReadOnly();
        result.recentPlayers_.MakeReadOnly();
        SubscribeToUserManagerResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeToUserManagerResponse) {
          return MergeFrom((SubscribeToUserManagerResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeToUserManagerResponse other) {
        if (other == global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance) return this;
        if (other.blockedUsers_.Count != 0) {
          base.AddRange(other.blockedUsers_, result.blockedUsers_);
        }
        if (other.recentPlayers_.Count != 0) {
          base.AddRange(other.recentPlayers_, result.recentPlayers_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeToUserManagerResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeToUserManagerResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.blockedUsers_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.recentPlayers_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> BlockedUsersList {
        get { return result.blockedUsers_; }
      }
      public int BlockedUsersCount {
        get { return result.BlockedUsersCount; }
      }
      public global::bnet.protocol.EntityId GetBlockedUsers(int index) {
        return result.GetBlockedUsers(index);
      }
      public Builder SetBlockedUsers(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.blockedUsers_[index] = value;
        return this;
      }
      public Builder SetBlockedUsers(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.blockedUsers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBlockedUsers(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.blockedUsers_.Add(value);
        return this;
      }
      public Builder AddBlockedUsers(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.blockedUsers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBlockedUsers(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        base.AddRange(values, result.blockedUsers_);
        return this;
      }
      public Builder ClearBlockedUsers() {
        result.blockedUsers_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> RecentPlayersList {
        get { return result.recentPlayers_; }
      }
      public int RecentPlayersCount {
        get { return result.RecentPlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetRecentPlayers(int index) {
        return result.GetRecentPlayers(index);
      }
      public Builder SetRecentPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.recentPlayers_[index] = value;
        return this;
      }
      public Builder SetRecentPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.recentPlayers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRecentPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.recentPlayers_.Add(value);
        return this;
      }
      public Builder AddRecentPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.recentPlayers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRecentPlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        base.AddRange(values, result.recentPlayers_);
        return this;
      }
      public Builder ClearRecentPlayers() {
        result.recentPlayers_.Clear();
        return this;
      }
    }
    static SubscribeToUserManagerResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class ReportPlayerRequest : pb::GeneratedMessage<ReportPlayerRequest, ReportPlayerRequest.Builder> {
    private static readonly ReportPlayerRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _reportPlayerRequestFieldNames = new string[] { "report", "target_id" };
    private static readonly uint[] _reportPlayerRequestFieldTags = new uint[] { 18, 10 };
    public static ReportPlayerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportPlayerRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReportPlayerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportPlayerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportPlayerRequest, ReportPlayerRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportPlayerRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_; }
    }
    
    public const int ReportFieldNumber = 2;
    private bool hasReport;
    private global::bnet.protocol.user_manager.PlayerReport report_ = global::bnet.protocol.user_manager.PlayerReport.DefaultInstance;
    public bool HasReport {
      get { return hasReport; }
    }
    public global::bnet.protocol.user_manager.PlayerReport Report {
      get { return report_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!hasReport) return false;
        if (!TargetId.IsInitialized) return false;
        if (!Report.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportPlayerRequestFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[1], TargetId);
      }
      if (hasReport) {
        output.WriteMessage(2, field_names[0], Report);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        if (hasReport) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Report);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportPlayerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportPlayerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportPlayerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportPlayerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportPlayerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportPlayerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportPlayerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportPlayerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportPlayerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportPlayerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportPlayerRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportPlayerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReportPlayerRequest result = new ReportPlayerRequest();
      
      protected override ReportPlayerRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReportPlayerRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.ReportPlayerRequest.Descriptor; }
      }
      
      public override ReportPlayerRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.ReportPlayerRequest.DefaultInstance; }
      }
      
      public override ReportPlayerRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReportPlayerRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportPlayerRequest) {
          return MergeFrom((ReportPlayerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportPlayerRequest other) {
        if (other == global::bnet.protocol.user_manager.ReportPlayerRequest.DefaultInstance) return this;
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasReport) {
          MergeReport(other.Report);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportPlayerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportPlayerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.user_manager.PlayerReport.Builder subBuilder = global::bnet.protocol.user_manager.PlayerReport.CreateBuilder();
              if (result.hasReport) {
                subBuilder.MergeFrom(Report);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Report = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasReport {
       get { return result.hasReport; }
      }
      public global::bnet.protocol.user_manager.PlayerReport Report {
        get { return result.Report; }
        set { SetReport(value); }
      }
      public Builder SetReport(global::bnet.protocol.user_manager.PlayerReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReport = true;
        result.report_ = value;
        return this;
      }
      public Builder SetReport(global::bnet.protocol.user_manager.PlayerReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasReport = true;
        result.report_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReport(global::bnet.protocol.user_manager.PlayerReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasReport &&
            result.report_ != global::bnet.protocol.user_manager.PlayerReport.DefaultInstance) {
            result.report_ = global::bnet.protocol.user_manager.PlayerReport.CreateBuilder(result.report_).MergeFrom(value).BuildPartial();
        } else {
          result.report_ = value;
        }
        result.hasReport = true;
        return this;
      }
      public Builder ClearReport() {
        result.hasReport = false;
        result.report_ = global::bnet.protocol.user_manager.PlayerReport.DefaultInstance;
        return this;
      }
    }
    static ReportPlayerRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class ReportPlayerResponse : pb::GeneratedMessage<ReportPlayerResponse, ReportPlayerResponse.Builder> {
    private static readonly ReportPlayerResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _reportPlayerResponseFieldNames = new string[] { "reported_user" };
    private static readonly uint[] _reportPlayerResponseFieldTags = new uint[] { 10 };
    public static ReportPlayerResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportPlayerResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReportPlayerResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportPlayerResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportPlayerResponse, ReportPlayerResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportPlayerResponse__FieldAccessorTable; }
    }
    
    public const int ReportedUserFieldNumber = 1;
    private bool hasReportedUser;
    private global::bnet.protocol.EntityId reportedUser_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasReportedUser {
      get { return hasReportedUser; }
    }
    public global::bnet.protocol.EntityId ReportedUser {
      get { return reportedUser_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasReportedUser) {
          if (!ReportedUser.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportPlayerResponseFieldNames;
      if (hasReportedUser) {
        output.WriteMessage(1, field_names[0], ReportedUser);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasReportedUser) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ReportedUser);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportPlayerResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportPlayerResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportPlayerResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportPlayerResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportPlayerResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportPlayerResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportPlayerResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportPlayerResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportPlayerResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportPlayerResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportPlayerResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportPlayerResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReportPlayerResponse result = new ReportPlayerResponse();
      
      protected override ReportPlayerResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReportPlayerResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.ReportPlayerResponse.Descriptor; }
      }
      
      public override ReportPlayerResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.ReportPlayerResponse.DefaultInstance; }
      }
      
      public override ReportPlayerResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReportPlayerResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportPlayerResponse) {
          return MergeFrom((ReportPlayerResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportPlayerResponse other) {
        if (other == global::bnet.protocol.user_manager.ReportPlayerResponse.DefaultInstance) return this;
        if (other.HasReportedUser) {
          MergeReportedUser(other.ReportedUser);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportPlayerResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportPlayerResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasReportedUser) {
                subBuilder.MergeFrom(ReportedUser);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReportedUser = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReportedUser {
       get { return result.hasReportedUser; }
      }
      public global::bnet.protocol.EntityId ReportedUser {
        get { return result.ReportedUser; }
        set { SetReportedUser(value); }
      }
      public Builder SetReportedUser(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReportedUser = true;
        result.reportedUser_ = value;
        return this;
      }
      public Builder SetReportedUser(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasReportedUser = true;
        result.reportedUser_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReportedUser(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasReportedUser &&
            result.reportedUser_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.reportedUser_ = global::bnet.protocol.EntityId.CreateBuilder(result.reportedUser_).MergeFrom(value).BuildPartial();
        } else {
          result.reportedUser_ = value;
        }
        result.hasReportedUser = true;
        return this;
      }
      public Builder ClearReportedUser() {
        result.hasReportedUser = false;
        result.reportedUser_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static ReportPlayerResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class CheckPlayerBlockRequest : pb::GeneratedMessage<CheckPlayerBlockRequest, CheckPlayerBlockRequest.Builder> {
    private static readonly CheckPlayerBlockRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _checkPlayerBlockRequestFieldNames = new string[] { "target_id" };
    private static readonly uint[] _checkPlayerBlockRequestFieldTags = new uint[] { 10 };
    public static CheckPlayerBlockRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CheckPlayerBlockRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CheckPlayerBlockRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_CheckPlayerBlockRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CheckPlayerBlockRequest, CheckPlayerBlockRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_CheckPlayerBlockRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!TargetId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _checkPlayerBlockRequestFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[0], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CheckPlayerBlockRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CheckPlayerBlockRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CheckPlayerBlockRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<CheckPlayerBlockRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CheckPlayerBlockRequest result = new CheckPlayerBlockRequest();
      
      protected override CheckPlayerBlockRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CheckPlayerBlockRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.CheckPlayerBlockRequest.Descriptor; }
      }
      
      public override CheckPlayerBlockRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.CheckPlayerBlockRequest.DefaultInstance; }
      }
      
      public override CheckPlayerBlockRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CheckPlayerBlockRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CheckPlayerBlockRequest) {
          return MergeFrom((CheckPlayerBlockRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CheckPlayerBlockRequest other) {
        if (other == global::bnet.protocol.user_manager.CheckPlayerBlockRequest.DefaultInstance) return this;
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_checkPlayerBlockRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _checkPlayerBlockRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static CheckPlayerBlockRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class CheckPlayerBlockResponse : pb::GeneratedMessage<CheckPlayerBlockResponse, CheckPlayerBlockResponse.Builder> {
    private static readonly CheckPlayerBlockResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _checkPlayerBlockResponseFieldNames = new string[] { "blocked_user" };
    private static readonly uint[] _checkPlayerBlockResponseFieldTags = new uint[] { 10 };
    public static CheckPlayerBlockResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CheckPlayerBlockResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CheckPlayerBlockResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_CheckPlayerBlockResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CheckPlayerBlockResponse, CheckPlayerBlockResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_CheckPlayerBlockResponse__FieldAccessorTable; }
    }
    
    public const int BlockedUserFieldNumber = 1;
    private bool hasBlockedUser;
    private global::bnet.protocol.EntityId blockedUser_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBlockedUser {
      get { return hasBlockedUser; }
    }
    public global::bnet.protocol.EntityId BlockedUser {
      get { return blockedUser_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasBlockedUser) {
          if (!BlockedUser.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _checkPlayerBlockResponseFieldNames;
      if (hasBlockedUser) {
        output.WriteMessage(1, field_names[0], BlockedUser);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBlockedUser) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, BlockedUser);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CheckPlayerBlockResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CheckPlayerBlockResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CheckPlayerBlockResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<CheckPlayerBlockResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CheckPlayerBlockResponse result = new CheckPlayerBlockResponse();
      
      protected override CheckPlayerBlockResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CheckPlayerBlockResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.CheckPlayerBlockResponse.Descriptor; }
      }
      
      public override CheckPlayerBlockResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.CheckPlayerBlockResponse.DefaultInstance; }
      }
      
      public override CheckPlayerBlockResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CheckPlayerBlockResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CheckPlayerBlockResponse) {
          return MergeFrom((CheckPlayerBlockResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CheckPlayerBlockResponse other) {
        if (other == global::bnet.protocol.user_manager.CheckPlayerBlockResponse.DefaultInstance) return this;
        if (other.HasBlockedUser) {
          MergeBlockedUser(other.BlockedUser);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_checkPlayerBlockResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _checkPlayerBlockResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBlockedUser) {
                subBuilder.MergeFrom(BlockedUser);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BlockedUser = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBlockedUser {
       get { return result.hasBlockedUser; }
      }
      public global::bnet.protocol.EntityId BlockedUser {
        get { return result.BlockedUser; }
        set { SetBlockedUser(value); }
      }
      public Builder SetBlockedUser(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBlockedUser = true;
        result.blockedUser_ = value;
        return this;
      }
      public Builder SetBlockedUser(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBlockedUser = true;
        result.blockedUser_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBlockedUser(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBlockedUser &&
            result.blockedUser_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.blockedUser_ = global::bnet.protocol.EntityId.CreateBuilder(result.blockedUser_).MergeFrom(value).BuildPartial();
        } else {
          result.blockedUser_ = value;
        }
        result.hasBlockedUser = true;
        return this;
      }
      public Builder ClearBlockedUser() {
        result.hasBlockedUser = false;
        result.blockedUser_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static CheckPlayerBlockResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class BlockPlayerRequest : pb::GeneratedMessage<BlockPlayerRequest, BlockPlayerRequest.Builder> {
    private static readonly BlockPlayerRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _blockPlayerRequestFieldNames = new string[] { "target_id" };
    private static readonly uint[] _blockPlayerRequestFieldTags = new uint[] { 10 };
    public static BlockPlayerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockPlayerRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override BlockPlayerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_BlockPlayerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockPlayerRequest, BlockPlayerRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_BlockPlayerRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!TargetId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _blockPlayerRequestFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[0], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BlockPlayerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockPlayerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockPlayerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockPlayerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockPlayerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockPlayerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockPlayerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockPlayerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockPlayerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockPlayerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockPlayerRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockPlayerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      BlockPlayerRequest result = new BlockPlayerRequest();
      
      protected override BlockPlayerRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new BlockPlayerRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.BlockPlayerRequest.Descriptor; }
      }
      
      public override BlockPlayerRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.BlockPlayerRequest.DefaultInstance; }
      }
      
      public override BlockPlayerRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        BlockPlayerRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BlockPlayerRequest) {
          return MergeFrom((BlockPlayerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BlockPlayerRequest other) {
        if (other == global::bnet.protocol.user_manager.BlockPlayerRequest.DefaultInstance) return this;
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_blockPlayerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _blockPlayerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static BlockPlayerRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class BlockPlayerResponse : pb::GeneratedMessage<BlockPlayerResponse, BlockPlayerResponse.Builder> {
    private static readonly BlockPlayerResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _blockPlayerResponseFieldNames = new string[] { "blocked_user" };
    private static readonly uint[] _blockPlayerResponseFieldTags = new uint[] { 10 };
    public static BlockPlayerResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockPlayerResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override BlockPlayerResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_BlockPlayerResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockPlayerResponse, BlockPlayerResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_BlockPlayerResponse__FieldAccessorTable; }
    }
    
    public const int BlockedUserFieldNumber = 1;
    private bool hasBlockedUser;
    private global::bnet.protocol.EntityId blockedUser_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBlockedUser {
      get { return hasBlockedUser; }
    }
    public global::bnet.protocol.EntityId BlockedUser {
      get { return blockedUser_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasBlockedUser) {
          if (!BlockedUser.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _blockPlayerResponseFieldNames;
      if (hasBlockedUser) {
        output.WriteMessage(1, field_names[0], BlockedUser);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBlockedUser) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, BlockedUser);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BlockPlayerResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockPlayerResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockPlayerResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockPlayerResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockPlayerResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockPlayerResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockPlayerResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockPlayerResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockPlayerResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockPlayerResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockPlayerResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockPlayerResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      BlockPlayerResponse result = new BlockPlayerResponse();
      
      protected override BlockPlayerResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new BlockPlayerResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.BlockPlayerResponse.Descriptor; }
      }
      
      public override BlockPlayerResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.BlockPlayerResponse.DefaultInstance; }
      }
      
      public override BlockPlayerResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        BlockPlayerResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BlockPlayerResponse) {
          return MergeFrom((BlockPlayerResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BlockPlayerResponse other) {
        if (other == global::bnet.protocol.user_manager.BlockPlayerResponse.DefaultInstance) return this;
        if (other.HasBlockedUser) {
          MergeBlockedUser(other.BlockedUser);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_blockPlayerResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _blockPlayerResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBlockedUser) {
                subBuilder.MergeFrom(BlockedUser);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BlockedUser = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBlockedUser {
       get { return result.hasBlockedUser; }
      }
      public global::bnet.protocol.EntityId BlockedUser {
        get { return result.BlockedUser; }
        set { SetBlockedUser(value); }
      }
      public Builder SetBlockedUser(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBlockedUser = true;
        result.blockedUser_ = value;
        return this;
      }
      public Builder SetBlockedUser(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBlockedUser = true;
        result.blockedUser_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBlockedUser(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBlockedUser &&
            result.blockedUser_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.blockedUser_ = global::bnet.protocol.EntityId.CreateBuilder(result.blockedUser_).MergeFrom(value).BuildPartial();
        } else {
          result.blockedUser_ = value;
        }
        result.hasBlockedUser = true;
        return this;
      }
      public Builder ClearBlockedUser() {
        result.hasBlockedUser = false;
        result.blockedUser_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static BlockPlayerResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RemovePlayerBlockRequest : pb::GeneratedMessage<RemovePlayerBlockRequest, RemovePlayerBlockRequest.Builder> {
    private static readonly RemovePlayerBlockRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _removePlayerBlockRequestFieldNames = new string[] { "target_id" };
    private static readonly uint[] _removePlayerBlockRequestFieldTags = new uint[] { 10 };
    public static RemovePlayerBlockRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemovePlayerBlockRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RemovePlayerBlockRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemovePlayerBlockRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemovePlayerBlockRequest, RemovePlayerBlockRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemovePlayerBlockRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!TargetId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removePlayerBlockRequestFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[0], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemovePlayerBlockRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemovePlayerBlockRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemovePlayerBlockRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemovePlayerBlockRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RemovePlayerBlockRequest result = new RemovePlayerBlockRequest();
      
      protected override RemovePlayerBlockRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RemovePlayerBlockRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RemovePlayerBlockRequest.Descriptor; }
      }
      
      public override RemovePlayerBlockRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RemovePlayerBlockRequest.DefaultInstance; }
      }
      
      public override RemovePlayerBlockRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RemovePlayerBlockRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemovePlayerBlockRequest) {
          return MergeFrom((RemovePlayerBlockRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemovePlayerBlockRequest other) {
        if (other == global::bnet.protocol.user_manager.RemovePlayerBlockRequest.DefaultInstance) return this;
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removePlayerBlockRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removePlayerBlockRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static RemovePlayerBlockRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RemovePlayerBlockResponse : pb::GeneratedMessage<RemovePlayerBlockResponse, RemovePlayerBlockResponse.Builder> {
    private static readonly RemovePlayerBlockResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _removePlayerBlockResponseFieldNames = new string[] { "blocked_user" };
    private static readonly uint[] _removePlayerBlockResponseFieldTags = new uint[] { 10 };
    public static RemovePlayerBlockResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemovePlayerBlockResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RemovePlayerBlockResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemovePlayerBlockResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemovePlayerBlockResponse, RemovePlayerBlockResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemovePlayerBlockResponse__FieldAccessorTable; }
    }
    
    public const int BlockedUserFieldNumber = 1;
    private bool hasBlockedUser;
    private global::bnet.protocol.EntityId blockedUser_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBlockedUser {
      get { return hasBlockedUser; }
    }
    public global::bnet.protocol.EntityId BlockedUser {
      get { return blockedUser_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasBlockedUser) {
          if (!BlockedUser.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removePlayerBlockResponseFieldNames;
      if (hasBlockedUser) {
        output.WriteMessage(1, field_names[0], BlockedUser);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBlockedUser) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, BlockedUser);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemovePlayerBlockResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemovePlayerBlockResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemovePlayerBlockResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemovePlayerBlockResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RemovePlayerBlockResponse result = new RemovePlayerBlockResponse();
      
      protected override RemovePlayerBlockResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RemovePlayerBlockResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RemovePlayerBlockResponse.Descriptor; }
      }
      
      public override RemovePlayerBlockResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RemovePlayerBlockResponse.DefaultInstance; }
      }
      
      public override RemovePlayerBlockResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RemovePlayerBlockResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemovePlayerBlockResponse) {
          return MergeFrom((RemovePlayerBlockResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemovePlayerBlockResponse other) {
        if (other == global::bnet.protocol.user_manager.RemovePlayerBlockResponse.DefaultInstance) return this;
        if (other.HasBlockedUser) {
          MergeBlockedUser(other.BlockedUser);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removePlayerBlockResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removePlayerBlockResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBlockedUser) {
                subBuilder.MergeFrom(BlockedUser);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BlockedUser = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBlockedUser {
       get { return result.hasBlockedUser; }
      }
      public global::bnet.protocol.EntityId BlockedUser {
        get { return result.BlockedUser; }
        set { SetBlockedUser(value); }
      }
      public Builder SetBlockedUser(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBlockedUser = true;
        result.blockedUser_ = value;
        return this;
      }
      public Builder SetBlockedUser(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBlockedUser = true;
        result.blockedUser_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBlockedUser(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.hasBlockedUser &&
            result.blockedUser_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.blockedUser_ = global::bnet.protocol.EntityId.CreateBuilder(result.blockedUser_).MergeFrom(value).BuildPartial();
        } else {
          result.blockedUser_ = value;
        }
        result.hasBlockedUser = true;
        return this;
      }
      public Builder ClearBlockedUser() {
        result.hasBlockedUser = false;
        result.blockedUser_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static RemovePlayerBlockResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class AddRecentPlayersRequest : pb::GeneratedMessage<AddRecentPlayersRequest, AddRecentPlayersRequest.Builder> {
    private static readonly AddRecentPlayersRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _addRecentPlayersRequestFieldNames = new string[] { "players" };
    private static readonly uint[] _addRecentPlayersRequestFieldTags = new uint[] { 10 };
    public static AddRecentPlayersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddRecentPlayersRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AddRecentPlayersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddRecentPlayersRequest, AddRecentPlayersRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable; }
    }
    
    public const int PlayersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> players_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
      get { return players_; }
    }
    public int PlayersCount {
      get { return players_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
      return players_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addRecentPlayersRequestFieldNames;
      if (players_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], players_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddRecentPlayersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddRecentPlayersRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddRecentPlayersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AddRecentPlayersRequest result = new AddRecentPlayersRequest();
      
      protected override AddRecentPlayersRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AddRecentPlayersRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersRequest.Descriptor; }
      }
      
      public override AddRecentPlayersRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance; }
      }
      
      public override AddRecentPlayersRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.players_.MakeReadOnly();
        AddRecentPlayersRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddRecentPlayersRequest) {
          return MergeFrom((AddRecentPlayersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddRecentPlayersRequest other) {
        if (other == global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance) return this;
        if (other.players_.Count != 0) {
          base.AddRange(other.players_, result.players_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addRecentPlayersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addRecentPlayersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.players_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
        get { return result.players_; }
      }
      public int PlayersCount {
        get { return result.PlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
        return result.GetPlayers(index);
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.players_[index] = value;
        return this;
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.players_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.players_.Add(value);
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.players_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        base.AddRange(values, result.players_);
        return this;
      }
      public Builder ClearPlayers() {
        result.players_.Clear();
        return this;
      }
    }
    static AddRecentPlayersRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class AddRecentPlayersResponse : pb::GeneratedMessage<AddRecentPlayersResponse, AddRecentPlayersResponse.Builder> {
    private static readonly AddRecentPlayersResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _addRecentPlayersResponseFieldNames = new string[] { "players_added", "players_removed" };
    private static readonly uint[] _addRecentPlayersResponseFieldTags = new uint[] { 10, 26 };
    public static AddRecentPlayersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddRecentPlayersResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AddRecentPlayersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddRecentPlayersResponse, AddRecentPlayersResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable; }
    }
    
    public const int PlayersAddedFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> playersAdded_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersAddedList {
      get { return playersAdded_; }
    }
    public int PlayersAddedCount {
      get { return playersAdded_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayersAdded(int index) {
      return playersAdded_[index];
    }
    
    public const int PlayersRemovedFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> playersRemoved_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersRemovedList {
      get { return playersRemoved_; }
    }
    public int PlayersRemovedCount {
      get { return playersRemoved_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayersRemoved(int index) {
      return playersRemoved_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersAddedList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersRemovedList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addRecentPlayersResponseFieldNames;
      if (playersAdded_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], playersAdded_);
      }
      if (playersRemoved_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], playersRemoved_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersAddedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersRemovedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddRecentPlayersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddRecentPlayersResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddRecentPlayersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AddRecentPlayersResponse result = new AddRecentPlayersResponse();
      
      protected override AddRecentPlayersResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AddRecentPlayersResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersResponse.Descriptor; }
      }
      
      public override AddRecentPlayersResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance; }
      }
      
      public override AddRecentPlayersResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.playersAdded_.MakeReadOnly();
        result.playersRemoved_.MakeReadOnly();
        AddRecentPlayersResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddRecentPlayersResponse) {
          return MergeFrom((AddRecentPlayersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddRecentPlayersResponse other) {
        if (other == global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance) return this;
        if (other.playersAdded_.Count != 0) {
          base.AddRange(other.playersAdded_, result.playersAdded_);
        }
        if (other.playersRemoved_.Count != 0) {
          base.AddRange(other.playersRemoved_, result.playersRemoved_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addRecentPlayersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addRecentPlayersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.playersAdded_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.playersRemoved_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersAddedList {
        get { return result.playersAdded_; }
      }
      public int PlayersAddedCount {
        get { return result.PlayersAddedCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayersAdded(int index) {
        return result.GetPlayersAdded(index);
      }
      public Builder SetPlayersAdded(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.playersAdded_[index] = value;
        return this;
      }
      public Builder SetPlayersAdded(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.playersAdded_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayersAdded(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.playersAdded_.Add(value);
        return this;
      }
      public Builder AddPlayersAdded(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.playersAdded_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayersAdded(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        base.AddRange(values, result.playersAdded_);
        return this;
      }
      public Builder ClearPlayersAdded() {
        result.playersAdded_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersRemovedList {
        get { return result.playersRemoved_; }
      }
      public int PlayersRemovedCount {
        get { return result.PlayersRemovedCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayersRemoved(int index) {
        return result.GetPlayersRemoved(index);
      }
      public Builder SetPlayersRemoved(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.playersRemoved_[index] = value;
        return this;
      }
      public Builder SetPlayersRemoved(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.playersRemoved_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayersRemoved(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.playersRemoved_.Add(value);
        return this;
      }
      public Builder AddPlayersRemoved(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.playersRemoved_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayersRemoved(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        base.AddRange(values, result.playersRemoved_);
        return this;
      }
      public Builder ClearPlayersRemoved() {
        result.playersRemoved_.Clear();
        return this;
      }
    }
    static AddRecentPlayersResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RemoveRecentPlayersRequest : pb::GeneratedMessage<RemoveRecentPlayersRequest, RemoveRecentPlayersRequest.Builder> {
    private static readonly RemoveRecentPlayersRequest defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _removeRecentPlayersRequestFieldNames = new string[] { "players" };
    private static readonly uint[] _removeRecentPlayersRequestFieldTags = new uint[] { 18 };
    public static RemoveRecentPlayersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveRecentPlayersRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RemoveRecentPlayersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveRecentPlayersRequest, RemoveRecentPlayersRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__FieldAccessorTable; }
    }
    
    public const int PlayersFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> players_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
      get { return players_; }
    }
    public int PlayersCount {
      get { return players_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
      return players_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removeRecentPlayersRequestFieldNames;
      if (players_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], players_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemoveRecentPlayersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveRecentPlayersRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveRecentPlayersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RemoveRecentPlayersRequest result = new RemoveRecentPlayersRequest();
      
      protected override RemoveRecentPlayersRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RemoveRecentPlayersRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.Descriptor; }
      }
      
      public override RemoveRecentPlayersRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.DefaultInstance; }
      }
      
      public override RemoveRecentPlayersRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.players_.MakeReadOnly();
        RemoveRecentPlayersRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveRecentPlayersRequest) {
          return MergeFrom((RemoveRecentPlayersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveRecentPlayersRequest other) {
        if (other == global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.DefaultInstance) return this;
        if (other.players_.Count != 0) {
          base.AddRange(other.players_, result.players_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeRecentPlayersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeRecentPlayersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.players_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
        get { return result.players_; }
      }
      public int PlayersCount {
        get { return result.PlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
        return result.GetPlayers(index);
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.players_[index] = value;
        return this;
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.players_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.players_.Add(value);
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.players_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        base.AddRange(values, result.players_);
        return this;
      }
      public Builder ClearPlayers() {
        result.players_.Clear();
        return this;
      }
    }
    static RemoveRecentPlayersRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class RemoveRecentPlayersResponse : pb::GeneratedMessage<RemoveRecentPlayersResponse, RemoveRecentPlayersResponse.Builder> {
    private static readonly RemoveRecentPlayersResponse defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _removeRecentPlayersResponseFieldNames = new string[] { "players_removed" };
    private static readonly uint[] _removeRecentPlayersResponseFieldTags = new uint[] { 10 };
    public static RemoveRecentPlayersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveRecentPlayersResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RemoveRecentPlayersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveRecentPlayersResponse, RemoveRecentPlayersResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__FieldAccessorTable; }
    }
    
    public const int PlayersRemovedFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> playersRemoved_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersRemovedList {
      get { return playersRemoved_; }
    }
    public int PlayersRemovedCount {
      get { return playersRemoved_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayersRemoved(int index) {
      return playersRemoved_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersRemovedList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removeRecentPlayersResponseFieldNames;
      if (playersRemoved_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], playersRemoved_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersRemovedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemoveRecentPlayersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveRecentPlayersResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveRecentPlayersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RemoveRecentPlayersResponse result = new RemoveRecentPlayersResponse();
      
      protected override RemoveRecentPlayersResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RemoveRecentPlayersResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.Descriptor; }
      }
      
      public override RemoveRecentPlayersResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance; }
      }
      
      public override RemoveRecentPlayersResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.playersRemoved_.MakeReadOnly();
        RemoveRecentPlayersResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveRecentPlayersResponse) {
          return MergeFrom((RemoveRecentPlayersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveRecentPlayersResponse other) {
        if (other == global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance) return this;
        if (other.playersRemoved_.Count != 0) {
          base.AddRange(other.playersRemoved_, result.playersRemoved_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeRecentPlayersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeRecentPlayersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.playersRemoved_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersRemovedList {
        get { return result.playersRemoved_; }
      }
      public int PlayersRemovedCount {
        get { return result.PlayersRemovedCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayersRemoved(int index) {
        return result.GetPlayersRemoved(index);
      }
      public Builder SetPlayersRemoved(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.playersRemoved_[index] = value;
        return this;
      }
      public Builder SetPlayersRemoved(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.playersRemoved_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayersRemoved(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.playersRemoved_.Add(value);
        return this;
      }
      public Builder AddPlayersRemoved(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.playersRemoved_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayersRemoved(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        base.AddRange(values, result.playersRemoved_);
        return this;
      }
      public Builder ClearPlayersRemoved() {
        result.playersRemoved_.Clear();
        return this;
      }
    }
    static RemoveRecentPlayersResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class BlockedPlayerNotification : pb::GeneratedMessage<BlockedPlayerNotification, BlockedPlayerNotification.Builder> {
    private static readonly BlockedPlayerNotification defaultInstance = new Builder().BuildPartial();
    private static readonly string[] _blockedPlayerNotificationFieldNames = new string[] { "players" };
    private static readonly uint[] _blockedPlayerNotificationFieldTags = new uint[] { 10 };
    public static BlockedPlayerNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockedPlayerNotification DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override BlockedPlayerNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_BlockedPlayerNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockedPlayerNotification, BlockedPlayerNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_BlockedPlayerNotification__FieldAccessorTable; }
    }
    
    public const int PlayersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> players_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> PlayersList {
      get { return players_; }
    }
    public int PlayersCount {
      get { return players_.Count; }
    }
    public global::bnet.protocol.EntityId GetPlayers(int index) {
      return players_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in PlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _blockedPlayerNotificationFieldNames;
      if (players_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], players_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in PlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BlockedPlayerNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockedPlayerNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockedPlayerNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockedPlayerNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockedPlayerNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockedPlayerNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockedPlayerNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockedPlayerNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockedPlayerNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockedPlayerNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockedPlayerNotification prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockedPlayerNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      BlockedPlayerNotification result = new BlockedPlayerNotification();
      
      protected override BlockedPlayerNotification MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new BlockedPlayerNotification();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.BlockedPlayerNotification.Descriptor; }
      }
      
      public override BlockedPlayerNotification DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.BlockedPlayerNotification.DefaultInstance; }
      }
      
      public override BlockedPlayerNotification BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.players_.MakeReadOnly();
        BlockedPlayerNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BlockedPlayerNotification) {
          return MergeFrom((BlockedPlayerNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BlockedPlayerNotification other) {
        if (other == global::bnet.protocol.user_manager.BlockedPlayerNotification.DefaultInstance) return this;
        if (other.players_.Count != 0) {
          base.AddRange(other.players_, result.players_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_blockedPlayerNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _blockedPlayerNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.players_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> PlayersList {
        get { return result.players_; }
      }
      public int PlayersCount {
        get { return result.PlayersCount; }
      }
      public global::bnet.protocol.EntityId GetPlayers(int index) {
        return result.GetPlayers(index);
      }
      public Builder SetPlayers(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.players_[index] = value;
        return this;
      }
      public Builder SetPlayers(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.players_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.players_.Add(value);
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.players_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayers(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        base.AddRange(values, result.players_);
        return this;
      }
      public Builder ClearPlayers() {
        result.players_.Clear();
        return this;
      }
    }
    static BlockedPlayerNotification() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public abstract class UserManagerService : pb::IService {
    public abstract void SubscribeToUserManager(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.SubscribeToUserManagerRequest request,
        global::System.Action<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse> done);
    public abstract void ReportPlayer(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.ReportPlayerRequest request,
        global::System.Action<global::bnet.protocol.user_manager.ReportPlayerResponse> done);
    public abstract void BlockPlayer(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.BlockPlayerRequest request,
        global::System.Action<global::bnet.protocol.user_manager.BlockPlayerResponse> done);
    public abstract void RemovePlayerBlock(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.RemovePlayerBlockRequest request,
        global::System.Action<global::bnet.protocol.user_manager.RemovePlayerBlockResponse> done);
    public abstract void AddRecentPlayers(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.AddRecentPlayersRequest request,
        global::System.Action<global::bnet.protocol.user_manager.AddRecentPlayersResponse> done);
    public abstract void RemoveRecentPlayers(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.RemoveRecentPlayersRequest request,
        global::System.Action<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return UserManager.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.SubscribeToUserManager(controller, (global::bnet.protocol.user_manager.SubscribeToUserManagerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse>(
              done));
          return;
        case 1:
          this.ReportPlayer(controller, (global::bnet.protocol.user_manager.ReportPlayerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.ReportPlayerResponse>(
              done));
          return;
        case 2:
          this.BlockPlayer(controller, (global::bnet.protocol.user_manager.BlockPlayerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.BlockPlayerResponse>(
              done));
          return;
        case 3:
          this.RemovePlayerBlock(controller, (global::bnet.protocol.user_manager.RemovePlayerBlockRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.RemovePlayerBlockResponse>(
              done));
          return;
        case 4:
          this.AddRecentPlayers(controller, (global::bnet.protocol.user_manager.AddRecentPlayersRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.AddRecentPlayersResponse>(
              done));
          return;
        case 5:
          this.RemoveRecentPlayers(controller, (global::bnet.protocol.user_manager.RemoveRecentPlayersRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.ReportPlayerRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.user_manager.BlockPlayerRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.user_manager.RemovePlayerBlockRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance;
        case 5:
          return global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.ReportPlayerResponse.DefaultInstance;
        case 2:
          return global::bnet.protocol.user_manager.BlockPlayerResponse.DefaultInstance;
        case 3:
          return global::bnet.protocol.user_manager.RemovePlayerBlockResponse.DefaultInstance;
        case 4:
          return global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance;
        case 5:
          return global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public class Stub : global::bnet.protocol.user_manager.UserManagerService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void SubscribeToUserManager(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.SubscribeToUserManagerRequest request,
          global::System.Action<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder>(done, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance));
      }
      
      public override void ReportPlayer(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.ReportPlayerRequest request,
          global::System.Action<global::bnet.protocol.user_manager.ReportPlayerResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.user_manager.ReportPlayerResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.ReportPlayerResponse, global::bnet.protocol.user_manager.ReportPlayerResponse.Builder>(done, global::bnet.protocol.user_manager.ReportPlayerResponse.DefaultInstance));
      }
      
      public override void BlockPlayer(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.BlockPlayerRequest request,
          global::System.Action<global::bnet.protocol.user_manager.BlockPlayerResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.user_manager.BlockPlayerResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.BlockPlayerResponse, global::bnet.protocol.user_manager.BlockPlayerResponse.Builder>(done, global::bnet.protocol.user_manager.BlockPlayerResponse.DefaultInstance));
      }
      
      public override void RemovePlayerBlock(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.RemovePlayerBlockRequest request,
          global::System.Action<global::bnet.protocol.user_manager.RemovePlayerBlockResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.user_manager.RemovePlayerBlockResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.RemovePlayerBlockResponse, global::bnet.protocol.user_manager.RemovePlayerBlockResponse.Builder>(done, global::bnet.protocol.user_manager.RemovePlayerBlockResponse.DefaultInstance));
      }
      
      public override void AddRecentPlayers(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.AddRecentPlayersRequest request,
          global::System.Action<global::bnet.protocol.user_manager.AddRecentPlayersResponse> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder>(done, global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance));
      }
      
      public override void RemoveRecentPlayers(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.RemoveRecentPlayersRequest request,
          global::System.Action<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.Builder>(done, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public abstract class UserManagerNotify : pb::IService {
    public abstract void NotifyPlayerBlocked(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.BlockedPlayerNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyPlayerBlockRemoved(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.BlockedPlayerNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return UserManager.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyPlayerBlocked(controller, (global::bnet.protocol.user_manager.BlockedPlayerNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.NotifyPlayerBlockRemoved(controller, (global::bnet.protocol.user_manager.BlockedPlayerNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.BlockedPlayerNotification.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.BlockedPlayerNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public class Stub : global::bnet.protocol.user_manager.UserManagerNotify {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyPlayerBlocked(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.BlockedPlayerNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyPlayerBlockRemoved(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.BlockedPlayerNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
